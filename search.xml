<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Arxiv每日速递(2021-11-03)</title>
      <link href="/2021/11/03/Arxiv%E6%AF%8F%E6%97%A5%E9%80%9F%E9%80%92.html"/>
      <url>/2021/11/03/Arxiv%E6%AF%8F%E6%97%A5%E9%80%9F%E9%80%92.html</url>
      
        <content type="html"><![CDATA[<p>本篇博文主要展示每日从Arxiv论文网站获取的最新论文列表，以计算机视觉、自然语言处理、机器学习、人工智能等大方向进行划分。</p><h1>统计</h1><p>今日共更新495篇论文，其中：</p><ul><li>117篇计算机视觉（<a href="http://cs.CV">cs.CV</a>）</li><li>50篇自然语言处理（<a href="http://cs.CL">cs.CL</a>）</li><li>191篇机器学习（cs.LG）</li><li>108篇人工智能（<a href="http://cs.AI">cs.AI</a>）</li></ul><h1>计算机视觉</h1><details>  <summary>1. <b>标题：When Does Contrastive Learning Preserve Adversarial Robustness from  Pretraining to Finetuning?</b></summary>  <p><b>编号</b>：[1]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01124</p>  <p><b>作者</b>：Lijie Fan,  Sijia Liu,  Pin-Yu Chen,  Gaoyuan Zhang,  Chuang Gan</p>  <p><b>备注</b>：NeurIPS 2021. Code is available at this https URL</p>  <p><b>关键词</b>：supervised robust learning methods across multiple datasets, task robustness transferability without loss, helps preserve robustness without forgetting, novel adversarial contrastive pretraining framework, task robustness transferability '.</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Contrastive learning (CL) can learn generalizable feature representations andachieve the state-of-the-art performance of downstream tasks by finetuning alinear classifier on top of it. However, as adversarial robustness becomesvital in image classification, it remains unclear whether or not CL is able topreserve robustness to downstream tasks. The main challenge is that in theself-supervised pretraining + supervised finetuning paradigm, adversarialrobustness is easily forgotten due to a learning task mismatch from pretrainingto finetuning. We call such a challenge 'cross-task robustnesstransferability'. To address the above problem, in this paper we revisit andadvance CL principles through the lens of robustness enhancement. We show that(1) the design of contrastive views matters: High-frequency components ofimages are beneficial to improving model robustness; (2) Augmenting CL withpseudo-supervision stimulus (e.g., resorting to feature clustering) helpspreserve robustness without forgetting. Equipped with our new designs, wepropose AdvCL, a novel adversarial contrastive pretraining framework. We showthat AdvCL is able to enhance cross-task robustness transferability withoutloss of model accuracy and finetuning efficiency. With a thorough experimentalstudy, we demonstrate that AdvCL outperforms the state-of-the-artself-supervised robust learning methods across multiple datasets (CIFAR-10,CIFAR-100, and STL-10) and finetuning schemes (linear evaluation and full modelfinetuning).</p>  </details></details><details>  <summary>2. <b>标题：Rebooting ACGAN: Auxiliary Classifier GANs with Stable Training</b></summary>  <p><b>编号</b>：[3]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01118</p>  <p><b>作者</b>：Minguk Kang,  Woohyeon Shim,  Minsu Cho,  Jaesik Park</p>  <p><b>备注</b>：34 pages, 26 figures, 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：rebooted auxiliary classifier generative adversarial network, conditional generative adversarial networks, projecting input vectors onto, generate easily classifiable samples, auxiliary classifier gan</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Conditional Generative Adversarial Networks (cGAN) generate realistic imagesby incorporating class information into GAN. While one of the most popularcGANs is an auxiliary classifier GAN with softmax cross-entropy loss (ACGAN),it is widely known that training ACGAN is challenging as the number of classesin the dataset increases. ACGAN also tends to generate easily classifiablesamples with a lack of diversity. In this paper, we introduce two cures forACGAN. First, we identify that gradient exploding in the classifier can causean undesirable collapse in early training, and projecting input vectors onto aunit hypersphere can resolve the problem. Second, we propose the Data-to-DataCross-Entropy loss (D2D-CE) to exploit relational information in theclass-labeled dataset. On this foundation, we propose the Rebooted AuxiliaryClassifier Generative Adversarial Network (ReACGAN). The experimental resultsshow that ReACGAN achieves state-of-the-art generation results on CIFAR10,Tiny-ImageNet, CUB200, and ImageNet datasets. We also verify that ReACGANbenefits from differentiable augmentations and that D2D-CE harmonizes withStyleGAN2 architecture. Model weights and a software package that providesimplementations of representative cGANs and all experiments in our paper areavailable at this https URL.</p>  </details></details><details>  <summary>3. <b>标题：FREGAN : an application of generative adversarial networks in enhancing  the frame rate of videos</b></summary>  <p><b>编号</b>：[5]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01105</p>  <p><b>作者</b>：Rishik Mishra,  Neeraj Gupta,  Nitya Shukla</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：frame rate enhancement generative adversarial network, high refresh rate, high refresh rate, frame rate enhancement, structural similarity index</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>A digital video is a collection of individual frames, while streaming thevideo the scene utilized the time slice for each frame. High refresh rate andhigh frame rate is the demand of all high technology applications. The actiontracking in videos becomes easier and motion becomes smoother in gamingapplications due to the high refresh rate. It provides a faster responsebecause of less time in between each frame that is displayed on the screen.FREGAN (Frame Rate Enhancement Generative Adversarial Network) model has beenproposed, which predicts future frames of a video sequence based on a sequenceof past frames. In this paper, we investigated the GAN model and proposedFREGAN for the enhancement of frame rate in videos. We have utilized Huber lossas a loss function in the proposed FREGAN. It provided excellent results insuper-resolution and we have tried to reciprocate that performance in theapplication of frame rate enhancement. We have validated the effectiveness ofthe proposed model on the standard datasets (UCF101 and RFree500). Theexperimental outcomes illustrate that the proposed model has a Peaksignal-to-noise ratio (PSNR) of 34.94 and a Structural Similarity Index (SSIM)of 0.95.</p>  </details></details><details>  <summary>4. <b>标题：FaceScape: 3D Facial Dataset and Benchmark for Single-View 3D Face  Reconstruction</b></summary>  <p><b>编号</b>：[13]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01082</p>  <p><b>作者</b>：Hao Zhu,  Haotian Yang,  Longwei Guo,  Yidi Zhang,  Yanru Wang,  Mingkai Huang,  Qiu Shen,  Ruigang Yang,  Xun Cao</p>  <p><b>备注</b>：14 pages, 13 figures, journal extension of FaceScape(CVPR 2020). arXiv admin note: substantial text overlap with arXiv:2003.13989</p>  <p><b>关键词</b>：predict elaborate riggable 3d face models, scale detailed 3d face dataset, 3d face prediction system, 760 textured 3d faces, fine 3d facial models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this paper, we present a large-scale detailed 3D face dataset, FaceScape,and the corresponding benchmark to evaluate single-view facial 3Dreconstruction. By training on FaceScape data, a novel algorithm is proposed topredict elaborate riggable 3D face models from a single image input. FaceScapedataset provides 18,760 textured 3D faces, captured from 938 subjects and eachwith 20 specific expressions. The 3D models contain the pore-level facialgeometry that is also processed to be topologically uniformed. These fine 3Dfacial models can be represented as a 3D morphable model for rough shapes anddisplacement maps for detailed geometry. Taking advantage of the large-scaleand high-accuracy dataset, a novel algorithm is further proposed to learn theexpression-specific dynamic details using a deep neural network. The learnedrelationship serves as the foundation of our 3D face prediction system from asingle image input. Different than the previous methods, our predicted 3Dmodels are riggable with highly detailed geometry under different expressions.We also use FaceScape data to generate the in-the-wild and in-the-lab benchmarkto evaluate recent methods of single-view face reconstruction. The accuracy isreported and analyzed on the dimensions of camera pose and focal length, whichprovides a faithful and comprehensive evaluation and reveals new challenges.The unprecedented dataset, benchmark, and code have been released to the publicfor research purpose.</p>  </details></details><details>  <summary>5. <b>标题：OctField: Hierarchical Implicit Functions for 3D Modeling</b></summary>  <p><b>编号</b>：[19]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01067</p>  <p><b>作者</b>：Jia-Heng Tang,  Weikai Chen,  Jie Yang,  Bo Wang,  Songrun Liu,  Bo Yang,  Lin Gao</p>  <p><b>备注</b>：13 pages, 9 figures, NeurIPS 2021</p>  <p><b>关键词</b>：distributes local implicit functions around, enabled neural implicit representation, learnable hierarchical implicit representation, prohibitive computational cost even, memory footprint grows cubically</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recent advances in localized implicit functions have enabled neural implicitrepresentation to be scalable to large scenes. However, the regular subdivisionof 3D space employed by these approaches fails to take into account thesparsity of the surface occupancy and the varying granularities of geometricdetails. As a result, its memory footprint grows cubically with the inputvolume, leading to a prohibitive computational cost even at a moderately densedecomposition. In this work, we present a learnable hierarchical implicitrepresentation for 3D surfaces, coded OctField, that allows high-precisionencoding of intricate surfaces with low memory and computational budget. Thekey to our approach is an adaptive decomposition of 3D scenes that onlydistributes local implicit functions around the surface of interest. We achievethis goal by introducing a hierarchical octree structure to adaptivelysubdivide the 3D space according to the surface occupancy and the richness ofpart geometry. As octree is discrete and non-differentiable, we further proposea novel hierarchical network that models the subdivision of octree cells as aprobabilistic process and recursively encodes and decodes both octree structureand surface geometry in a differentiable manner. We demonstrate the value ofOctField for a range of shape modeling and reconstruction tasks, showingsuperiority over alternative approaches.</p>  </details></details><details>  <summary>6. <b>标题：MOST-GAN: 3D Morphable StyleGAN for Disentangled Face Image Manipulation</b></summary>  <p><b>编号</b>：[22]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01048</p>  <p><b>作者</b>：Safa C. Medin,  Bernhard Egger,  Anoop Cherian,  Ye Wang,  Joshua B. Tenenbaum,  Xiaoming Liu,  Tim K. Marks</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：art 2d hair manipulation network, generate strikingly photorealistic face images, nonlinear 3d morphable models, gan achieves photorealistic manipulation, priori models physical attributes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recent advances in generative adversarial networks (GANs) have led toremarkable achievements in face image synthesis. While methods that usestyle-based GANs can generate strikingly photorealistic face images, it isoften difficult to control the characteristics of the generated faces in ameaningful and disentangled way. Prior approaches aim to achieve such semanticcontrol and disentanglement within the latent space of a previously trainedGAN. In contrast, we propose a framework that a priori models physicalattributes of the face such as 3D shape, albedo, pose, and lighting explicitly,thus providing disentanglement by design. Our method, MOST-GAN, integrates theexpressive power and photorealism of style-based GANs with the physicaldisentanglement and flexibility of nonlinear 3D morphable models, which wecouple with a state-of-the-art 2D hair manipulation network. MOST-GAN achievesphotorealistic manipulation of portrait images with fully disentangled 3Dcontrol over their physical attributes, enabling extreme manipulation oflighting, facial expression, and pose variations up to full profile view.</p>  </details></details><details>  <summary>7. <b>标题：A Unified View of cGANs with and without Classifiers</b></summary>  <p><b>编号</b>：[25]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01035</p>  <p><b>作者</b>：Si-An Chen,  Chun-Liang Li,  Hsuan-Tien Lin</p>  <p><b>备注</b>：Accepted by NeurIPS 2021</p>  <p><b>关键词</b>：explains several popular cgan variants, help eliminate samples generated, conditional generative adversarial networks, proposed framework outperforms state, one popular design</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Conditional Generative Adversarial Networks (cGANs) are implicit generativemodels which allow to sample from class-conditional distributions. ExistingcGANs are based on a wide range of different discriminator designs and trainingobjectives. One popular design in earlier works is to include a classifierduring training with the assumption that good classifiers can help eliminatesamples generated with wrong classes. Nevertheless, including classifiers incGANs often comes with a side effect of only generating easy-to-classifysamples. Recently, some representative cGANs avoid the shortcoming and reachstate-of-the-art performance without having classifiers. Somehow it remainsunanswered whether the classifiers can be resurrected to design better cGANs.In this work, we demonstrate that classifiers can be properly leveraged toimprove cGANs. We start by using the decomposition of the joint probabilitydistribution to connect the goals of cGANs and classification as a unifiedframework. The framework, along with a classic energy model to parameterizedistributions, justifies the use of classifiers for cGANs in a principledmanner. It explains several popular cGAN variants, such as ACGAN, ProjGAN, andContraGAN, as special cases with different levels of approximations, whichprovides a unified view and brings new insights to understanding cGANs.Experimental results demonstrate that the design inspired by the proposedframework outperforms state-of-the-art cGANs on multiple benchmark datasets,especially on the most challenging ImageNet. The code is available atthis https URL.</p>  </details></details><details>  <summary>8. <b>标题：Render In-between: Motion Guided Video Synthesis for Action  Interpolation</b></summary>  <p><b>编号</b>：[26]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01029</p>  <p><b>作者</b>：Hsuan-I Ho,  Xu Chen,  Jie Song,  Otmar Hilliges</p>  <p><b>备注</b>：12 pages</p>  <p><b>关键词</b>：many potential applications ranging, interesting yet challenging task, art video interpolation techniques, producing realistic human motion, unpaired human motion data</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Upsampling videos of human activity is an interesting yet challenging taskwith many potential applications ranging from gaming to entertainment andsports broadcasting. The main difficulty in synthesizing video frames in thissetting stems from the highly complex and non-linear nature of human motion andthe complex appearance and texture of the body. We propose to address theseissues in a motion-guided frame-upsampling framework that is capable ofproducing realistic human motion and appearance. A novel motion model istrained to inference the non-linear skeletal motion between frames byleveraging a large-scale motion-capture dataset (AMASS). The high-frame-ratepose predictions are then used by a neural rendering pipeline to produce thefull-frame output, taking the pose and background consistency intoconsideration. Our pipeline only requires low-frame-rate videos and unpairedhuman motion data but does not require high-frame-rate videos for training.Furthermore, we contribute the first evaluation dataset that consists ofhigh-quality and high-frame-rate videos of human activities for this task.Compared with state-of-the-art video interpolation techniques, our methodproduces in-between frames with better quality and accuracy, which is evidentby state-of-the-art results on pixel-level, distributional metrics andcomparative user evaluations. Our code and the collected dataset are availableat this https URL.</p>  </details></details><details>  <summary>9. <b>标题：Introspective Distillation for Robust Question Answering</b></summary>  <p><b>编号</b>：[28]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01026</p>  <p><b>作者</b>：Yulei Niu,  Hanwang Zhang</p>  <p><b>备注</b>：Accepted by NeurIPS 2021</p>  <p><b>关键词</b>：novel debiasing method called introspective distillation, even achieving better id performance compared, recent debiasing methods achieve good, reading comprehension dataset squad demonstrate, visual qa datasets vqa v2</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Question answering (QA) models are well-known to exploit data bias, e.g., thelanguage prior in visual QA and the position bias in reading comprehension.Recent debiasing methods achieve good out-of-distribution (OOD)generalizability with a considerable sacrifice of the in-distribution (ID)performance. Therefore, they are only applicable in domains where the testdistribution is known in advance. In this paper, we present a novel debiasingmethod called Introspective Distillation (IntroD) to make the best of bothworlds for QA. Our key technical contribution is to blend the inductive bias ofOOD and ID by introspecting whether a training sample fits in the factual IDworld or the counterfactual OOD one. Experiments on visual QA datasets VQA v2,VQA-CP, and reading comprehension dataset SQuAD demonstrate that our proposedIntroD maintains the competitive OOD performance compared to other debiasingmethods, while sacrificing little or even achieving better ID performancecompared to the non-debiasing ones.</p>  </details></details><details>  <summary>10. <b>标题：With a Little Help from my Temporal Context: Multimodal Egocentric  Action Recognition</b></summary>  <p><b>编号</b>：[29]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01024</p>  <p><b>作者</b>：Evangelos Kazakos,  Jaesung Huh,  Arsha Nagrani,  Andrew Zisserman,  Dima Damen</p>  <p><b>备注</b>：Accepted at BMVC 2021</p>  <p><b>关键词</b>：explicit language model providing action sequence context, egtea datasets reporting state, incorporating audio input modality, based multimodal model, utilising temporal context</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In egocentric videos, actions occur in quick succession. We capitalise on theaction's temporal context and propose a method that learns to attend tosurrounding actions in order to improve recognition performance. To incorporatethe temporal context, we propose a transformer-based multimodal model thatingests video and audio as input modalities, with an explicit language modelproviding action sequence context to enhance the predictions. We test ourapproach on EPIC-KITCHENS and EGTEA datasets reporting state-of-the-artperformance. Our ablations showcase the advantage of utilising temporal contextas well as incorporating audio input modality and language model to rescorepredictions. Code and models at: this https URL.</p>  </details></details><details>  <summary>11. <b>标题：Projected GANs Converge Faster</b></summary>  <p><b>编号</b>：[36]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01007</p>  <p><b>作者</b>：Axel Sauer,  Kashyap Chitta,  Jens Müller,  Andreas Geiger</p>  <p><b>备注</b>：To appear in NeurIPS 2021. Project Page: this https URL</p>  <p><b>关键词</b>：discriminator cannot fully exploit features, projected gan improves image quality, mixes features across channels, art fréchet inception distance, two benchmark datasets</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Generative Adversarial Networks (GANs) produce high-quality images but arechallenging to train. They need careful regularization, vast amounts ofcompute, and expensive hyper-parameter sweeps. We make significant headway onthese issues by projecting generated and real samples into a fixed, pretrainedfeature space. Motivated by the finding that the discriminator cannot fullyexploit features from deeper layers of the pretrained model, we propose a moreeffective strategy that mixes features across channels and resolutions. OurProjected GAN improves image quality, sample efficiency, and convergence speed.It is further compatible with resolutions of up to one Megapixel and advancesthe state-of-the-art Fréchet Inception Distance (FID) on twenty-two benchmarkdatasets. Importantly, Projected GANs match the previously lowest FIDs up to 40times faster, cutting the wall-clock time from 5 days to less than 3 hoursgiven the same computational resources.</p>  </details></details><details>  <summary>12. <b>标题：Improving Contrastive Learning on Imbalanced Seed Data via Open-World  Sampling</b></summary>  <p><b>编号</b>：[37]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01004</p>  <p><b>作者</b>：Ziyu Jiang,  Tianlong Chen,  Ting Chen,  Zhangyang Wang</p>  <p><b>备注</b>：Neurips 2021</p>  <p><b>关键词</b>：world unlabeled data sampling framework called model, evaluated via linear classifier evaluation, world unlabeled data usually follows, follows three simple principles, empirical contrastive loss expectation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Contrastive learning approaches have achieved great success in learningvisual representations with few labels of the target classes. That implies atantalizing possibility of scaling them up beyond a curated "seed" benchmark,to incorporating more unlabeled images from the internet-scale external sourcesto enhance its performance. However, in practice, larger amount of unlabeleddata will require more computing resources due to the bigger model size andlonger training needed. Moreover, open-world unlabeled data usually follows animplicit long-tail class or attribute distribution, many of which also do notbelong to the target classes. Blindly leveraging all unlabeled data hence canlead to the data imbalance as well as distraction issues. This motivates us toseek a principled approach to strategically select unlabeled data from anexternal source, in order to learn generalizable, balanced and diverserepresentations for relevant classes. In this work, we present an open-worldunlabeled data sampling framework called Model-Aware K-center (MAK), whichfollows three simple principles: (1) tailness, which encourages sampling ofexamples from tail classes, by sorting the empirical contrastive lossexpectation (ECLE) of samples over random data augmentations; (2) proximity,which rejects the out-of-distribution outliers that may distract training; and(3) diversity, which ensures diversity in the set of sampled examples.Empirically, using ImageNet-100-LT (without labels) as the seed dataset and two"noisy" external data sources, we demonstrate that MAK can consistently improveboth the overall representation quality and the class balancedness of thelearned features, as evaluated via linear classifier evaluation on full-shotand few-shot settings. The code is available at:\url{this https URL</p>  </details></details><details>  <summary>13. <b>标题：Sign-to-Speech Model for Sign Language Understanding: A Case Study of  Nigerian Sign Language</b></summary>  <p><b>编号</b>：[39]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00995</p>  <p><b>作者</b>：Steven Kolawole,  Opeyemi Osakuade,  Nayan Saxena,  Babatunde Kazeem Olorisade</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：achieves impressive results converting sign words, two different object detection models, employed diverse evaluation metrics, predicted sign texts, gauge model performance</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Through this paper, we seek to reduce the communication barrier between thehearing-impaired community and the larger society who are usually not familiarwith sign language in the sub-Saharan region of Africa with the largestoccurrences of hearing disability cases, while using Nigeria as a case study.The dataset is a pioneer dataset for the Nigerian Sign Language and was createdin collaboration with relevant stakeholders. We pre-processed the data inreadiness for two different object detection models and a classification modeland employed diverse evaluation metrics to gauge model performance onsign-language to text conversion tasks. Finally, we convert the predicted signtexts to speech and deploy the best performing model in a lightweightapplication that works in real-time and achieves impressive results convertingsign words/phrases to text and subsequently, into speech.</p>  </details></details><details>  <summary>14. <b>标题：Egocentric Human Trajectory Forecasting with a Wearable Camera and  Multi-Modal Fusion</b></summary>  <p><b>编号</b>：[40]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00993</p>  <p><b>作者</b>：Jianing Qiu,  Lipeng Chen,  Xiao Gu,  Frank P.-W. Lo,  Ya-Yen Tsai,  Jiankai Sun,  Jiaqi Liu,  Benny Lo</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：novel egocentric human trajectory forecasting dataset, different camera wearers walking around, utilize three different modalities, egocentric human trajectory forecasting, decoder neural network model</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this paper, we address the problem of forecasting the trajectory of anegocentric camera wearer (ego-person) in crowded spaces. The trajectoryforecasting ability learned from the data of different camera wearers walkingaround in the real world can be transferred to assist visually impaired peoplein navigation, as well as to instill human navigation behaviours in mobilerobots, enabling better human-robot interactions. To this end, a novelegocentric human trajectory forecasting dataset was constructed, containingreal trajectories of people navigating in crowded spaces wearing a camera, aswell as extracted rich contextual data. We extract and utilize three differentmodalities to forecast the trajectory of the camera wearer, i.e., his/her pasttrajectory, the past trajectories of nearby people, and the environment such asthe scene semantics or the depth of the scene. A Transformer-basedencoder-decoder neural network model, integrated with a novel cascadedcross-attention mechanism that fuses multiple modalities, has been designed topredict the future trajectory of the camera wearer. Extensive experiments havebeen conducted, and the results have shown that our model outperforms thestate-of-the-art methods in egocentric human trajectory forecasting.</p>  </details></details><details>  <summary>15. <b>标题：Generative Occupancy Fields for 3D Surface-Aware Image Synthesis</b></summary>  <p><b>编号</b>：[50]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00969</p>  <p><b>作者</b>：Xudong Xu,  Xingang Pan,  Dahua Lin,  Bo Dai</p>  <p><b>备注</b>：Accepted to NeurIPS2021. We propose Generative Occupancy Fields(GOF), a 3D-aware generative model which could synthesize realistic images with 3D consistency and simultaneously learn compact object surfaces</p>  <p><b>关键词</b>：radiance fields occupancy representations could inherently ensure deterministic surfaces, generative models much easier since gradients, learn compact object surfaces without impeding, receive sparse gradients located, directly apply occupancy representations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The advent of generative radiance fields has significantly promoted thedevelopment of 3D-aware image synthesis. The cumulative rendering process inradiance fields makes training these generative models much easier sincegradients are distributed over the entire volume, but leads to diffused objectsurfaces. In the meantime, compared to radiance fields occupancyrepresentations could inherently ensure deterministic surfaces. However, if wedirectly apply occupancy representations to generative models, during trainingthey will only receive sparse gradients located on object surfaces andeventually suffer from the convergence problem. In this paper, we proposeGenerative Occupancy Fields (GOF), a novel model based on generative radiancefields that can learn compact object surfaces without impeding its trainingconvergence. The key insight of GOF is a dedicated transition from thecumulative rendering in radiance fields to rendering with only the surfacepoints as the learned surface gets more and more accurate. In this way, GOFcombines the merits of two representations in a unified framework. In practice,the training-time transition of start from radiance fields and march tooccupancy representations is achieved in GOF by gradually shrinking thesampling region in its rendering process from the entire volume to a minimalneighboring region around the surface. Through comprehensive experiments onmultiple datasets, we demonstrate that GOF can synthesize high-quality imageswith 3D consistency and simultaneously learn compact and smooth objectsurfaces. Code, models, and demo videos are available atthis https URL</p>  </details></details><details>  <summary>16. <b>标题：VPFNet: Voxel-Pixel Fusion Network for Multi-class 3D Object Detection</b></summary>  <p><b>编号</b>：[52]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00966</p>  <p><b>作者</b>：Chia-Hung Wang,  Hsueh-Wei Chen,  Li-Chen Fu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：class 3d object detection task, class 3d object detection network, camera sensor data streams, dl )- embedded fusion, class object detection</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Many LiDAR-based methods for detecting large objects, single-class objectdetection, or under easy situations were claimed to perform quite well.However, their performances of detecting small objects or under hard situationsdid not surpass those of the fusion-based ones due to failure to leverage theimage semantics. In order to elevate the detection performance in a complicatedenvironment, this paper proposes a deep learning (DL)-embedded fusion-basedmulti-class 3D object detection network which admits both LiDAR and camerasensor data streams, named Voxel-Pixel Fusion Network (VPFNet). Inside thisnetwork, a key novel component is called Voxel-Pixel Fusion (VPF) layer, whichtakes advantage of the geometric relation of a voxel-pixel pair and fuses thevoxel features and the pixel features with proper mechanisms. Moreover, severalparameters are particularly designed to guide and enhance the fusion effectafter considering the characteristics of a voxel-pixel pair. Finally, theproposed method is evaluated on the KITTI benchmark for multi-class 3D objectdetection task under multilevel difficulty, and is shown to outperform allstate-of-the-art methods in mean average precision (mAP). It is also noteworthythat our approach here ranks the first on the KITTI leaderboard for thechallenging pedestrian class.</p>  </details></details><details>  <summary>17. <b>标题：Higher-Order Implicit Fairing Networks for 3D Human Pose Estimation</b></summary>  <p><b>编号</b>：[58]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00950</p>  <p><b>作者</b>：Jianning Quan,  A. Ben Hamza</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：learned feature representations retain important information, two standard benchmarks demonstrate, order graph convolutional framework, approach leverages residual connections, 3d human pose estimation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Estimating a 3D human pose has proven to be a challenging task, primarilybecause of the complexity of the human body joints, occlusions, and variabilityin lighting conditions. In this paper, we introduce a higher-order graphconvolutional framework with initial residual connections for 2D-to-3D poseestimation. Using multi-hop neighborhoods for node feature aggregation, ourmodel is able to capture the long-range dependencies between body joints.Moreover, our approach leverages residual connections, which are integrated bydesign in our network architecture, ensuring that the learned featurerepresentations retain important information from the initial features of theinput layer as the network depth increases. Experiments and ablations studiesconducted on two standard benchmarks demonstrate the effectiveness of ourmodel, achieving superior performance over strong baseline methods for 3D humanpose estimation.</p>  </details></details><details>  <summary>18. <b>标题：Nested Multiple Instance Learning with Attention Mechanisms</b></summary>  <p><b>编号</b>：[59]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00947</p>  <p><b>作者</b>：Saul Fuster,  Trygve Eftestøl,  Kjersti Engan</p>  <p><b>备注</b>：Submitted to ICASSP 2022</p>  <p><b>关键词</b>：proposed model provides high accuracy performance, nested mil considers labelled bags within bags, method fits diverse applications, like finding relevant regions, classical image datasets show</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Multiple instance learning (MIL) is a type of weakly supervised learningwhere multiple instances of data with unknown labels are sorted into bags.Since knowledge about the individual instances is incomplete, labels areassigned to the bags containing the instances. While this method fits diverseapplications were labelled data is scarce, it lacks depth for solving morecomplex scenarios where associations between sets of instances have to be made,like finding relevant regions of interest in an image or detecting events in aset of time-series signals. Nested MIL considers labelled bags within bags,where only the outermost bag is labelled and inner-bags and instances arerepresented as latent labels. In addition, we propose using an attentionmechanism to add interpretability, providing awareness into the impact of eachinstance to the weak bag label. Experiments in classical image datasets showthat our proposed model provides high accuracy performance as well as spottingrelevant instances on image regions.</p>  </details></details><details>  <summary>19. <b>标题：SVBRDF Recovery From a Single Image With Highlights using a Pretrained  Generative Adversarial Network</b></summary>  <p><b>编号</b>：[63]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00943</p>  <p><b>作者</b>：Tao Wen,  Beibei Wang,  Lei Zhang,  Jie Guo,  Nicolas Holzschuch</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：stage training boosts runtime performance, unsupervised generative adversarial neural network, single image contains incomplete information, vivid rendering results compared, existing methods either rely</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Spatially-varying bi-directional reflectance distribution functions (SVBRDFs)are crucial for designers to incorporate new materials in virtual scenes,making them look more realistic. Reconstruction of SVBRDFs is a long-standingproblem. Existing methods either rely on extensive acquisition system orrequire huge datasets which are nontrivial to acquire. We aim to recoverSVBRDFs from a single image, without any datasets. A single image containsincomplete information about the SVBRDF, making the reconstruction task highlyill-posed. It is also difficult to separate between the changes in color thatare caused by the material and those caused by the illumination, without theprior knowledge learned from the dataset. In this paper, we use an unsupervisedgenerative adversarial neural network (GAN) to recover SVBRDFs maps with asingle image as input. To better separate the effects due to illumination fromthe effects due to the material, we add the hypothesis that the material isstationary and introduce a new loss function based on Fourier coefficients toenforce this stationarity. For efficiency, we train the network in two stages:reusing a trained model to initialize the SVBRDFs and fine-tune it based on theinput image. Our method generates high-quality SVBRDFs maps from a single inputphotograph, and provides more vivid rendering results compared to previouswork. The two-stage training boosts runtime performance, making it 8 timesfaster than previous work.</p>  </details></details><details>  <summary>20. <b>标题：Turning Traffic Monitoring Cameras into Intelligent Sensors for Traffic  Density Estimation</b></summary>  <p><b>编号</b>：[64]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00941</p>  <p><b>作者</b>：Zijian Hu,  William H.K. Lam,  S.C. Wong,  Andy H.F. Chow,  Wei Ma</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：estimating traffic density using uncalibrated traffic monitoring cameras, time traffic information without installing additional sensors, providing useful traffic state information, accurate traffic state information plays, traffic density estimation problem</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Accurate traffic state information plays a pivotal role in the IntelligentTransportation Systems (ITS), and it is an essential input to various smartmobility applications such as signal coordination and traffic flow prediction.The current practice to obtain the traffic state information is throughspecialized sensors such as loop detectors and speed cameras. In mostmetropolitan areas, traffic monitoring cameras have been installed to monitorthe traffic conditions on arterial roads and expressways, and the collectedvideos or images are mainly used for visual inspection by traffic engineers.Unfortunately, the data collected from traffic monitoring cameras are affectedby the 4L characteristics: Low frame rate, Low resolution, Lack of annotateddata, and Located in complex road environments. Therefore, despite the greatpotentials of the traffic monitoring cameras, the 4L characteristics hinderthem from providing useful traffic state information (e.g., speed, flow,density). This paper focuses on the traffic density estimation problem as it iswidely applicable to various traffic surveillance systems. To the best of ourknowledge, there is a lack of the holistic framework for addressing the 4Lcharacteristics and extracting the traffic density information from trafficmonitoring camera data. In view of this, this paper proposes a framework forestimating traffic density using uncalibrated traffic monitoring cameras with4L characteristics. The proposed framework consists of two major components:camera calibration and vehicle detection. The camera calibration methodestimates the actual length between pixels in the images and videos, and thevehicle counts are extracted from the deep-learning-based vehicle detectionmethod. Combining the two components, high-granular traffic density can beestimated. To validate the proposed framework, two case studies were conductedin Hong Kong and Sacramento. The results show that the Mean Absolute Error(MAE) in camera calibration is less than 0.2 meters out of 6 meters, and theaccuracy of vehicle detection under various conditions is approximately 90%.Overall, the MAE for the estimated density is 9.04 veh/km/lane in Hong Kong and1.30 veh/km/lane in Sacramento. The research outcomes can be used to calibratethe speed-density fundamental diagrams, and the proposed framework can provideaccurate and real-time traffic information without installing additionalsensors.</p>  </details></details><details>  <summary>21. <b>标题：Structure Information is the Key: Self-Attention RoI Feature Extractor  in 3D Object Detection</b></summary>  <p><b>编号</b>：[66]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00931</p>  <p><b>作者</b>：Diankun Zhang,  Zhijie Zheng,  Xueting Bi,  Xiaojun Liu,</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：3d point cloud object detection, unlike 2d object detection, attention roi feature extractor, 3d object detection, whole point cloud</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Unlike 2D object detection where all RoI features come from grid pixels, theRoI feature extraction of 3D point cloud object detection is more diverse. Inthis paper, we first compare and analyze the differences in structure andperformance between the two state-of-the-art models PV-RCNN and Voxel-RCNN.Then, we find that the performance gap between the two models does not comefrom point information, but structural information. The voxel features containmore structural information because they do quantization instead ofdownsampling to point cloud so that they can contain basically the completeinformation of the whole point cloud. The stronger structural information invoxel features makes the detector have higher performance in our experimentseven if the voxel features don't have accurate location information. Then, wepropose that structural information is the key to 3D object detection. Based onthe above conclusion, we propose a Self-Attention RoI Feature Extractor (SARFE)to enhance structural information of the feature extracted from 3D proposals.SARFE is a plug-and-play module that can be easily used on existing 3Ddetectors. Our SARFE is evaluated on both KITTI dataset and Waymo Open dataset.With the newly introduced SARFE, we improve the performance of thestate-of-the-art 3D detectors by a large margin in cyclist on KITTI datasetwhile keeping real-time capability.</p>  </details></details><details>  <summary>22. <b>标题：Combating Noise: Semi-supervised Learning by Region Uncertainty  Quantification</b></summary>  <p><b>编号</b>：[68]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00928</p>  <p><b>作者</b>：Zhenyu Wang,  Yali Li,  Ye Guo,  Shengjin Wang</p>  <p><b>备注</b>：Accepted by NeurIPS 2021</p>  <p><b>关键词</b>：promoting multipeak probability distribution output, existing works primarily focus, ms coco demonstrate, adverse effects brought, supervised learning aims</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Semi-supervised learning aims to leverage a large amount of unlabeled datafor performance boosting. Existing works primarily focus on imageclassification. In this paper, we delve into semi-supervised learning forobject detection, where labeled data are more labor-intensive to collect.Current methods are easily distracted by noisy regions generated by pseudolabels. To combat the noisy labeling, we propose noise-resistantsemi-supervised learning by quantifying the region uncertainty. We firstinvestigate the adverse effects brought by different forms of noise associatedwith pseudo labels. Then we propose to quantify the uncertainty of regions byidentifying the noise-resistant properties of regions over different strengths.By importing the region uncertainty quantification and promoting multipeakprobability distribution output, we introduce uncertainty into training andfurther achieve noise-resistant learning. Experiments on both PASCAL VOC and MSCOCO demonstrate the extraordinary performance of our method.</p>  </details></details><details>  <summary>23. <b>标题：DFCANet: Dense Feature Calibration-Attention Guided Network for Cross  Domain Iris Presentation Attack Detection</b></summary>  <p><b>编号</b>：[70]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00919</p>  <p><b>作者</b>：Gaurav Jaswal,  Aman Verma,  Sumantra Dutta Roy,  Raghavendra Ramachandra</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：domain scenarios highlights consistent outperforming results, high visual correlation amongst bonafide, widely used iris recognition systems, capitalize discriminative feature learning across, normalized ocular iris images</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>An iris presentation attack detection (IPAD) is essential for securingpersonal identity is widely used iris recognition systems. However, theexisting IPAD algorithms do not generalize well to unseen and cross-domainscenarios because of capture in unconstrained environments and high visualcorrelation amongst bonafide and attack samples. These similarities inintricate textural and morphological patterns of iris ocular images contributefurther to performance degradation. To alleviate these shortcomings, this paperproposes DFCANet: Dense Feature Calibration and Attention Guided Network whichcalibrates the locally spread iris patterns with the globally located ones.Uplifting advantages from feature calibration convolution and residuallearning, DFCANet generates domain-specific iris feature representations. Sincesome channels in the calibrated feature maps contain more prominentinformation, we capitalize discriminative feature learning across the channelsthrough the channel attention mechanism. In order to intensify the challengefor our proposed model, we make DFCANet operate over nonsegmented andnon-normalized ocular iris images. Extensive experimentation conducted overchallenging cross-domain and intra-domain scenarios highlights consistentoutperforming results. Compared to state-of-the-art methods, DFCANet achievessignificant gains in performance for the benchmark IIITD CLI, IIIT CSD andNDCLD13 databases respectively. Further, a novel incremental learning-basedmethodology has been introduced so as to overcome disentangled iris-datacharacteristics and data scarcity. This paper also pursues the challengingscenario that considers soft-lens under the attack category with evaluationperformed under various cross-domain protocols. The code will be made publiclyavailable.</p>  </details></details><details>  <summary>24. <b>标题：Multi-Attribute Balanced Sampling for Disentangled GAN Controls</b></summary>  <p><b>编号</b>：[74]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00909</p>  <p><b>作者</b>：Perla Doubinsky (CEDRIC - VERTIGO, CNAM),  Nicolas Audebert (CEDRIC - VERTIGO, CNAM),  Michel Crucianu (CEDRIC - VERTIGO, CNAM),  Hervé Le Borgne (LIST)</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：supervised approaches typically sample, extracting disentangled linear directions, occuring attributes thus balancing, two popular gan architectures, vary semantic attributes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Various controls over the generated data can be extracted from the latentspace of a pre-trained GAN, as it implicitly encodes the semantics of thetraining data. The discovered controls allow to vary semantic attributes in thegenerated images but usually lead to entangled edits that affect multipleattributes at the same time. Supervised approaches typically sample andannotate a collection of latent codes, then train classifiers in the latentspace to identify the controls. Since the data generated by GANs reflects thebiases of the original dataset, so do the resulting semantic controls. Wepropose to address disentanglement by subsampling the generated data to removeover-represented co-occuring attributes thus balancing the semantics of thedataset before training the classifiers. We demonstrate the effectiveness ofthis approach by extracting disentangled linear directions for facemanipulation on two popular GAN architectures, PGGAN and StyleGAN, and twodatasets, CelebAHQ and FFHQ. We show that this approach outperformsstate-of-the-art classifier-based methods while avoiding the need fordisentanglement-enforcing post-processing.</p>  </details></details><details>  <summary>25. <b>标题：Smart Fashion: A Review of AI Applications in the Fashion & Apparel  Industry</b></summary>  <p><b>编号</b>：[75]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00905</p>  <p><b>作者</b>：Seyed Omid Mohammadi,  Ahmad Kalhor (University of Tehran, College of Engineering, School of Electrical and Computer Engineering, Tehran, Iran)</p>  <p><b>备注</b>：99 Pages, 79 Figures, 24 Tables, Full length manuscript</p>  <p><b>关键词</b>：86 public fashion datasets accompanied, fashion research articles provides researchers, explicit research directions, 580 related articles, paper provides</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The fashion industry is on the verge of an unprecedented change. Theimplementation of machine learning, computer vision, and artificialintelligence (AI) in fashion applications is opening lots of new opportunitiesfor this industry. This paper provides a comprehensive survey on this matter,categorizing more than 580 related articles into 22 well-definedfashion-related tasks. Such structured task-based multi-label classification offashion research articles provides researchers with explicit researchdirections and facilitates their access to the related studies, improving thevisibility of studies simultaneously. For each task, a time chart is providedto analyze the progress through the years. Furthermore, we provide a list of 86public fashion datasets accompanied by a list of suggested applications andadditional information for each.</p>  </details></details><details>  <summary>26. <b>标题：PP-PicoDet: A Better Real-Time Object Detector on Mobile Devices</b></summary>  <p><b>编号</b>：[77]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00902</p>  <p><b>作者</b>：Guanghua Yu,  Qinyao Chang,  Wenyu Lv,  Chang Xu,  Cheng Cui,  Wei Ji,  Qingqing Dang,  Kaipeng Deng,  Guanzhong Wang,  Yuning Du,  Baohua Lai,  Qiwen Liu,  Xiaoguang Hu,  Dianhai Yu,  Yanjun Ma</p>  <p><b>备注</b>：9 pages, 3 figures, 5 tables</p>  <p><b>关键词</b>：150 fps using paddle lite, reducing mobile cpu inference latency, 99m parameters achieves 30, 3m parameters achieves 40, neural network architecture choices</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The better accuracy and efficiency trade-off has been a challenging problemin object detection. In this work, we are dedicated to studying keyoptimizations and neural network architecture choices for object detection toimprove accuracy and efficiency. We investigate the applicability of theanchor-free strategy on lightweight object detection models. We enhance thebackbone structure and design the lightweight structure of the neck, whichimproves the feature extraction ability of the network. We improve labelassignment strategy and loss function to make training more stable andefficient. Through these optimizations, we create a new family of real-timeobject detectors, named PP-PicoDet, which achieves superior performance onobject detection for mobile devices. Our models achieve better trade-offsbetween accuracy and latency compared to other popular models. PicoDet-S withonly 0.99M parameters achieves 30.6% mAP, which is an absolute 4.8% improvementin mAP while reducing mobile CPU inference latency by 55% compared toYOLOX-Nano, and is an absolute 7.1% improvement in mAP compared to NanoDet. Itreaches 123 FPS (150 FPS using Paddle Lite) on mobile ARM CPU when the inputsize is 320. PicoDet-L with only 3.3M parameters achieves 40.9% mAP, which isan absolute 3.7% improvement in mAP and 44% faster than YOLOv5s. As shown inFigure 1, our models far outperform the state-of-the-art results forlightweight object detection. Code and pre-trained models are available atthis https URL.</p>  </details></details><details>  <summary>27. <b>标题：Equivariant Contrastive Learning</b></summary>  <p><b>编号</b>：[80]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00899</p>  <p><b>作者</b>：Rumen Dangovski,  Li Jing,  Charlotte Loh,  Seungwook Han,  Akash Srivastava,  Brian Cheung,  Pulkit Agrawal,  Marin Soljačić</p>  <p><b>备注</b>：17 pages, 5 figures</p>  <p><b>关键词</b>：several popular computer vision benchmarks, training produces semantically good representations, applications beyond computer vision, broader class called equivariance, extend popular ssl methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In state-of-the-art self-supervised learning (SSL) pre-training producessemantically good representations by encouraging them to be invariant undermeaningful transformations prescribed from human knowledge. In fact, theproperty of invariance is a trivial instance of a broader class calledequivariance, which can be intuitively understood as the property thatrepresentations transform according to the way the inputs transform. Here, weshow that rather than using only invariance, pre-training that encouragesnon-trivial equivariance to some transformations, while maintaining invarianceto other transformations, can be used to improve the semantic quality ofrepresentations. Specifically, we extend popular SSL methods to a more generalframework which we name Equivariant Self-Supervised Learning (E-SSL). In E-SSL,a simple additional pre-training objective encourages equivariance bypredicting the transformations applied to the input. We demonstrate E-SSL'seffectiveness empirically on several popular computer vision benchmarks.Furthermore, we demonstrate usefulness of E-SSL for applications beyondcomputer vision; in particular, we show its utility on regression problems inphotonics science. We will release our code.</p>  </details></details><details>  <summary>28. <b>标题：Hierarchical Image Classification with A Literally Toy Dataset</b></summary>  <p><b>编号</b>：[82]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00892</p>  <p><b>作者</b>：Long He,  Dandan Song,  Liang Zheng</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：g ., two easily confusing classes may belong, 15 dataset contains 15 classes, variant studies provide insights, train feature extractors supervised, entirely different base classes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Unsupervised domain adaptation (UDA) in image classification remains a bigchallenge. In existing UDA image dataset, classes are usually organized in aflattened way, where a plain classifier can be trained. Yet in some scenarios,the flat categories originate from some base classes. For example, buggiesbelong to the class bird. We define the classification task where classes havecharacteristics above and the flat classes and the base classes are organizedhierarchically as hierarchical image classification. Intuitively, leveragingsuch hierarchical structure will benefit hierarchical image classification,e.g., two easily confusing classes may belong to entirely different baseclasses. In this paper, we improve the performance of classification by fusingfeatures learned from a hierarchy of labels. Specifically, we train featureextractors supervised by hierarchical labels and with UDA technology, whichwill output multiple features for an input image. The features are subsequentlyconcatenated to predict the finest-grained class. This study is conducted witha new dataset named Lego-15. Consisting of synthetic images and real images ofthe Lego bricks, the Lego-15 dataset contains 15 classes of bricks. Each classoriginates from a coarse-level label and a middle-level label. For example,class "85080" is associated with bricks (coarse) and bricks round (middle). Inthis dataset, we demonstrate that our method brings about consistentimprovement over the baseline in UDA in hierarchical image classification.Extensive ablation and variant studies provide insights into the new datasetand the investigated algorithm.</p>  </details></details><details>  <summary>29. <b>标题：Benchmarks for Corruption Invariant Person Re-identification</b></summary>  <p><b>编号</b>：[88]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00880</p>  <p><b>作者</b>：Minghui Chen,  Zhiqiang Wang,  Feng Zheng</p>  <p><b>备注</b>：Accepted by NeurIPS 2021 Track on Datasets and Benchmarks. Project page: this https URL</p>  <p><b>关键词</b>：comprehensively establish six reid benchmarks, commonly used augmentation method, 21 recent reid methods, robust towards corrupted images, learning corruption invariant representation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>When deploying person re-identification (ReID) model in safety-criticalapplications, it is pivotal to understanding the robustness of the modelagainst a diverse array of image corruptions. However, current evaluations ofperson ReID only consider the performance on clean datasets and ignore imagesin various corrupted scenarios. In this work, we comprehensively establish sixReID benchmarks for learning corruption invariant representation. In the fieldof ReID, we are the first to conduct an exhaustive study on corruptioninvariant learning in single- and cross-modality datasets, includingMarket-1501, CUHK03, MSMT17, RegDB, SYSU-MM01. After reproducing and examiningthe robustness performance of 21 recent ReID methods, we have someobservations: 1) transformer-based models are more robust towards corruptedimages, compared with CNN-based models, 2) increasing the probability of randomerasing (a commonly used augmentation method) hurts model corruptionrobustness, 3) cross-dataset generalization improves with corruption robustnessincreases. By analyzing the above observations, we propose a strong baseline onboth single- and cross-modality ReID datasets which achieves improvedrobustness against diverse corruptions. Our codes are available onthis https URL.</p>  </details></details><details>  <summary>30. <b>标题：DetectorNet: Transformer-enhanced Spatial Temporal Graph Neural Network  for Traffic Prediction</b></summary>  <p><b>编号</b>：[94]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00869</p>  <p><b>作者</b>：He Li,  Shiyu Zhang,  Xuejiao Li,  Liangcai Su,  Hongjie Huang,  Duo Jin,  Linghao Chen,  Jianbing Huang,  Jaesoo Yoo</p>  <p><b>备注</b>：The 29th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems (ACM SIGSPATIAL 2021)</p>  <p><b>关键词</b>：eventually loses much valuable potential information, data presents unique challenges including, four ablation experiments proves, static road network structure, view temporal attention module</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Detectors with high coverage have direct and far-reaching benefits for roadusers in route planning and avoiding traffic congestion, but utilizing thesedata presents unique challenges including: the dynamic temporal correlation,and the dynamic spatial correlation caused by changes in road conditions.Although the existing work considers the significance of modeling withspatial-temporal correlation, what it has learned is still a static roadnetwork structure, which cannot reflect the dynamic changes of roads, andeventually loses much valuable potential information. To address thesechallenges, we propose DetectorNet enhanced by Transformer. Differs fromprevious studies, our model contains a Multi-view Temporal Attention module anda Dynamic Attention module, which focus on the long-distance and short-distancetemporal correlation, and dynamic spatial correlation by dynamically updatingthe learned knowledge respectively, so as to make accurate prediction. Inaddition, the experimental results on two public datasets and the comparisonresults of four ablation experiments proves that the performance of DetectorNetis better than the eleven advanced baselines.</p>  </details></details><details>  <summary>31. <b>标题：MEmoBERT: Pre-training Model with Prompt-based Learning for Multimodal  Emotion Recognition</b></summary>  <p><b>编号</b>：[97]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00865</p>  <p><b>作者</b>：Jinming Zhao,  Ruichen Li,  Qin Jin,  Xinchao Wang,  Haizhou Li</p>  <p><b>备注</b>：4 papges, 2 figures</p>  <p><b>关键词</b>：proposed memobert significantly enhances emotion recognition performance, multimodal emotion recognition study, masked text prediction one, learns multimodal joint representations, downstream emotion classification task</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Multimodal emotion recognition study is hindered by the lack of labelledcorpora in terms of scale and diversity, due to the high annotation cost andlabel ambiguity. In this paper, we propose a pre-training model\textbf{MEmoBERT} for multimodal emotion recognition, which learns multimodaljoint representations through self-supervised learning from large-scaleunlabeled video data that come in sheer volume. Furthermore, unlike theconventional "pre-train, finetune" paradigm, we propose a prompt-based methodthat reformulates the downstream emotion classification task as a masked textprediction one, bringing the downstream task closer to the pre-training.Extensive experiments on two benchmark datasets, IEMOCAP and MSP-IMPROV, showthat our proposed MEmoBERT significantly enhances emotion recognitionperformance.</p>  </details></details><details>  <summary>32. <b>标题：A Frequency Perspective of Adversarial Robustness</b></summary>  <p><b>编号</b>：[99]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00861</p>  <p><b>作者</b>：Shishira R Maiya,  Max Ehrlich,  Vatsal Agarwal,  Ser-Nam Lim,  Tom Goldstein,  Abhinav Shrivastava</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：provide new insights towards, commonly observed accuracy vs, analyze many intriguing properties, simply dataset dependent, despite recent advances</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Adversarial examples pose a unique challenge for deep learning systems.Despite recent advances in both attacks and defenses, there is still a lack ofclarity and consensus in the community about the true nature and underlyingproperties of adversarial examples. A deep understanding of these examples canprovide new insights towards the development of more effective attacks anddefenses. Driven by the common misconception that adversarial examples arehigh-frequency noise, we present a frequency-based understanding of adversarialexamples, supported by theoretical and empirical findings. Our analysis showsthat adversarial examples are neither in high-frequency nor in low-frequencycomponents, but are simply dataset dependent. Particularly, we highlight theglaring disparities between models trained on CIFAR-10 and ImageNet-deriveddatasets. Utilizing this framework, we analyze many intriguing properties oftraining robust models with frequency constraints, and propose afrequency-based explanation for the commonly observed accuracy vs. robustnesstrade-off.</p>  </details></details><details>  <summary>33. <b>标题：LSTA-Net: Long short-term Spatio-Temporal Aggregation Network for  Skeleton-based Action Recognition</b></summary>  <p><b>编号</b>：[109]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00823</p>  <p><b>作者</b>：Tailin Chen,  Shidong Wang,  Desen Zhou,  Yu Guan</p>  <p><b>备注</b>：Accepted by BMVC 2021</p>  <p><b>关键词</b>：alternately perform spatial feature aggregation, three public benchmark datasets, existing methods excessively relied, distant yet important joints, feature aggregation effect</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Modelling various spatio-temporal dependencies is the key to recognisinghuman actions in skeleton sequences. Most existing methods excessively reliedon the design of traversal rules or graph topologies to draw the dependenciesof the dynamic joints, which is inadequate to reflect the relationships of thedistant yet important joints. Furthermore, due to the locally adoptedoperations, the important long-range temporal information is therefore not wellexplored in existing works. To address this issue, in this work we proposeLSTA-Net: a novel Long short-term Spatio-Temporal Aggregation Network, whichcan effectively capture the long/short-range dependencies in a spatio-temporalmanner. We devise our model into a pure factorised architecture which canalternately perform spatial feature aggregation and temporal featureaggregation. To improve the feature aggregation effect, a channel-wiseattention mechanism is also designed and employed. Extensive experiments wereconducted on three public benchmark datasets, and the results suggest that ourapproach can capture both long-and-short range dependencies in the space andtime domain, yielding higher results than other state-of-the-art methods. Codeavailable at this https URL.</p>  </details></details><details>  <summary>34. <b>标题：Livestock Monitoring with Transformer</b></summary>  <p><b>编号</b>：[114]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00801</p>  <p><b>作者</b>：Bhavesh Tangirala,  Ishan Bhandari,  Daniel Laszlo,  Deepak K. Gupta,  Rajat M. Thomas,  Devanshu Arya</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：carefully curated dataset comprising video sequences, starformer outperforms popular baseline models trained, computer vision algorithms perform poorly, could use standard video cameras, perform simultaneous instance level segmentation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Tracking the behaviour of livestock enables early detection and thusprevention of contagious diseases in modern animal farms. Apart from economicgains, this would reduce the amount of antibiotics used in livestock farmingwhich otherwise enters the human diet exasperating the epidemic of antibioticresistance - a leading cause of death. We could use standard video cameras,available in most modern farms, to monitor livestock. However, most computervision algorithms perform poorly on this task, primarily because, (i) animalsbred in farms look identical, lacking any obvious spatial signature, (ii) noneof the existing trackers are robust for long duration, and (iii) real-worldconditions such as changing illumination, frequent occlusion, varying cameraangles, and sizes of the animals make it hard for models to generalize. Giventhese challenges, we develop an end-to-end behaviour monitoring system forgroup-housed pigs to perform simultaneous instance level segmentation,tracking, action recognition and re-identification (STAR) tasks. We presentstarformer, the first end-to-end multiple-object livestock monitoring frameworkthat learns instance-level embeddings for grouped pigs through the use oftransformer architecture. For benchmarking, we present Pigtrace, a carefullycurated dataset comprising video sequences with instance level bounding box,segmentation, tracking and activity classification of pigs in real indoorfarming environment. Using simultaneous optimization on STAR tasks we show thatstarformer outperforms popular baseline models trained for individual tasks.</p>  </details></details><details>  <summary>35. <b>标题：Geodesic Models with Convexity Shape Prior</b></summary>  <p><b>编号</b>：[116]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00794</p>  <p><b>作者</b>：Da Chen,  Jean-Marie Mirebeau,  Minglei Shu,  Xuecheng Tai,  Laurent D. Cohen</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：based segmentation approaches usually exploit image features, efficient interactive image segmentation algorithms, art hamiltonian fast marching method, establish new geodesic models relying, various image segmentation scenarios</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The minimal geodesic models based on the Eikonal equations are capable offinding suitable solutions in various image segmentation scenarios. Existinggeodesic-based segmentation approaches usually exploit image features inconjunction with geometric regularization terms, such as Euclidean curve lengthor curvature-penalized length, for computing geodesic curves. In this paper, wetake into account a more complicated problem: finding curvature-penalizedgeodesic paths with a convexity shape prior. We establish new geodesic modelsrelying on the strategy of orientation-lifting, by which a planar curve can bemapped to an high-dimensional orientation-dependent space. The convexity shapeprior serves as a constraint for the construction of local geodesic metricsencoding a particular curvature constraint. Then the geodesic distances and thecorresponding closed geodesic paths in the orientation-lifted space can beefficiently computed through state-of-the-art Hamiltonian fast marching method.In addition, we apply the proposed geodesic models to the active contours,leading to efficient interactive image segmentation algorithms that preservethe advantages of convexity shape prior and curvature penalization.</p>  </details></details><details>  <summary>36. <b>标题：Learning Event-based Spatio-Temporal Feature Descriptors via Local  Synaptic Plasticity: A Biologically-realistic Perspective of Computer Vision</b></summary>  <p><b>编号</b>：[117]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00791</p>  <p><b>作者</b>：Ali Safa,  Hichem Sahli,  André Bourdoux,  Ilja Ocket,  Francky Catthoor,  Georges Gielen</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：based theory describing spiking cortical ensembles equipped, based feature descriptors (+ 8, report significant accuracy improvements compared, based systems (+ 10, ibm dvs128 gesture dataset</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present an optimization-based theory describing spiking cortical ensemblesequipped with Spike-Timing-Dependent Plasticity (STDP) learning, as empiricallyobserved in the visual cortex. Using our methods, we build a class offully-connected, convolutional and action-based feature descriptors forevent-based camera that we respectively assess on N-MNIST, challengingCIFAR10-DVS and on the IBM DVS128 gesture dataset. We report significantaccuracy improvements compared to conventional state-of-the-art event-basedfeature descriptors (+8% on CIFAR10-DVS). We report large improvements inaccuracy compared to state-of-the-art STDP-based systems (+10% on N-MNIST,+7.74% on IBM DVS128 Gesture). In addition to ultra-low-power learning inneuromorphic edge devices, our work helps paving the way towards abiologically-realistic, optimization-based theory of cortical vision.</p>  </details></details><details>  <summary>37. <b>标题：PP-ShiTu: A Practical Lightweight Image Recognition System</b></summary>  <p><b>编号</b>：[124]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00775</p>  <p><b>作者</b>：Shengyu Wei,  Ruoyu Guo,  Cheng Cui,  Bin Lu,  Shuilong Dong,  Tingquan Gao,  Yuning Du,  Ying Zhou,  Xueying Lyu,  Qiwen Liu,  Xiaoguang Hu,  Dianhai Yu,  Yanjun Ma</p>  <p><b>备注</b>：9 pages, 5 figures, 8 tables. arXiv admin note: text overlap with arXiv:2109.03144</p>  <p><b>关键词</b>：introduce popular strategies including metric learning, practical lightweight image recognition system, image recognition applications, github repository paddleclas, following 3 modules</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In recent years, image recognition applications have developed rapidly. Alarge number of studies and techniques have emerged in different fields, suchas face recognition, pedestrian and vehicle re-identification, landmarkretrieval, and product recognition. In this paper, we propose a practicallightweight image recognition system, named PP-ShiTu, consisting of thefollowing 3 modules, mainbody detection, feature extraction and vector search.We introduce popular strategies including metric learning, deep hash, knowledgedistillation and model quantization to improve accuracy and inference speed.With strategies above, PP-ShiTu works well in different scenarios with a set ofmodels trained on a mixed dataset. Experiments on different datasets andbenchmarks show that the system is widely effective in different domains ofimage recognition. All the above mentioned models are open-sourced and the codeis available in the GitHub repository PaddleClas on PaddlePaddle.</p>  </details></details><details>  <summary>38. <b>标题：AdaPool: Exponential Adaptive Pooling for Information-Retaining  Downsampling</b></summary>  <p><b>编号</b>：[126]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00772</p>  <p><b>作者</b>：Alexandros Stergiou,  Ronald Poppe</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：adapool systematically achieves better results across tasks, exponentially weighted pooling method named adapool, frame interpolation tasks, proposed method uses, tasks including image</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Pooling layers are essential building blocks of Convolutional Neural Networks(CNNs) that reduce computational overhead and increase the receptive fields ofproceeding convolutional operations. They aim to produce downsampled volumesthat closely resemble the input volume while, ideally, also beingcomputationally and memory efficient. It is a challenge to meet bothrequirements jointly. To this end, we propose an adaptive and exponentiallyweighted pooling method named adaPool. Our proposed method uses a parameterizedfusion of two sets of pooling kernels that are based on the exponent of theDice-Sorensen coefficient and the exponential maximum, respectively. A keyproperty of adaPool is its bidirectional nature. In contrast to common poolingmethods, weights can be used to upsample a downsampled activation map. We termthis method adaUnPool. We demonstrate how adaPool improves the preservation ofdetail through a range of tasks including image and video classification andobject detection. We then evaluate adaUnPool on image and video framesuper-resolution and frame interpolation tasks. For benchmarking, we introduceInter4K, a novel high-quality, high frame-rate video dataset. Our combinedexperiments demonstrate that adaPool systematically achieves better resultsacross tasks and backbone architectures, while introducing a minor additionalcomputational and memory overhead.</p>  </details></details><details>  <summary>39. <b>标题：Dense Prediction with Attentive Feature Aggregation</b></summary>  <p><b>编号</b>：[128]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00770</p>  <p><b>作者</b>：Yung-Hsu Yang,  Thomas E. Huang,  Samuel Rota Bulò,  Peter Kontschieder,  Fisher Yu</p>  <p><b>备注</b>：18 pages, 16 figures</p>  <p><b>关键词</b>：progressively refine segmentation maps, features across different layers, fuse different network layers, challenging semantic segmentation benchmarks, introduce attentive feature aggregation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Aggregating information from features across different layers is an essentialoperation for dense prediction models. Despite its limited expressiveness,feature concatenation dominates the choice of aggregation operations. In thispaper, we introduce Attentive Feature Aggregation (AFA) to fuse differentnetwork layers with more expressive non-linear operations. AFA exploits bothspatial and channel attention to compute weighted average of the layeractivations. Inspired by neural volume rendering, we extend AFA withScale-Space Rendering (SSR) to perform late fusion of multi-scale predictions.AFA is applicable to a wide range of existing network designs. Our experimentsshow consistent and significant improvements on challenging semanticsegmentation benchmarks, including Cityscapes, BDD100K, and Mapillary Vistas,at negligible computational and parameter overhead. In particular, AFA improvesthe performance of the Deep Layer Aggregation (DLA) model by nearly 6% mIoU onCityscapes. Our experimental analyses show that AFA learns to progressivelyrefine segmentation maps and to improve boundary details, leading to newstate-of-the-art results on boundary detection benchmarks on BSDS500 andNYUDv2. Code and video resources are available at http://vis.xyz/pub/dla-afa.</p>  </details></details><details>  <summary>40. <b>标题：Monocular 3D Reconstruction of Interacting Hands via Collision-Aware  Factorized Refinements</b></summary>  <p><b>编号</b>：[131]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00763</p>  <p><b>作者</b>：Yu Rong,  Jingbo Wang,  Ziwei Liu,  Chen Change Loy</p>  <p><b>备注</b>：Accepted to 3DV 2021. Code and demo is available at this https URL</p>  <p><b>关键词</b>：carefully investigate potential implementations, second stage progressively ameliorates, generate collided hand meshes, reconstruct 3d interacting hands, 3d interacting hand reconstruction</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>3D interacting hand reconstruction is essential to facilitate human-machineinteraction and human behaviors understanding. Previous works in this fieldeither rely on auxiliary inputs such as depth images or they can only handle asingle hand if monocular single RGB images are used. Single-hand methods tendto generate collided hand meshes, when applied to closely interacting hands,since they cannot model the interactions between two hands explicitly. In thispaper, we make the first attempt to reconstruct 3D interacting hands frommonocular single RGB images. Our method can generate 3D hand meshes with bothprecise 3D poses and minimal collisions. This is made possible via a two-stageframework. Specifically, the first stage adopts a convolutional neural networkto generate coarse predictions that tolerate collisions but encouragepose-accurate hand meshes. The second stage progressively ameliorates thecollisions through a series of factorized refinements while retaining thepreciseness of 3D poses. We carefully investigate potential implementations forthe factorized refinement, considering the trade-off between efficiency andaccuracy. Extensive quantitative and qualitative results on large-scaledatasets such as InterHand2.6M demonstrate the effectiveness of the proposedapproach.</p>  </details></details><details>  <summary>41. <b>标题：Single-Item Fashion Recommender: Towards Cross-Domain Recommendations</b></summary>  <p><b>编号</b>：[133]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00758</p>  <p><b>作者</b>：Seyed Omid Mohammadi,  Hossein Bodaghi,  Ahmad Kalhor (University of Tehran, College of Engineering, School of Electrical and Computer Engineering, Tehran, Iran)</p>  <p><b>备注</b>：16 Pages, 14 Figures, 2 Tables</p>  <p><b>关键词</b>：single fashion item shop image, recommendation tasks called objective, many challenges lie ahead, listing similar items available, based fashion recommender system</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Nowadays, recommender systems and search engines play an integral role infashion e-commerce. Still, many challenges lie ahead, and this study tries totackle some. This article first suggests a content-based fashion recommendersystem that uses a parallel neural network to take a single fashion item shopimage as input and make in-shop recommendations by listing similar itemsavailable in the store. Next, the same structure is enhanced to personalize theresults based on user preferences. This work then introduces a backgroundaugmentation technique that makes the system more robust to out-of-domainqueries, enabling it to make street-to-shop recommendations using only atraining set of catalog shop images. Moreover, the last contribution of thispaper is a new evaluation metric for recommendation tasks calledobjective-guided human score. This method is an entirely customizable frameworkthat produces interpretable, comparable scores from subjective evaluations ofhuman scorers.</p>  </details></details><details>  <summary>42. <b>标题：Few-shot learning with improved local representations via bias rectify  module</b></summary>  <p><b>编号</b>：[135]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00754</p>  <p><b>作者</b>：Chao Dong,  Qi Ye,  Wenchao Meng,  Kaixiang Yang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：thus produce undesirable performance, deep bias rectify network, bias rectify module, bias rectify module, recent approaches based</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recent approaches based on metric learning have achieved great progress infew-shot learning. However, most of them are limited to image-levelrepresentation manners, which fail to properly deal with the intra-classvariations and spatial knowledge and thus produce undesirable performance. Inthis paper we propose a Deep Bias Rectify Network (DBRN) to fully exploit thespatial information that exists in the structure of the featurerepresentations. We first employ a bias rectify module to alleviate the adverseimpact caused by the intra-class variations. bias rectify module is able tofocus on the features that are more discriminative for classification by givendifferent weights. To make full use of the training data, we design a prototypeaugment mechanism that can make the prototypes generated from the support setto be more representative. To validate the effectiveness of our method, weconducted extensive experiments on various popular few-shot classificationbenchmarks and our methods can outperform state-of-the-art methods.</p>  </details></details><details>  <summary>43. <b>标题：Towards the Generalization of Contrastive Self-Supervised Learning</b></summary>  <p><b>编号</b>：[138]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00743</p>  <p><b>作者</b>：Weiran Huang,  Mingyang Yi,  Xuyang Zhao</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：attracted great attention since, two canonical contrastive self, trained models generalize, requires unlabeled data, embeds input data</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recently, self-supervised learning has attracted great attention since itonly requires unlabeled data for training. Contrastive learning is a popularapproach for self-supervised learning and empirically performs well inpractice. However, the theoretical understanding of its generalization abilityon downstream tasks is not well studied. To this end, we present a theoreticalexplanation of how contrastive self-supervised pre-trained models generalize todownstream tasks. Concretely, we quantitatively show that the self-supervisedmodel has generalization ability on downstream classification tasks if itembeds input data into a feature space with distinguishing centers of classesand closely clustered intra-class samples. With the above conclusion, wefurther explore SimCLR and Barlow Twins, which are two canonical contrastiveself-supervised methods. We prove that the aforementioned feature space can beobtained via any of the methods, and thus explain their success on thegeneralization on downstream classification tasks. Finally, various experimentsare also conducted to verify our theoretical findings.</p>  </details></details><details>  <summary>44. <b>标题：Learning Iterative Robust Transformation Synchronization</b></summary>  <p><b>编号</b>：[143]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00728</p>  <p><b>作者</b>：Zi Jian Yew,  Gim Hee Lee</p>  <p><b>备注</b>：To appear in 3DV2021</p>  <p><b>关键词</b>：avoid handcrafting robust loss functions, shared message passing layer, use graph neural networks, problem remains challenging due, pairwise relative motions</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Transformation Synchronization is the problem of recovering absolutetransformations from a given set of pairwise relative motions. Despite itsusefulness, the problem remains challenging due to the influences from noisyand outlier relative motions, and the difficulty to model analytically andsuppress them with high fidelity. In this work, we avoid handcrafting robustloss functions, and propose to use graph neural networks (GNNs) to learntransformation synchronization. Unlike previous works which use complicatedmulti-stage pipelines, we use an iterative approach where each step consists ofa single weight-shared message passing layer that refines the absolute posesfrom the previous iteration by predicting an incremental update in the tangentspace. To reduce the influence of outliers, the messages are weighted beforeaggregation. Our iterative approach alleviates the need for an explicitinitialization step and performs well with identity initial poses. Although ourapproach is simple, we show that it performs favorably against existinghandcrafted and learned synchronization methods through experiments on bothSO(3) and SE(3) synchronization.</p>  </details></details><details>  <summary>45. <b>标题：RMNet: Equivalently Removing Residual Connection from Networks</b></summary>  <p><b>编号</b>：[158]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00687</p>  <p><b>作者</b>：Fanxu Meng,  Hao Cheng,  Jiaxin Zhuang,  Ke Li,  Xing Sun</p>  <p><b>备注</b>：Equivalently removing residual connection from ResBlock with non-linear layer inside it, towards an efficient plain model</p>  <p><b>关键词</b>：rm operation allows input feature maps, designing dnns without residual connections, remove residual connections without changing, although residual connection enables training, high ratio network pruning</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Although residual connection enables training very deep neural networks, itis not friendly for online inference due to its multi-branch topology. Thisencourages many researchers to work on designing DNNs without residualconnections at inference. For example, RepVGG re-parameterizes multi-branchtopology to a VGG-like (single-branch) model when deploying, showing greatperformance when the network is relatively shallow. However, RepVGG can nottransform ResNet to VGG equivalently because re-parameterizing methods can onlybe applied to linear blocks and the non-linear layers (ReLU) have to be putoutside of the residual connection which results in limited representationability, especially for deeper networks. In this paper, we aim to remedy thisproblem and propose to remove the residual connection in a vanilla ResNetequivalently by a reserving and merging (RM) operation on ResBlock.Specifically, the RM operation allows input feature maps to pass through theblock while reserving their information and merges all the information at theend of each block, which can remove residual connections without changing theoriginal output. As a plug-in method, RM Operation basically has threeadvantages: 1) its implementation makes it naturally friendly for high rationetwork pruning. 2) it helps break the depth limitation of RepVGG. 3) it leadsto better accuracy-speed trade-off network (RMNet) compared to ResNet andRepVGG. We believe the ideology of RM Operation can inspire many insights onmodel design for the community in the future. Code is available at:this https URL.</p>  </details></details><details>  <summary>46. <b>标题：Distilling Object Detectors with Feature Richness</b></summary>  <p><b>编号</b>：[163]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00674</p>  <p><b>作者</b>：Zhixing Du,  Rui Zhang,  Ming Chang,  Xishan Zhang,  Shaoli Liu,  Tianshi Chen,  Yunji Chen</p>  <p><b>备注</b>：Accepted in NeurIPS 2021</p>  <p><b>关键词</b>：based detection methods mainly imitating features near bounding boxes, 101 based teacher detector 38, massive storage requirements make, methods achieve excellent performance, proposed method effectively retrieves</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In recent years, large-scale deep models have achieved great success, but thehuge computational complexity and massive storage requirements make it a greatchallenge to deploy them in resource-limited devices. As a model compressionand acceleration method, knowledge distillation effectively improves theperformance of small models by transferring the dark knowledge from the teacherdetector. However, most of the existing distillation-based detection methodsmainly imitating features near bounding boxes, which suffer from twolimitations. First, they ignore the beneficial features outside the boundingboxes. Second, these methods imitate some features which are mistakenlyregarded as the background by the teacher detector. To address the aboveissues, we propose a novel Feature-Richness Score (FRS) method to chooseimportant features that improve generalized detectability during distilling.The proposed method effectively retrieves the important features outside thebounding boxes and removes the detrimental features within the bounding boxes.Extensive experiments show that our methods achieve excellent performance onboth anchor-based and anchor-free detectors. For example, RetinaNet withResNet-50 achieves 39.7% in mAP on the COCO2017 dataset, which even surpassesthe ResNet-101 based teacher detector 38.9% by 0.8%.</p>  </details></details><details>  <summary>47. <b>标题：Evaluation of Human and Machine Face Detection using a Novel Distinctive  Human Appearance Dataset</b></summary>  <p><b>编号</b>：[169]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00660</p>  <p><b>作者</b>：Necdet Gurkan,  Jordan W. Suchow</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：every human appearance reflects something unique, distinctive human appearance dataset, accurately localize human faces, development towards creating fairer, significant technical hurdles</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Face detection is a long-standing challenge in the field of computer vision,with the ultimate goal being to accurately localize human faces in anunconstrained environment. There are significant technical hurdles in makingthese systems accurate due to confounding factors related to pose, imageresolution, illumination, occlusion, and viewpoint [44]. That being said, withrecent developments in machine learning, face-detection systems have achievedextraordinary accuracy, largely built on data-driven deep-learning models [70].Though encouraging, a critical aspect that limits face-detection performanceand social responsibility of deployed systems is the inherent diversity ofhuman appearance. Every human appearance reflects something unique about aperson, including their heritage, identity, experiences, and visiblemanifestations of self-expression. However, there are questions about how wellface-detection systems perform when faced with varying face size and shape,skin color, body modification, and body ornamentation. Towards this goal, wecollected the Distinctive Human Appearance dataset, an image set thatrepresents appearances with low frequency and that tend to be undersampled inface datasets. Then, we evaluated current state-of-the-art face-detectionmodels in their ability to detect faces in these images. The evaluation resultsshow that face-detection algorithms do not generalize well to these diverseappearances. Evaluating and characterizing the state of current face-detectionmodels will accelerate research and development towards creating fairer andmore accurate face-detection systems.</p>  </details></details><details>  <summary>48. <b>标题：Feature Aggregation and Refinement Network for 2D AnatomicalLandmark  Detection</b></summary>  <p><b>编号</b>：[170]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00659</p>  <p><b>作者</b>：Yueyuan Ao,  Hong Wu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：novel loss function named exponential weighted center loss, three publicly available anatomical landmark detection datasets, scale feature aggregation module, named feature aggregation, novel deep network</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Localization of anatomical landmarks is essential for clinical diagnosis,treatment planning, and research. In this paper, we propose a novel deepnetwork, named feature aggregation and refinement network (FARNet), for theautomatic detection of anatomical landmarks. To alleviate the problem oflimited training data in the medical domain, our network adopts a deep networkpre-trained on natural images as the backbone network and several popularnetworks have been compared. Our FARNet also includes a multi-scale featureaggregation module for multi-scale feature fusion and a feature refinementmodule for high-resolution heatmap regression. Coarse-to-fine supervisions areapplied to the two modules to facilitate the end-to-end training. We furtherpropose a novel loss function named Exponential Weighted Center loss foraccurate heatmap regression, which focuses on the losses from the pixels nearlandmarks and suppresses the ones from far away. Our network has been evaluatedon three publicly available anatomical landmark detection datasets, includingcephalometric radiographs, hand radiographs, and spine radiographs, andachieves state-of-art performances on all three datasets. Code is available at:\url{this https URL}</p>  </details></details><details>  <summary>49. <b>标题：TriVoC: Efficient Voting-based Consensus Maximization for Robust Point  Cloud Registration with Extreme Outlier Ratios</b></summary>  <p><b>编号</b>：[172]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00657</p>  <p><b>作者</b>：Lei Sun,  Lu Deng</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：best rigid transformation aligning two point clouds, makes robust registration methods imperative, 3d keypoint matching approaches, based point cloud registration, reduced correspondence sets according</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Correspondence-based point cloud registration is a cornerstone in roboticsperception and computer vision, which seeks to estimate the best rigidtransformation aligning two point clouds from the putative correspondences.However, due to the limited robustness of 3D keypoint matching approaches,outliers, probably in large numbers, are prone to exist among thecorrespondences, which makes robust registration methods imperative.Unfortunately, existing robust methods have their own limitations (e.g. highcomputational cost or limited robustness) when facing high or extreme outlierratios, probably unsuitable for practical use. In this paper, we present anovel, fast, deterministic and guaranteed robust solver, named TriVoC(Triple-layered Voting with Consensus maximization), for the robustregistration problem. We decompose the selecting of the minimal 3-point setsinto 3 consecutive layers, and in each layer we design an efficient voting andcorrespondence sorting framework on the basis of the pairwise equal-lengthconstraint. In this manner, the 3-point sets can be selected independently fromthe reduced correspondence sets according to the sorted sequence, which cansignificantly lower the computational cost and meanwhile provide a strongguarantee to achieve the largest consensus set (as the final inlier set) aslong as a probabilistic termination condition is fulfilled. Varied experimentsshow that our solver TriVoC is robust against up to 99% outliers, highlyaccurate, time-efficient even with extreme outlier ratios, and also practicalfor real-world applications, showing performance superior to otherstate-of-the-art competitors.</p>  </details></details><details>  <summary>50. <b>标题：Accurate Point Cloud Registration with Robust Optimal Transport</b></summary>  <p><b>编号</b>：[176]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00648</p>  <p><b>作者</b>：Zhengyang Shen,  Jean Feydy,  Peirong Liu,  Ariel Hernán Curiale,  Ruben San Jose Estepar,  Raul San Jose Estepar,  Marc Niethammer</p>  <p><b>备注</b>：Accepted in NeurIPS 2021</p>  <p><b>关键词</b>：robust ot enables fast pre, recent ot solvers improve, based methods achieve state, point cloud registration algorithms, challenging lung registration task</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This work investigates the use of robust optimal transport (OT) for shapematching. Specifically, we show that recent OT solvers improve bothoptimization-based and deep learning methods for point cloud registration,boosting accuracy at an affordable computational cost. This manuscript startswith a practical overview of modern OT theory. We then provide solutions to themain difficulties in using this framework for shape matching. Finally, weshowcase the performance of transport-enhanced registration models on a widerange of challenging tasks: rigid registration for partial shapes; scene flowestimation on the Kitti dataset; and nonparametric registration of lungvascular trees between inspiration and expiration. Our OT-based methods achievestate-of-the-art results on Kitti and for the challenging lung registrationtask, both in terms of accuracy and scalability. We also release PVT1010, a newpublic dataset of 1,010 pairs of lung vascular trees with densely sampledpoints. This dataset provides a challenging use case for point cloudregistration algorithms with highly complex shapes and deformations. Our workdemonstrates that robust OT enables fast pre-alignment and fine-tuning for awide range of registration models, thereby providing a new key method for thecomputer vision toolbox. Our code and dataset are available online at:this https URL.</p>  </details></details><details>  <summary>51. <b>标题：Learning Distilled Collaboration Graph for Multi-Agent Perception</b></summary>  <p><b>编号</b>：[177]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00643</p>  <p><b>作者</b>：Yiming Li,  Shunli Ren,  Pengxiang Wu,  Siheng Chen,  Chen Feng,  Wenjun Zhang</p>  <p><b>备注</b>：Accepted to 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：agent 3d object detection show, train discograph via knowledge distillation, shared disconet could collaboratively approach, art collaborative perception methods, novel distilled collaboration graph</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>To promote better performance-bandwidth trade-off for multi-agent perception,we propose a novel distilled collaboration graph (DiscoGraph) to modeltrainable, pose-aware, and adaptive collaboration among agents. Our keynovelties lie in two aspects. First, we propose a teacher-student framework totrain DiscoGraph via knowledge distillation. The teacher model employs an earlycollaboration with holistic-view inputs; the student model is based onintermediate collaboration with single-view inputs. Our framework trainsDiscoGraph by constraining post-collaboration feature maps in the student modelto match the correspondences in the teacher model. Second, we propose amatrix-valued edge weight in DiscoGraph. In such a matrix, each elementreflects the inter-agent attention at a specific spatial region, allowing anagent to adaptively highlight the informative regions. During inference, weonly need to use the student model named as the distilled collaboration network(DiscoNet). Attributed to the teacher-student framework, multiple agents withthe shared DiscoNet could collaboratively approach the performance of ahypothetical teacher model with a holistic view. Our approach is validated onV2X-Sim 1.0, a large-scale multi-agent perception dataset that we synthesizedusing CARLA and SUMO co-simulation. Our quantitative and qualitativeexperiments in multi-agent 3D object detection show that DiscoNet could notonly achieve a better performance-bandwidth trade-off than the state-of-the-artcollaborative perception methods, but also bring more straightforward designrationale. Our code is available on this https URL.</p>  </details></details><details>  <summary>52. <b>标题：Distantly Supervised Semantic Text Detection and Recognition for  Broadcast Sports Videos Understanding</b></summary>  <p><b>编号</b>：[182]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00629</p>  <p><b>作者</b>：Avijit Shah,  Topojoy Biswas,  Sathish Ramadoss,  Deven Santosh Shah</p>  <p><b>备注</b>：9 pages, 7 figures and 6 tables. To be published in the proceedings of ACM Multimedia 21, Industrial Track, held from October 20-24 in China</p>  <p><b>关键词</b>：study extremely accurate semantic text detection, extract extremely accurate semantic text, video frames still remains one, automatically build sports clock datasets, novel distant supervision technique</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Comprehensive understanding of key players and actions in multiplayer sportsbroadcast videos is a challenging problem. Unlike in news or finance videos,sports videos have limited text. While both action recognition for multiplayersports and detection of players has seen robust research, understandingcontextual text in video frames still remains one of the most impactful avenuesof sports video understanding. In this work we study extremely accuratesemantic text detection and recognition in sports clocks, and challengestherein. We observe unique properties of sports clocks, which makes it hard toutilize general-purpose pre-trained detectors and recognizers, so that text canbe accurately understood to the degree of being used to align to externalknowledge. We propose a novel distant supervision technique to automaticallybuild sports clock datasets. Along with suitable data augmentations, combinedwith any state-of-the-art text detection and recognition model architectures,we extract extremely accurate semantic text. Finally, we share ourcomputational architecture pipeline to scale this system in industrial settingand proposed a robust dataset for the same to validate our results.</p>  </details></details><details>  <summary>53. <b>标题：PIE: Pseudo-Invertible Encoder</b></summary>  <p><b>编号</b>：[186]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00619</p>  <p><b>作者</b>：Jan Jetze Beitler,  Ivan Sosnovik,  Arnold Smeulders</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：evaluate gaussian pseudo invertible encoder, call pseudo invertible encoders, pseudo bijective architecture, model outperforms wae, introduce new class</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We consider the problem of information compression from high dimensionaldata. Where many studies consider the problem of compression by non-invertibletransformations, we emphasize the importance of invertible compression. Weintroduce new class of likelihood-based autoencoders with pseudo bijectivearchitecture, which we call Pseudo Invertible Encoders. We provide thetheoretical explanation of their principles. We evaluate Gaussian PseudoInvertible Encoder on MNIST, where our model outperforms WAE and VAE insharpness of the generated images.</p>  </details></details><details>  <summary>54. <b>标题：Recognizing Families In the Wild (RFIW): The 5th Edition</b></summary>  <p><b>编号</b>：[199]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00598</p>  <p><b>作者</b>：Joseph P. Robinson,  Can Qin,  Ming Shao,  Matthew A. Turk,  Rama Chellappa,  Yun Fu</p>  <p><b>备注</b>：2021 Conference on Automatic Face and Gesture Recognition</p>  <p><b>关键词</b>：track visual kinship recognition evaluation, 16th ieee international conference, share current efforts, publish new work, promising future directions</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recognizing Families In the Wild (RFIW), held as a data challenge inconjunction with the 16th IEEE International Conference on Automatic Face andGesture Recognition (FG), is a large-scale, multi-track visual kinshiprecognition evaluation. This is our fifth edition of RFIW, for which wecontinue the effort to attract scholars, bring together professionals, publishnew work, and discuss prospects. In this paper, we summarize submissions forthe three tasks of this year's RFIW: specifically, we review the results forkinship verification, tri-subject verification, and family member search andretrieval. We take a look at the RFIW problem, as well as share current effortsand make recommendations for promising future directions.</p>  </details></details><details>  <summary>55. <b>标题：From Face to Gait: Weakly-Supervised Learning of Gender Information from  Walking Patterns</b></summary>  <p><b>编号</b>：[219]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00538</p>  <p><b>作者</b>：Andy Catruna,  Adrian Cosma,  Ion Emilian Radoi</p>  <p><b>备注</b>：Accepted at Face & Gesture Recognition 2021</p>  <p><b>关键词</b>：art facial analysis models, facial analysis models, obtaining demographics information, leverage facial features, automatically annotate front</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Obtaining demographics information from video is valuable for a range ofreal-world applications. While approaches that leverage facial features forgender inference are very successful in restrained environments, they do notwork in most real-world scenarios when the subject is not facing the camera,has the face obstructed or the face is not clear due to distance from thecamera or poor resolution. We propose a weakly-supervised method for learninggender information of people based on their manner of walking. We make use ofstate-of-the art facial analysis models to automatically annotate front-viewwalking sequences and generalise to unseen angles by leveraging gait-basedlabel propagation. Our results show on par or higher performance with facialanalysis models with an F1 score of 91% and the ability to successfullygeneralise to scenarios in which facial analysis is unfeasible due to subjectsnot facing the camera or having the face obstructed.</p>  </details></details><details>  <summary>56. <b>标题：Learning Debiased and Disentangled Representations for Semantic  Segmentation</b></summary>  <p><b>编号</b>：[221]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00531</p>  <p><b>作者</b>：Sanghyeok Chu,  Dongwan Kim,  Bohyung Han</p>  <p><b>备注</b>：Accepted by NeurIPS 2021</p>  <p><b>关键词</b>：complex dense prediction problems including semantic segmentation, effectively reduce feature dependencies among classes, randomly eliminating certain class information, multiple semantic segmentation benchmarks, especially notable performance gains</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep neural networks are susceptible to learn biased models with entangledfeature representations, which may lead to subpar performances on variousdownstream tasks. This is particularly true for under-represented classes,where a lack of diversity in the data exacerbates the tendency. This limitationhas been addressed mostly in classification tasks, but there is little study onadditional challenges that may appear in more complex dense prediction problemsincluding semantic segmentation. To this end, we propose a model-agnostic andstochastic training scheme for semantic segmentation, which facilitates thelearning of debiased and disentangled representations. For each class, we firstextract class-specific information from the highly entangled feature map. Then,information related to a randomly sampled class is suppressed by a featureselection process in the feature space. By randomly eliminating certain classinformation in each training iteration, we effectively reduce featuredependencies among classes, and the model is able to learn more debiased anddisentangled feature representations. Models trained with our approachdemonstrate strong results on multiple semantic segmentation benchmarks, withespecially notable performance gains on under-represented classes.</p>  </details></details><details>  <summary>57. <b>标题：DRBANET: A Lightweight Dual-Resolution Network for Semantic Segmentation  with Boundary Auxiliary</b></summary>  <p><b>编号</b>：[228]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00509</p>  <p><b>作者</b>：Linjie Wang,  Quan Zhou,  Chenfeng Jiang,  Xiaofu Wu,  Longin Jan Latecki</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：extremely lightweight pyramid pooling module, drbanet adopts dual parallel architecture, method achieves promising trade, efficient inverted bottleneck modules, refine semantic segmentation results</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Due to the powerful ability to encode image details and semantics, manylightweight dual-resolution networks have been proposed in recent years.However, most of them ignore the benefit of boundary information. This paperintroduces a lightweight dual-resolution network, called DRBANet, aiming torefine semantic segmentation results with the aid of boundary information.DRBANet adopts dual parallel architecture, including: high resolution branch(HRB) and low resolution branch (LRB). Specifically, HRB mainly consists of aset of Efficient Inverted Bottleneck Modules (EIBMs), which learn featurerepresentations with larger receptive fields. LRB is composed of a series ofEIBMs and an Extremely Lightweight Pyramid Pooling Module (ELPPM), where ELPPMis utilized to capture multi-scale context through hierarchical residualconnections. Finally, a boundary supervision head is designed to capture objectboundaries in HRB. Extensive experiments on Cityscapes and CamVid datasetsdemonstrate that our method achieves promising trade-off between segmentationaccuracy and running efficiency.</p>  </details></details><details>  <summary>58. <b>标题：Fully convolutional Siamese neural networks for buildings damage  assessment from satellite images</b></summary>  <p><b>编号</b>：[229]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00508</p>  <p><b>作者</b>：Eugene Khvedchenya,  Tatiana Gabruseva</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：means processing many square kilometers, process involves acquiring satellite imagery, building damage assessment competition, siamese neural networks, extensive ablation study</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Damage assessment after natural disasters is needed to distribute aid andforces to recovery from damage dealt optimally. This process involves acquiringsatellite imagery for the region of interest, localization of buildings, andclassification of the amount of damage caused by nature or urban factors tobuildings. In case of natural disasters, this means processing many squarekilometers of the area to judge whether a particular building had suffered fromthe damaging factors.In this work, we develop a computational approach for an automated comparisonof the same region's satellite images before and after the disaster, andclassify different levels of damage in buildings. Our solution is based onSiamese neural networks with encoder-decoder architecture. We include anextensive ablation study and compare different encoders, decoders, lossfunctions, augmentations, and several methods to combine two images. Thesolution achieved one of the best results in the Computer Vision for BuildingDamage Assessment competition.</p>  </details></details><details>  <summary>59. <b>标题：DPNET: Dual-Path Network for Efficient Object Detectioj with Lightweight  Self-Attention</b></summary>  <p><b>编号</b>：[232]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00500</p>  <p><b>作者</b>：Huimin Shi,  Quan Zhou,  Yinghao Ni,  Xiaofu Wu,  Longin Jan Latecki</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：object detection often costs, efficient object detection, method achieves state, get satisfied performance, feature pyramid network</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Object detection often costs a considerable amount of computation to getsatisfied performance, which is unfriendly to be deployed in edge devices. Toaddress the trade-off between computational cost and detection accuracy, thispaper presents a dual path network, named DPNet, for efficient object detectionwith lightweight self-attention. In backbone, a single input/output lightweightself-attention module (LSAM) is designed to encode global interactions betweendifferent positions. LSAM is also extended into a multiple-inputs version infeature pyramid network (FPN), which is employed to capture cross-resolutiondependencies in two paths. Extensive experiments on the COCO datasetdemonstrate that our method achieves state-of-the-art detection results. Morespecifically, DPNet obtains 29.0% AP on COCO test-dev, with only 1.14 GFLOPsand 2.27M model size for a 320x320 image.</p>  </details></details><details>  <summary>60. <b>标题：Smart(Sampling)Augment: Optimal and Efficient Data Augmentation for  Semantic Segmentation</b></summary>  <p><b>编号</b>：[238]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00487</p>  <p><b>作者</b>：Misgana Negassi,  Diane Wagner,  Alexander Reiterer</p>  <p><b>备注</b>：Negassi and Wagner provided an equal contribution</p>  <p><b>关键词</b>：data augmentation methods enrich datasets, fixed augmentation strategy competes, automated data augmentation methods, smartaugment uses bayesian optimization, design choices behind smartaugment</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Data augmentation methods enrich datasets with augmented data to improve theperformance of neural networks. Recently, automated data augmentation methodshave emerged, which automatically design augmentation strategies. Existing workfocuses on image classification and object detection, whereas we provide thefirst study on semantic image segmentation and introduce two new approaches:\textit{SmartAugment} and \textit{SmartSamplingAugment}. SmartAugment usesBayesian Optimization to search over a rich space of augmentation strategiesand achieves a new state-of-the-art performance in all semantic segmentationtasks we consider. SmartSamplingAugment, a simple parameter-free approach witha fixed augmentation strategy competes in performance with the existingresource-intensive approaches and outperforms cheap state-of-the-art dataaugmentation methods. Further, we analyze the impact, interaction, andimportance of data augmentation hyperparameters and perform ablation studies,which confirm our design choices behind SmartAugment and SmartSamplingAugment.Lastly, we will provide our source code for reproducibility and to facilitatefurther research.</p>  </details></details><details>  <summary>61. <b>标题：Learned Image Compression with Separate Hyperprior Decoders</b></summary>  <p><b>编号</b>：[240]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00485</p>  <p><b>作者</b>：Zhao Zan,  Chao Liu,  Heming Sun,  Xiaoyang Zeng,  Yibo Fan</p>  <p><b>备注</b>：This paper has been accepted by IEEE Open Journal of Circuits and Systems</p>  <p><b>关键词</b>：ternary gaussian model collapses, learned image compression techniques, discrete gaussian mixture likelihoods, use three hyperprior decoders, single hyperprior decoder</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Learned image compression techniques have achieved considerable developmentin recent years. In this paper, we find that the performance bottleneck lies inthe use of a single hyperprior decoder, in which case the ternary Gaussianmodel collapses to a binary one. To solve this, we propose to use threehyperprior decoders to separate the decoding process of the mixed parameters indiscrete Gaussian mixture likelihoods, achieving more accurate parametersestimation. Experimental results demonstrate the proposed method optimized byMS-SSIM achieves on average 3.36% BD-rate reduction compared withstate-of-the-art approach. The contribution of the proposed method to thecoding time and FLOPs is negligible.</p>  </details></details><details>  <summary>62. <b>标题：Gaussian Kernel Mixture Network for Single Image Defocus Deblurring</b></summary>  <p><b>编号</b>：[250]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00454</p>  <p><b>作者</b>：Yuhui Quan,  Zicong Wu,  Hui Ji</p>  <p><b>备注</b>：Accepted by NeurIPS 2021</p>  <p><b>关键词</b>：noticeably outperforms existing defocus deblurring methods, representing spatially variant defocus blur kernels, deep neural network called gkmnet, wise gaussian kernel mixture, efficient linear parametric form</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Defocus blur is one kind of blur effects often seen in images, which ischallenging to remove due to its spatially variant amount. This paper presentsan end-to-end deep learning approach for removing defocus blur from a singleimage, so as to have an all-in-focus image for consequent vision tasks. First,a pixel-wise Gaussian kernel mixture (GKM) model is proposed for representingspatially variant defocus blur kernels in an efficient linear parametric form,with higher accuracy than existing models. Then, a deep neural network calledGKMNet is developed by unrolling a fixed-point iteration of the GKM-baseddeblurring. The GKMNet is built on a lightweight scale-recurrent architecture,with a scale-recurrent attention module for estimating the mixing coefficientsin GKM for defocus deblurring. Extensive experiments show that the GKMNet notonly noticeably outperforms existing defocus deblurring methods, but also hasits advantages in terms of model complexity and computational efficiency.</p>  </details></details><details>  <summary>63. <b>标题：Loop closure detection using local 3D deep descriptors</b></summary>  <p><b>编号</b>：[253]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00440</p>  <p><b>作者</b>：Youjie Zhou,  Yiming Wang,  Fabio Poiesi,  Qi Qin,  Yi Wan</p>  <p><b>备注</b>：This work has been submitted to the IEEE for possible publication. Copyright may be transferred without notice, after which this version may no longer be accessible</p>  <p><b>关键词</b>：mapping using local 3d deep descriptors, art loop closure detection accuracy, simple yet effective method, original loop closure strategy, better localisation accuracy compared</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present a simple yet effective method to address loop closure detection insimultaneous localisation and mapping using local 3D deep descriptors (L3Ds).L3Ds are emerging compact representations of patches extracted from pointclouds that are learned from data using a deep learning algorithm. We propose anovel overlap measure for loop detection by computing the metric error betweenpoints that correspond to mutually-nearest-neighbour descriptors afterregistering the loop candidate point cloud by its estimated relative pose. Thisnovel approach enables us to accurately detect loops and estimate sixdegrees-of-freedom poses in the case of small overlaps. We compare ourL3D-based loop closure approach with recent approaches on LiDAR data andachieve state-of-the-art loop closure detection accuracy. Additionally, weembed our loop closure approach in RESLAM, a recent edge-based SLAM system, andperform the evaluation on real-world RGBD-TUM and synthetic ICL datasets. Ourapproach enables RESLAM to achieve a better localisation accuracy compared toits original loop closure strategy.</p>  </details></details><details>  <summary>64. <b>标题：Hierarchical Deep Residual Reasoning for Temporal Moment Localization</b></summary>  <p><b>编号</b>：[265]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00417</p>  <p><b>作者</b>：Ziyang Ma,  Xianjing Han,  Xuemeng Song,  Yiran Cui,  Liqiang Nie</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：simple yet effective res, hierarchical deep residual reasoning, existing methods mainly focus, works mainly understand, extensive experiments conducted</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Temporal Moment Localization (TML) in untrimmed videos is a challenging taskin the field of multimedia, which aims at localizing the start and end pointsof the activity in the video, described by a sentence query. Existing methodsmainly focus on mining the correlation between video and sentencerepresentations or investigating the fusion manner of the two modalities. Theseworks mainly understand the video and sentence coarsely, ignoring the fact thata sentence can be understood from various semantics, and the dominant wordsaffecting the moment localization in the semantics are the action and objectreference. Toward this end, we propose a Hierarchical Deep Residual Reasoning(HDRR) model, which decomposes the video and sentence into multi-levelrepresentations with different semantics to achieve a finer-grainedlocalization. Furthermore, considering that videos with different resolutionand sentences with different length have different difficulty in understanding,we design the simple yet effective Res-BiGRUs for feature fusion, which is ableto grasp the useful information in a self-adapting manner. Extensiveexperiments conducted on Charades-STA and ActivityNet-Captions datasetsdemonstrate the superiority of our HDRR model compared with otherstate-of-the-art methods.</p>  </details></details><details>  <summary>65. <b>标题：PANet: Perspective-Aware Network with Dynamic Receptive Fields and  Self-Distilling Supervision for Crowd Counting</b></summary>  <p><b>编号</b>：[270]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00406</p>  <p><b>作者</b>：Xiaoshuang Chen,  Yiru Zhao,  Yu Qin,  Fei Jiang,  Mingyuan Tao,  Xiansheng Hua,  Hongtao Lu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：dilated convolution parameters according, aware approach called panet, proposed panet outperforms, use gaussian kernels, ucf_cc_50 datasets demonstrate</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Crowd counting aims to learn the crowd density distributions and estimate thenumber of objects (e.g. persons) in images. The perspective effect, whichsignificantly influences the distribution of data points, plays an importantrole in crowd counting. In this paper, we propose a novel perspective-awareapproach called PANet to address the perspective problem. Based on theobservation that the size of the objects varies greatly in one image due to theperspective effect, we propose the dynamic receptive fields (DRF) framework.The framework is able to adjust the receptive field by the dilated convolutionparameters according to the input image, which helps the model to extract morediscriminative features for each local region. Different from most previousworks which use Gaussian kernels to generate the density map as the supervisedinformation, we propose the self-distilling supervision (SDS) training method.The ground-truth density maps are refined from the first training stage and theperspective information is distilled to the model in the second stage. Theexperimental results on ShanghaiTech Part_A and Part_B, UCF_QNRF, and UCF_CC_50datasets demonstrate that our proposed PANet outperforms the state-of-the-artmethods by a large margin.</p>  </details></details><details>  <summary>66. <b>标题：A Simple Approach to Image Tilt Correction with Self-Attention MobileNet  for Smartphones</b></summary>  <p><b>编号</b>：[274]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00398</p>  <p><b>作者</b>：Siddhant Garg,  Debi Prasanna Mohanty,  Siva Prasad Thota,  Sukumar Moharana</p>  <p><b>备注</b>：Accepted - British Machine vision Conference 2021</p>  <p><b>关键词</b>：standard convolutional kernels, snapdragon 750 octa, predict multiple angles, least 4 milliseconds, inverted bottleneck blocks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The main contributions of our work are two-fold. First, we present aSelf-Attention MobileNet, called SA-MobileNet Network that can model long-rangedependencies between the image features instead of processing the local regionas done by standard convolutional kernels. SA-MobileNet contains self-attentionmodules integrated with the inverted bottleneck blocks of the MobileNetV3 modelwhich results in modeling of both channel-wise attention and spatial attentionof the image features and at the same time introduce a novel self-attentionarchitecture for low-resource devices. Secondly, we propose a novel trainingpipeline for the task of image tilt detection. We treat this problem in amulti-label scenario where we predict multiple angles for a tilted input imagein a narrow interval of range 1-2 degrees, depending on the dataset used. Thisprocess induces an implicit correlation between labels without anycomputational overhead of the second or higher-order methods in multi-labellearning. With the combination of our novel approach and the architecture, wepresent state-of-the-art results on detecting the image tilt angle on mobiledevices as compared to the MobileNetV3 model. Finally, we establish thatSA-MobileNet is more accurate than MobileNetV3 on SUN397, NYU-V1, and ADE20Kdatasets by 6.42%, 10.51%, and 9.09% points respectively, and faster by atleast 4 milliseconds on Snapdragon 750 Octa-core.</p>  </details></details><details>  <summary>67. <b>标题：3DP3: 3D Scene Perception via Probabilistic Programming</b></summary>  <p><b>编号</b>：[298]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00312</p>  <p><b>作者</b>：Nishad Gothoskar,  Marco Cusumano-Towner,  Ben Zinberg,  Matin Ghavamizadeh,  Falk Pollok,  Austin Garrett,  Joshua B. Tenenbaum,  Dan Gutfreund,  Vikash K. Mansinghka</p>  <p><b>备注</b>：NeurIPS 2021</p>  <p><b>关键词</b>：novel involutive mcmc updates, depth image likelihoods based, underlying latent 3d scene, 6dof object pose estimation, 3dp3 enables scene understanding</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present 3DP3, a framework for inverse graphics that uses inference in astructured generative model of objects, scenes, and images. 3DP3 uses (i) voxelmodels to represent the 3D shape of objects, (ii) hierarchical scene graphs todecompose scenes into objects and the contacts between them, and (iii) depthimage likelihoods based on real-time graphics. Given an observed RGB-D image,3DP3's inference algorithm infers the underlying latent 3D scene, including theobject poses and a parsimonious joint parametrization of these poses, usingfast bottom-up pose proposals, novel involutive MCMC updates of the scene graphstructure, and, optionally, neural object detectors and pose estimators. Weshow that 3DP3 enables scene understanding that is aware of 3D shape,occlusion, and contact structure. Our results demonstrate that 3DP3 is moreaccurate at 6DoF object pose estimation from real images than deep learningbaselines and shows better generalization to challenging scenes with novelviewpoints, contact, and partial observability.</p>  </details></details><details>  <summary>68. <b>标题：A fast accurate fine-grain object detection model based on YOLOv4 deep  neural network</b></summary>  <p><b>编号</b>：[305]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00298</p>  <p><b>作者</b>：Arunabha M. Roy,  Rikhi Bose,  Jayabrata Bhaduri</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：mean average precision ($ map $) value, various automated agricultural detection processes, two new residual blocks, modified path aggregation network, modified network architecture maximizes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Early identification and prevention of various plant diseases in commercialfarms and orchards is a key feature of precision agriculture technology. Thispaper presents a high-performance real-time fine-grain object detectionframework that addresses several obstacles in plant disease detection thathinder the performance of traditional methods, such as, dense distribution,irregular morphology, multi-scale object classes, textural similarity, etc. Theproposed model is built on an improved version of the You Only Look Once(YOLOv4) algorithm. The modified network architecture maximizes both detectionaccuracy and speed by including the DenseNet in the back-bone to optimizefeature transfer and reuse, two new residual blocks in the backbone and neckenhance feature extraction and reduce computing cost; the Spatial PyramidPooling (SPP) enhances receptive field, and a modified Path Aggregation Network(PANet) preserves fine-grain localized information and improve feature fusion.Additionally, the use of the Hard-Swish function as the primary activationimproved the model's accuracy due to better nonlinear feature extraction. Theproposed model is tested in detecting four different diseases in tomato plantsunder various challenging environments. The model outperforms the existingstate-of-the-art detection models in detection accuracy and speed. At adetection rate of 70.19 FPS, the proposed model obtained a precision value of$90.33 \%$, F1-score of $93.64 \%$, and a mean average precision ($mAP$) valueof $96.29 \%$. Current work provides an effective and efficient method fordetecting different plant diseases in complex scenarios that can be extended todifferent fruit and crop detection, generic disease detection, and variousautomated agricultural detection processes.</p>  </details></details><details>  <summary>69. <b>标题：Get Fooled for the Right Reason: Improving Adversarial Robustness  through a Teacher-guided Curriculum Learning Approach</b></summary>  <p><b>编号</b>：[306]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00295</p>  <p><b>作者</b>：Anindya Sarkar,  Anirban Sarkar,  Sowrya Gali,  Vineeth N Balasubramanian</p>  <p><b>备注</b>：16 pages, 9 figures, Accepted at NeurIPS 2021, Code at this https URL</p>  <p><b>关键词</b>：many popular strong adversarial attacks, method achieves significant performance gains, current sota adversarially robust models, adversarially robust models compared, naturally trained models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Current SOTA adversarially robust models are mostly based on adversarialtraining (AT) and differ only by some regularizers either at inner maximizationor outer minimization steps. Being repetitive in nature during the innermaximization step, they take a huge time to train. We propose a non-iterativemethod that enforces the following ideas during training. Attribution maps aremore aligned to the actual object in the image for adversarially robust modelscompared to naturally trained models. Also, the allowed set of pixels toperturb an image (that changes model decision) should be restricted to theobject pixels only, which reduces the attack strength by limiting the attackspace. Our method achieves significant performance gains with a little extraeffort (10-20%) over existing AT models and outperforms all other methods interms of adversarial as well as natural accuracy. We have performed extensiveexperimentation with CIFAR-10, CIFAR-100, and TinyImageNet datasets andreported results against many popular strong adversarial attacks to prove theeffectiveness of our method.</p>  </details></details><details>  <summary>70. <b>标题：MFNet: Multi-class Few-shot Segmentation Network with Pixel-wise Metric  Learning</b></summary>  <p><b>编号</b>：[326]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00232</p>  <p><b>作者</b>：Miao Zhang,  Miaojing Shi,  Li Li</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：wise metric learning module, deep learning development, visual recognition tasks, triplet loss formulated, standard benchmarks pascal</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In visual recognition tasks, few-shot learning requires the ability to learnobject categories with few support examples. Its recent resurgence in light ofthe deep learning development is mainly in image classification. This workfocuses on few-shot semantic segmentation, which is still a largely unexploredfield. A few recent advances are often restricted to single-class few-shotsegmentation. In this paper, we first present a novel multi-way encoding anddecoding architecture which effectively fuses multi-scale query information andmulti-class support information into one query-support embedding; multi-classsegmentation is directly decoded upon this embedding. In order for betterfeature fusion, a multi-level attention mechanism is proposed within thearchitecture, which includes the attention for support feature modulation andattention for multi-scale combination. Last, to enhance the embedding spacelearning, an additional pixel-wise metric learning module is devised withtriplet loss formulated on the pixel-level embedding of the input image.Extensive experiments on standard benchmarks PASCAL-5^i and COCO-20^i showclear benefits of our method over the state of the art in few-shotsegmentation.</p>  </details></details><details>  <summary>71. <b>标题：Two Heads are Better than One: Geometric-Latent Attention for Point  Cloud Classification and Segmentation</b></summary>  <p><b>编号</b>：[327]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00231</p>  <p><b>作者</b>：Hanz Cuevas-Velasquez,  Antonio Javier Gallego,  Robert B. Fisher</p>  <p><b>备注</b>：Accepted in BMVC 2021</p>  <p><b>关键词</b>：learn better local relationships, overall accuracy using k, local attention layer, simple yet robust, semantically meaningful subsets</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present an innovative two-headed attention layer that combines geometricand latent features to segment a 3D scene into semantically meaningful subsets.Each head combines local and global information, using either the geometric orlatent features, of a neighborhood of points and uses this information to learnbetter local relationships. This Geometric-Latent attention layer (Ge-Latto) iscombined with a sub-sampling strategy to capture global features. Our method isinvariant to permutation thanks to the use of shared-MLP layers, and it canalso be used with point clouds with varying densities because the localattention layer does not depend on the neighbor order. Our proposal is simpleyet robust, which allows it to achieve competitive results in the ShapeNetPartand ModelNet40 datasets, and the state-of-the-art when segmenting the complexdataset S3DIS, with 69.2% IoU on Area 5, and 89.7% overall accuracy usingK-fold cross-validation on the 6 areas.</p>  </details></details><details>  <summary>72. <b>标题：A Spatio-Temporal Identity Verification Method for Person-Action  Instance Search in Movies</b></summary>  <p><b>编号</b>：[330]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00228</p>  <p><b>作者</b>：Jingyao Yang,  Chao Liang,  Yanrui Niu,  Baojin Huang,  Zhongyuan Wang</p>  <p><b>备注</b>：13 pages, 12 figures</p>  <p><b>关键词</b>：existing methods mainly include two steps, two individual ins scores cannot guarantee, large scale trecvid ins dataset, face detection results usually locate, two individual ins branches</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>As one of the challenging problems in video search, Person-Action InstanceSearch (INS) aims to retrieve shots with specific person carrying out specificaction from massive video shots. Existing methods mainly include two steps:First, two individual INS branches, i.e., person INS and action INS, areseparately conducted to compute the initial person and action ranking scores;Second, both scores are directly fused to generate the final ranking list.However, direct aggregation of two individual INS scores cannot guarantee theidentity consistency between person and action. For example, a shot with "Patis standing" and "Ian is sitting on couch" may be erroneously understood as"Pat is sitting on couch" or "Ian is standing". To address the above identityinconsistency problem (IIP), we study a spatio-temporal identity verificationmethod. Specifically, in the spatial dimension, we propose an identityconsistency verification scheme to optimize the direct fusion score of personINS and action INS. The motivation originates from an observation that facedetection results usually locate in the identity-consistent action boundingboxes. Moreover, in the temporal dimension, considering the complex filmingcondition, we propose an inter-frame detection extension operation tointerpolate missing face/action detection results in successive video frames.The proposed method is evaluated on the large scale TRECVID INS dataset, andthe experimental results show that our method can effectively mitigate the IIPand surpass the existing second places in both TRECVID 2019 and 2020 INS tasks.</p>  </details></details><details>  <summary>73. <b>标题：Mastering Atari Games with Limited Data</b></summary>  <p><b>编号</b>：[337]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00210</p>  <p><b>作者</b>：Weirui Ye,  Shaohuai Liu,  Thanard Kurutach,  Pieter Abbeel,  Yang Gao</p>  <p><b>备注</b>：Published at NeurIPS 2021</p>  <p><b>关键词</b>：consume 500 times less data, based visual rl algorithm built, prominent methods requiring millions, atari game benchmark remains, based rl algorithms</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Reinforcement learning has achieved great success in many applications.However, sample efficiency remains a key challenge, with prominent methodsrequiring millions (or even billions) of environment steps to train. Recently,there has been significant progress in sample efficient image-based RLalgorithms; however, consistent human-level performance on the Atari gamebenchmark remains an elusive goal. We propose a sample efficient model-basedvisual RL algorithm built on MuZero, which we name EfficientZero. Our methodachieves 190.4% mean human performance and 116.0% median performance on theAtari 100k benchmark with only two hours of real-time game experience andoutperforms the state SAC in some tasks on the DMControl 100k benchmark. Thisis the first time an algorithm achieves super-human performance on Atari gameswith such little data. EfficientZero's performance is also close to DQN'sperformance at 200 million frames while we consume 500 times less data.EfficientZero's low sample complexity and high performance can bring RL closerto real-world applicability. We implement our algorithm in aneasy-to-understand manner and it is available atthis https URL. We hope it will accelerate the researchof MCTS-based RL algorithms in the wider community.</p>  </details></details><details>  <summary>74. <b>标题：PatchFormer: A Versatile 3D Transformer Based on Patch Attention</b></summary>  <p><b>编号</b>：[338]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00207</p>  <p><b>作者</b>：Zhang Cheng,  Haocheng Wan,  Xinyi Shen,  Zizhao Wu</p>  <p><b>备注</b>：10 pages, 5 figures</p>  <p><b>关键词</b>：neural architecture called patchformer, major 3d learning benchmarks, general 3d recognition tasks, network achieves strong accuracy, build attentions among features</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The 3D vision community is witnesses a modeling shift from CNNs toTransformers, where pure Transformer architectures have attained top accuracyon the major 3D learning benchmarks. However, existing 3D Transformers need togenerate a large attention map, which has quadratic complexity (both in spaceand time) with respect to input size. To solve this shortcoming, we introducepatch-attention to adaptively learn a much smaller set of bases upon which theattention maps are computed. By a weighted summation upon these bases,patch-attention not only captures the global shape context but also achieveslinear complexity to input size. In addition, we propose a lightweightMulti-scale Attention (MSA) block to build attentions among features ofdifferent scales, providing the model with multi-scale features. Based on theseproposed modules, we construct our neural architecture called PatchFormer.Extensive experiments demonstrate that our network achieves strong accuracy ongeneral 3D recognition tasks with 7.3x speed-up than previous 3D Transformers.</p>  </details></details><details>  <summary>75. <b>标题：Imitating Arbitrary Talking Style for Realistic Audio-DrivenTalking Face  Synthesis</b></summary>  <p><b>编号</b>：[340]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00203</p>  <p><b>作者</b>：Haozhe Wu,  Jia Jia,  Haoyu Wang,  Yishun Dou,  Chao Duan,  Qingshan Deng</p>  <p><b>备注</b>：Accepted by MM2021, code available at this https URL</p>  <p><b>关键词</b>：different talking styles exhibit significant differences, 3d morphable model ~( 3dmm, driven talking face synthesis framework, seldomly exhibits exaggerated motions, talking face synthesis framework</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>People talk with diversified styles. For one piece of speech, differenttalking styles exhibit significant differences in the facial and head posemovements. For example, the "excited" style usually talks with the mouth wideopen, while the "solemn" style is more standardized and seldomly exhibitsexaggerated motions. Due to such huge differences between different styles, itis necessary to incorporate the talking style into audio-driven talking facesynthesis framework. In this paper, we propose to inject style into the talkingface synthesis framework through imitating arbitrary talking style of theparticular reference video. Specifically, we systematically investigate talkingstyles with our collected \textit{Ted-HD} dataset and construct style codes asseveral statistics of 3D morphable model~(3DMM) parameters. Afterwards, wedevise a latent-style-fusion~(LSF) model to synthesize stylized talking facesby imitating talking styles from the style codes. We emphasize the followingnovel characteristics of our framework: (1) It doesn't require any annotationof the style, the talking style is learned in an unsupervised manner fromtalking videos in the wild. (2) It can imitate arbitrary styles from arbitraryvideos, and the style codes can also be interpolated to generate new styles.Extensive experiments demonstrate that the proposed framework has the abilityto synthesize more natural and expressive talking styles compared with baselinemethods.</p>  </details></details><details>  <summary>76. <b>标题：A Comparative Review of Recent Few-Shot Object Detection Algorithms</b></summary>  <p><b>编号</b>：[342]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00201</p>  <p><b>作者</b>：Leng Jiaxu,  Chen Taiyue,  Gao Xinbo,  Yu Yongtao,  Wang Ye,  Gao Feng,  Wang Yue</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：shot detectors refine robust task notions, extra datasets without target, shot object detection, shot object detection, shot object detection</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Few-shot object detection, learning to adapt to the novel classes with a fewlabeled data, is an imperative and long-lasting problem due to the inherentlong-tail distribution of real-world data and the urgent demands to cut costsof data collection and annotation. Recently, some studies have explored how touse implicit cues in extra datasets without target-domain supervision to helpfew-shot detectors refine robust task notions. This survey provides acomprehensive overview from current classic and latest achievements forfew-shot object detection to future research expectations from manifoldperspectives. In particular, we first propose a data-based taxonomy of thetraining data and the form of corresponding supervision which are accessedduring the training stage. Following this taxonomy, we present a significantreview of the formal definition, main challenges, benchmark datasets,evaluation metrics, and learning strategies. In addition, we present a detailedinvestigation of how to interplay the object detection methods to develop thisissue systematically. Finally, we conclude with the current status of few-shotobject detection, along with potential research directions for this field.</p>  </details></details><details>  <summary>77. <b>标题：Leveraging SE(3) Equivariance for Self-Supervised Category-Level Object  Pose Estimation</b></summary>  <p><b>编号</b>：[349]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00190</p>  <p><b>作者</b>：Xiaolong Li,  Yijia Weng,  Li Yi,  Leonidas Guibas,  A. Lynn Abbott,  Shuran Song,  He Wang</p>  <p><b>备注</b>：20 pages, 11 figures</p>  <p><b>关键词</b>：equivariant pose estimation module achieves category, level reference frame without using, invariant shape reconstruction module learns, level object pose estimation aims, equivariant pose estimation module</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Category-level object pose estimation aims to find 6D object poses ofpreviously unseen object instances from known categories without access toobject CAD models. To reduce the huge amount of pose annotations needed forcategory-level learning, we propose for the first time a self-supervisedlearning framework to estimate category-level 6D object pose from single 3Dpoint clouds.During training, our method assumes no ground-truth poseannotations, no CAD models, and no multi-view supervision. The key to ourmethod is to disentangle shape and pose through an invariant shapereconstruction module and an equivariant pose estimation module, empowered bySE(3) equivariant point cloud networks.The invariant shape reconstructionmodule learns to perform aligned reconstructions, yielding a category-levelreference frame without using any annotations. In addition, the equivariantpose estimation module achieves category-level pose estimation accuracy that iscomparable to some fully supervised methods. Extensive experiments demonstratethe effectiveness of our approach on both complete and partial depth pointclouds from the ModelNet40 benchmark, and on real depth point clouds from theNOCS-REAL 275 dataset. The project page with code and visualizations can befound at: this https URL.</p>  </details></details><details>  <summary>78. <b>标题：Geometry-Aware Hierarchical Bayesian Learning on Manifolds</b></summary>  <p><b>编号</b>：[351]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00184</p>  <p><b>作者</b>：Yonghui Fan,  Yalin Wang</p>  <p><b>备注</b>：Published in WACV 2022</p>  <p><b>关键词</b>：gaussian processes demonstrates encouraging regression, method outperforms existing bayesian methods, enables geometrically reasonable inferences, efficiently aggregate geometric features, solving computer vision tasks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Bayesian learning with Gaussian processes demonstrates encouraging regressionand classification performances in solving computer vision tasks. However,Bayesian methods on 3D manifold-valued vision data, such as meshes and pointclouds, are seldom studied. One of the primary challenges is how to effectivelyand efficiently aggregate geometric features from the irregular inputs. In thispaper, we propose a hierarchical Bayesian learning model to address thischallenge. We initially introduce a kernel with the properties ofgeometry-awareness and intra-kernel convolution. This enables geometricallyreasonable inferences on manifolds without using any specific hand-craftedfeature descriptors. Then, we use a Gaussian process regression to organize theinputs and finally implement a hierarchical Bayesian network for the featureaggregation. Furthermore, we incorporate the feature learning of neuralnetworks with the feature aggregation of Bayesian models to investigate thefeasibility of jointly learning on manifolds. Experimental results not onlyshow that our method outperforms existing Bayesian methods on manifolds butalso demonstrate the prospect of coupling neural networks with Bayesiannetworks.</p>  </details></details><details>  <summary>79. <b>标题：Direct attacks using fake images in iris verification</b></summary>  <p><b>编号</b>：[353]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00178</p>  <p><b>作者</b>：Virginia Ruiz-Albacete,  Pedro Tome-Gonzalez,  Fernando Alonso-Fernandez,  Javier Galbally,  Julian Fierrez,  Javier Ortega-Garcia</p>  <p><b>备注</b>：Published at European Workshop on Biometrics and Identity Management (BIOID)</p>  <p><b>关键词</b>：publicly available iris recognition system, different operational scenarios, based recognition systems, iris segmentation step, fake iris images</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this contribution, the vulnerabilities of iris-based recognition systemsto direct attacks are studied. A database of fake iris images has been createdfrom real iris of the BioSec baseline database. Iris images are printed using acommercial printer and then, presented at the iris sensor. We use for ourexperiments a publicly available iris recognition system, which somemodifications to improve the iris segmentation step. Based on results achievedon different operational scenarios, we show that the system is vulnerable todirect attacks, pointing out the importance of having countermeasures againstthis type of fraudulent actions.</p>  </details></details><details>  <summary>80. <b>标题：Iris Recognition Based on SIFT Features</b></summary>  <p><b>编号</b>：[355]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00176</p>  <p><b>作者</b>：Fernando Alonso-Fernandez,  Pedro Tome-Gonzalez,  Virginia Ruiz-Albacete,  Javier Ortega-Garcia</p>  <p><b>备注</b>：Published at IEEE International Conference on Biometrics, Identity and Security (BIdS)</p>  <p><b>关键词</b>：allowing less constrained image acquisition conditions, two approaches achieves significantly better performance, extract characteristic sift feature points, traditional iris recognition systems, popular matching approach based</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Biometric methods based on iris images are believed to allow very highaccuracy, and there has been an explosion of interest in iris biometrics inrecent years. In this paper, we use the Scale Invariant Feature Transformation(SIFT) for recognition using iris images. Contrarily to traditional irisrecognition systems, the SIFT approach does not rely on the transformation ofthe iris pattern to polar coordinates or on highly accurate segmentation,allowing less constrained image acquisition conditions. We extractcharacteristic SIFT feature points in scale space and perform matching based onthe texture information around the feature points using the SIFT operator.Experiments are done using the BioSec multimodal database, which includes 3,200iris images from 200 individuals acquired in two different sessions. Wecontribute with the analysis of the influence of different SIFT parameters onthe recognition performance. We also show the complementarity between the SIFTapproach and a popular matching approach based on transformation to polarcoordinates and Log-Gabor wavelets. The combination of the two approachesachieves significantly better performance than either of the individualschemes, with a performance improvement of 24% in the Equal Error Rate.</p>  </details></details><details>  <summary>81. <b>标题：HIERMATCH: Leveraging Label Hierarchies for Improving Semi-Supervised  Learning</b></summary>  <p><b>编号</b>：[362]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00164</p>  <p><b>作者</b>：Ashima Garg,  Shaurya Bagga,  Yashvardhan Singh,  Saket Anand</p>  <p><b>备注</b>：10 pages, 1 figure, Accepted in WACV 2022</p>  <p><b>关键词</b>：supervision using coarse category labels, uses coarse class labels, g ., downy woodpeckers, g ., woodpeckers, fronted woodpeckers ).</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Semi-supervised learning approaches have emerged as an active area ofresearch to combat the challenge of obtaining large amounts of annotated data.Towards the goal of improving the performance of semi-supervised learningmethods, we propose a novel framework, HIERMATCH, a semi-supervised approachthat leverages hierarchical information to reduce labeling costs and performsas well as a vanilla semi-supervised learning method. Hierarchical informationis often available as prior knowledge in the form of coarse labels (e.g.,woodpeckers) for images with fine-grained labels (e.g., downy woodpeckers orgolden-fronted woodpeckers). However, the use of supervision using coarsecategory labels to improve semi-supervised techniques has not been explored. Inthe absence of fine-grained labels, HIERMATCH exploits the label hierarchy anduses coarse class labels as a weak supervisory signal. Additionally, HIERMATCHis a generic-approach to improve any semisupervised learning framework, wedemonstrate this using our results on recent state-of-the-art techniquesMixMatch and FixMatch. We evaluate the efficacy of HIERMATCH on two benchmarkdatasets, namely CIFAR-100 and NABirds. HIERMATCH can reduce the usage offine-grained labels by 50% on CIFAR-100 with only a marginal drop of 0.59% intop-1 accuracy as compared to MixMatch.</p>  </details></details><details>  <summary>82. <b>标题：DIB-R++: Learning to Predict Lighting and Material with a Hybrid  Differentiable Renderer</b></summary>  <p><b>编号</b>：[374]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00140</p>  <p><b>作者</b>：Wenzheng Chen,  Joey Litalien,  Jun Gao,  Zian Wang,  Clement Fuji Tsang,  Sameh Khamis,  Or Litany,  Sanja Fidler</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：showcase several artistic applications including material editing, based differentiable renderers leveraging path tracing, via spherical basis functions, specular reflections commonly observed, respective strengths -- speed</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We consider the challenging problem of predicting intrinsic object propertiesfrom a single image by exploiting differentiable renderers. Many previouslearning-based approaches for inverse graphics adopt rasterization-basedrenderers and assume naive lighting and material models, which often fail toaccount for non-Lambertian, specular reflections commonly observed in the wild.In this work, we propose DIBR++, a hybrid differentiable renderer whichsupports these photorealistic effects by combining rasterization andray-tracing, taking the advantage of their respective strengths -- speed andrealism. Our renderer incorporates environmental lighting and spatially-varyingmaterial models to efficiently approximate light transport, either throughdirect estimation or via spherical basis functions. Compared to more advancedphysics-based differentiable renderers leveraging path tracing, DIBR++ ishighly performant due to its compact and expressive shading model, whichenables easy integration with learning frameworks for geometry, reflectance andlighting prediction from a single image without requiring any ground-truth. Weexperimentally demonstrate that our approach achieves superior material andlighting disentanglement on synthetic and real data compared to existingrasterization-based approaches and showcase several artistic applicationsincluding material editing and relighting.</p>  </details></details><details>  <summary>83. <b>标题：Three approaches to facilitate DNN generalization to objects in  out-of-distribution orientations and illuminations: late-stopping, tuning  batch normalization and invariance loss</b></summary>  <p><b>编号</b>：[376]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00131</p>  <p><b>作者</b>：Akira Sakai,  Taro Sunagawa,  Spandan Madan,  Kanata Suzuki,  Takashi Katoh,  Hiromichi Kobashi,  Hanspeter Pfister,  Pawan Sinha,  Xavier Boix,  Tomotake Sasaki</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：enable ood accuracy gains -- individual neurons, often biased towards objects, investigate three different approaches, three approaches focus, approaches substantially improves</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The training data distribution is often biased towards objects in certainorientations and illumination conditions. While humans have a remarkablecapability of recognizing objects in out-of-distribution (OoD) orientations andilluminations, Deep Neural Networks (DNNs) severely suffer in this case, evenwhen large amounts of training examples are available. In this paper, weinvestigate three different approaches to improve DNNs in recognizing objectsin OoD orientations and illuminations. Namely, these are (i) training muchlonger after convergence of the in-distribution (InD) validation accuracy,i.e., late-stopping, (ii) tuning the momentum parameter of the batchnormalization layers, and (iii) enforcing invariance of the neural activity inan intermediate layer to orientation and illumination conditions. Each of theseapproaches substantially improves the DNN's OoD accuracy (more than 20% in somecases). We report results in four datasets: two datasets are modified from theMNIST and iLab datasets, and the other two are novel (one of 3D rendered carsand another of objects taken from various controlled orientations andillumination conditions). These datasets allow to study the effects ofdifferent amounts of bias and are challenging as DNNs perform poorly in OoDconditions. Finally, we demonstrate that even though the three approaches focuson different aspects of DNNs, they all tend to lead to the same underlyingneural mechanism to enable OoD accuracy gains -- individual neurons in theintermediate layers become more selective to a category and also invariant toOoD orientations and illuminations.</p>  </details></details><details>  <summary>84. <b>标题：Predicting Atlantic Multidecadal Variability</b></summary>  <p><b>编号</b>：[379]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00124</p>  <p><b>作者</b>：Glenn Liu,  Peidong Wang,  Matthew Beveridge,  Young-Oh Kwon,  Iddo Drori</p>  <p><b>备注</b>：7 pages, 3 figures</p>  <p><b>关键词</b>：community earth system model 1 large ensemble project, work tests multiple machine learning models, amv strongly impacts local climate, north atlantic sea surface temperature, traditional persistence forecast baseline</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Atlantic Multidecadal Variability (AMV) describes variations of NorthAtlantic sea surface temperature with a typical cycle of between 60 and 70years. AMV strongly impacts local climate over North America and Europe,therefore prediction of AMV, especially the extreme values, is of greatsocietal utility for understanding and responding to regional climate change.This work tests multiple machine learning models to improve the state of AMVprediction from maps of sea surface temperature, salinity, and sea levelpressure in the North Atlantic region. We use data from the Community EarthSystem Model 1 Large Ensemble Project, a state-of-the-art climate model with3,440 years of data. Our results demonstrate that all of the models we useoutperform the traditional persistence forecast baseline. Predicting the AMV isimportant for identifying future extreme temperatures and precipitation, aswell as hurricane activity, in Europe and North America up to 25 years inadvance.</p>  </details></details><details>  <summary>85. <b>标题：Longitudinal Analysis of Mask and No-Mask on Child Face Recognition</b></summary>  <p><b>编号</b>：[382]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00121</p>  <p><b>作者</b>：Praveen Kumar Chandaliya,  Zahid Akhtar,  Neeta Nain</p>  <p><b>备注</b>：6 Pages, 3 Figure</p>  <p><b>关键词</b>：e ., extended indian child longitudinal face dataset, three top performing publicly available face matchers, mask longitudinal child face dataset, child longitudinal impact together, still face obstacles caused</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Face is one of the most widely employed traits for person recognition, evenin many large-scale applications. Despite technological advancements in facerecognition systems, they still face obstacles caused by pose, expression,occlusion, and aging variations. Owing to the COVID-19 pandemic, contactlessidentity verification has become exceedingly vital. To constrain the pandemic,people have started using face mask. Recently, few studies have been conductedon the effect of face mask on adult face recognition systems. However, theimpact of aging with face mask on child subject recognition has not beenadequately explored. Thus, the main objective of this study is analyzing thechild longitudinal impact together with face mask and other covariates on facerecognition systems. Specifically, we performed a comparative investigation ofthree top performing publicly available face matchers and a post-COVID-19commercial-off-the-shelf (COTS) system under child cross-age verification andidentification settings using our generated synthetic mask and no-mask samples.Furthermore, we investigated the longitudinal consequence of eyeglasses withmask and no-mask. The study exploited no-mask longitudinal child face dataset(i.e., extended Indian Child Longitudinal Face Dataset) that contains $26,258$face images of $7,473$ subjects in the age group of $[2, 18]$ over an averagetime span of $3.35$ years. Experimental results showed that problem of facemask on automated face recognition is compounded by aging variate.</p>  </details></details><details>  <summary>86. <b>标题：Visual Explanations for Convolutional Neural Networks via Latent  Traversal of Generative Adversarial Networks</b></summary>  <p><b>编号</b>：[384]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00116</p>  <p><b>作者</b>：Amil Dravid,  Aggelos K. Katsaggelos</p>  <p><b>备注</b>：2 pages, 2 figures, to appear as extended abstract at AAAI-22</p>  <p><b>关键词</b>：gan framework disentangles lung structure, weighted class activation mapping, utilizing generative adversarial networks, specifically deep neural networks, convolutional neural network</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Lack of explainability in artificial intelligence, specifically deep neuralnetworks, remains a bottleneck for implementing models in practice. Populartechniques such as Gradient-weighted Class Activation Mapping (Grad-CAM)provide a coarse map of salient features in an image, which rarely tells thewhole story of what a convolutional neural network (CNN) learned. UsingCOVID-19 chest X-rays, we present a method for interpreting what a CNN haslearned by utilizing Generative Adversarial Networks (GANs). Our GAN frameworkdisentangles lung structure from COVID-19 features. Using this GAN, we canvisualize the transition of a pair of COVID negative lungs in a chestradiograph to a COVID positive pair by interpolating in the latent space of theGAN, which provides fine-grained visualization of how the CNN responds tovarying features within the lungs.</p>  </details></details><details>  <summary>87. <b>标题：Classification of jujube fruit based on several pricing factors using  machine learning methods</b></summary>  <p><b>编号</b>：[387]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00112</p>  <p><b>作者</b>：Abdollah Zakeri,  Ruhollah Hedayati,  Mohammad Khedmati,  Mehran Taghipour-Gorjikolaie</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：useful features using feature selection algorithms like pca, grading jujube fruits using machine learning techniques, first acquire several images, machine learning methods, using decision tree</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Jujube is a fruit mainly cultivated in India, China and Iran and has manyhealth benefits. It is sold both fresh and dried. There are several factors injujube pricing such as weight, wrinkles and defections. Some jujube farmerssell their product all at once, without any proper sorting or classification,for an average price. Our studies and experiences show that their profit canincrease significantly if their product is sold after the sorting process.There are some traditional sorting methods for dried jujube fruit but they arecostly, time consuming and can be inaccurate due to human error. Nowadays,computer vision combined with machine learning methods, is used increasingly infood industry for sorting and classification purposes and solve many of thetraditional sorting methods' problems. In this paper we are proposing acomputer vision-based method for grading jujube fruits using machine learningtechniques which will take most of the important pricing factors into accountand can be used to increase the profit of farmers. In this method we firstacquire several images from different samples and then extract their visualfeatures such as color features, shape and size features, texture features,defection and wrinkle features and then we select the most useful featuresusing feature selection algorithms like PCA and CFS. A feature vector isobtained for each sample and we use these vectors to train our classifiers tobe able to specify the corresponding pre-defined group for each of the samples.We used different classifiers and training methods in order to obtain the bestresult and by using decision tree we could reach 98.8% accuracy of theclassification.</p>  </details></details><details>  <summary>88. <b>标题：FC2T2: The Fast Continuous Convolutional Taylor Transform with  Applications in Vision and Graphics</b></summary>  <p><b>编号</b>：[388]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00110</p>  <p><b>作者</b>：Henning Lange,  J. Nathan Kutz</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：fast continuous convolutional taylor transform, low dimensional convolutional operators, require repeated function evaluations, unlike regular neural networks, modern machine learning perspective</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Series expansions have been a cornerstone of applied mathematics andengineering for centuries. In this paper, we revisit the Taylor seriesexpansion from a modern Machine Learning perspective. Specifically, weintroduce the Fast Continuous Convolutional Taylor Transform (FC2T2), a variantof the Fast Multipole Method (FMM), that allows for the efficient approximationof low dimensional convolutional operators in continuous space. We build uponthe FMM which is an approximate algorithm that reduces the computationalcomplexity of N-body problems from O(NM) to O(N+M) and finds application ine.g. particle simulations. As an intermediary step, the FMM produces a seriesexpansion for every cell on a grid and we introduce algorithms that actdirectly upon this representation. These algorithms analytically butapproximately compute the quantities required for the forward and backward passof the backpropagation algorithm and can therefore be employed as (implicit)layers in Neural Networks. Specifically, we introduce a root-implicit layerthat outputs surface normals and object distances as well as anintegral-implicit layer that outputs a rendering of a radiance field given a 3Dpose. In the context of Machine Learning, $N$ and $M$ can be understood as thenumber of model parameters and model evaluations respectively which entailsthat, for applications that require repeated function evaluations which areprevalent in Computer Vision and Graphics, unlike regular Neural Networks, thetechniques introduce in this paper scale gracefully with parameters. For someapplications, this results in a 200x reduction in FLOPs compared tostate-of-the-art approaches at a reasonable or non-existent loss in accuracy.</p>  </details></details><details>  <summary>89. <b>标题：Deep Deterministic Uncertainty for Semantic Segmentation</b></summary>  <p><b>编号</b>：[403]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00079</p>  <p><b>作者</b>：Jishnu Mukhoti,  Joost van Amersfoort,  Philip H.S. Torr,  Yarin Gal</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：uncertainty estimation using feature space densities, ddu improves upon mc dropout, apply ddu location independently, extend deep deterministic uncertainty, pixel dependent ddu</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We extend Deep Deterministic Uncertainty (DDU), a method for uncertaintyestimation using feature space densities, to semantic segmentation. DDU enablesquantifying and disentangling epistemic and aleatoric uncertainty in a singleforward pass through the model. We study the similarity of featurerepresentations of pixels at different locations for the same class andconclude that it is feasible to apply DDU location independently, which leadsto a significant reduction in memory consumption compared to pixel dependentDDU. Using the DeepLab-v3+ architecture on Pascal VOC 2012, we show that DDUimproves upon MC Dropout and Deep Ensembles while being significantly faster tocompute.</p>  </details></details><details>  <summary>90. <b>标题：Polyline Based Generative Navigable Space Segmentation for Autonomous  Visual Navigation</b></summary>  <p><b>编号</b>：[411]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00063</p>  <p><b>作者</b>：Zheng Chen,  Zhengming Ding,  David Crandall,  Lantao Liu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：propose polyline segmentation variational autoencoder networks, current segmentation techniques heavily rely, visual receding horizon planning method, scaled euclidean distance field, achieve autonomous navigation without</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Detecting navigable space is a fundamental capability for mobile robotsnavigating in unknown or unmapped environments. In this work, we treat thevisual navigable space segmentation as a scene decomposition problem andpropose Polyline Segmentation Variational AutoEncoder Networks (PSV-Nets), arepresentation-learning-based framework to enable robots to learn the navigablespace segmentation in an unsupervised manner. Current segmentation techniquesheavily rely on supervised learning strategies which demand a large amount ofpixel-level annotated images. In contrast, the proposed framework leverages agenerative model - Variational AutoEncoder (VAE) and an AutoEncoder (AE) tolearn a polyline representation that compactly outlines the desired navigablespace boundary in an unsupervised way. We also propose a visual recedinghorizon planning method that uses the learned navigable space and a ScaledEuclidean Distance Field (SEDF) to achieve autonomous navigation without anexplicit map. Through extensive experiments, we have validated that theproposed PSV-Nets can learn the visual navigable space with high accuracy, evenwithout any single label. We also show that the prediction of the PSV-Nets canbe further improved with a small number of labels (if available) and cansignificantly outperform the state-of-the-art fully supervised-learning-basedsegmentation methods.</p>  </details></details><details>  <summary>91. <b>标题：Generalized Data Weighting via Class-level Gradient Manipulation</b></summary>  <p><b>编号</b>：[414]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00056</p>  <p><b>作者</b>：Can Chen,  Shuhao Zheng,  Xi Chen,  Erqun Dong,  Xue Liu,  Hao Liu,  Dejing Dou</p>  <p><b>备注</b>：17 pages, 8 figures, accepted by NeurIPS 2021 for a poster session, camera-ready version, initial submission to arXiv</p>  <p><b>关键词</b>：60 \%$ uniform noise setting, gdw achieves remarkable performance improvement, extra computational cost compared, simultaneously mitigate label noise, propose generalized data weighting</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Label noise and class imbalance are two major issues coexisting in real-worlddatasets. To alleviate the two issues, state-of-the-art methods reweight eachinstance by leveraging a small amount of clean and unbiased data. Yet, thesemethods overlook class-level information within each instance, which can befurther utilized to improve performance. To this end, in this paper, we proposeGeneralized Data Weighting (GDW) to simultaneously mitigate label noise andclass imbalance by manipulating gradients at the class level. To be specific,GDW unrolls the loss gradient to class-level gradients by the chain rule andreweights the flow of each gradient separately. In this way, GDW achievesremarkable performance improvement on both issues. Aside from the performancegain, GDW efficiently obtains class-level weights without introducing any extracomputational cost compared with instance weighting methods. Specifically, GDWperforms a gradient descent step on class-level weights, which only relies onintermediate gradients. Extensive experiments in various settings verify theeffectiveness of GDW. For example, GDW outperforms state-of-the-art methods by$2.56\%$ under the $60\%$ uniform noise setting in CIFAR10. Our code isavailable at this https URL.</p>  </details></details><details>  <summary>92. <b>标题：CvS: Classification via Segmentation For Small Datasets</b></summary>  <p><b>编号</b>：[418]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00042</p>  <p><b>作者</b>：Nooshin Mojab,  Philip S. Yu,  Joelle A. Hallak,  Darvin Yi</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：computer vision applications across various domains, achieve much higher classification results compared, deep learning methods relies heavily, deep learning models, shown promising results</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep learning models have shown promising results in a wide range of computervision applications across various domains. The success of deep learningmethods relies heavily on the availability of a large amount of data. Deepneural networks are prone to overfitting when data is scarce. This problembecomes even more severe for neural network with classification head withaccess to only a few data points. However, acquiring large-scale datasets isvery challenging, laborious, or even infeasible in some domains. Hence,developing classifiers that are able to perform well in small data regimes iscrucial for applications with limited data. This paper presents CvS, acost-effective classifier for small datasets that derives the classificationlabels from predicting the segmentation maps. We employ the label propagationmethod to achieve a fully segmented dataset with only a handful of manuallysegmented data. We evaluate the effectiveness of our framework on diverseproblems showing that CvS is able to achieve much higher classification resultscompared to previous methods when given only a handful of examples.</p>  </details></details><details>  <summary>93. <b>标题：On-device Real-time Hand Gesture Recognition</b></summary>  <p><b>编号</b>：[419]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00038</p>  <p><b>作者</b>：George Sung,  Kanstantsin Sokal,  Esha Uboweja,  Valentin Bazarevsky,  Jonathan Baccash,  Eduard Gabriel Bazavan,  Chuo-Ling Chang,  Matthias Grundmann</p>  <p><b>备注</b>：5 pages, 6 figures; ICCV Workshop on Computer Vision for Augmented and Virtual Reality, Montreal, Canada, 2021</p>  <p><b>关键词</b>：create two different gesture classifiers, time hand gesture recognition, hand skeleton tracker, hand skeleton tracker, world metric space</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present an on-device real-time hand gesture recognition (HGR) system,which detects a set of predefined static gestures from a single RGB camera. Thesystem consists of two parts: a hand skeleton tracker and a gesture classifier.We use MediaPipe Hands as the basis of the hand skeleton tracker, improve thekeypoint accuracy, and add the estimation of 3D keypoints in a world metricspace. We create two different gesture classifiers, one based on heuristics andthe other using neural networks (NN).</p>  </details></details><details>  <summary>94. <b>标题：Domain Agnostic Few-Shot Learning For Document Intelligence</b></summary>  <p><b>编号</b>：[423]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00007</p>  <p><b>作者</b>：Jaya Krishna Mandivarapu,  Eric bunch,  Glenn fung</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：proposed method shows consistent improvements, shot document image classification, experimental results demonstrate, methods also aim, collecting large samples</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Few-shot learning aims to generalize to novel classes with only a few sampleswith class labels. Research in few-shot learning has borrowed techniques fromtransfer learning, metric learning, meta-learning, and Bayesian methods. Thesemethods also aim to train models from limited training samples, and whileencouraging performance has been achieved, they often fail to generalize tonovel domains. Many of the existing meta-learning methods rely on training datafor which the base classes are sampled from the same domain as the novelclasses used for meta-testing. However, in many applications in the industry,such as document classification, collecting large samples of data formeta-learning is infeasible or impossible. While research in the field of thecross-domain few-shot learning exists, it is mostly limited to computer vision.To our knowledge, no work yet exists that examines the use of few-shot learningfor classification of semi-structured documents (scans of paper documents)generated as part of a business workflow (forms, letters, bills, etc.). Herethe domain shift is significant, going from natural images to thesemi-structured documents of interest. In this work, we address the problem offew-shot document image classification under domain shift. We evaluate our workby extensive comparisons with existing methods. Experimental resultsdemonstrate that the proposed method shows consistent improvements on thefew-shot classification performance under domain shift.</p>  </details></details><details>  <summary>95. <b>标题：Adaptive Hierarchical Similarity Metric Learning with Noisy Labels</b></summary>  <p><b>编号</b>：[424]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00006</p>  <p><b>作者</b>：Jiexi Yan,  Lei Luo,  Cheng Deng,  Heng Huang</p>  <p><b>备注</b>：11 pages, 5 figures</p>  <p><b>关键词</b>：noisy labels often cause severe performance degradation, effectively excavate richer similarity information beyond binary, adaptive hierarchical similarity metric learning method, existing deep metric learning methods, current deep metric learning approaches</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep Metric Learning (DML) plays a critical role in various machine learningtasks. However, most existing deep metric learning methods with binarysimilarity are sensitive to noisy labels, which are widely present inreal-world data. Since these noisy labels often cause severe performancedegradation, it is crucial to enhance the robustness and generalization abilityof DML. In this paper, we propose an Adaptive Hierarchical Similarity MetricLearning method. It considers two noise-insensitive information, \textit{i.e.},class-wise divergence and sample-wise consistency. Specifically, class-wisedivergence can effectively excavate richer similarity information beyond binaryin modeling by taking advantage of Hyperbolic metric learning, whilesample-wise consistency can further improve the generalization ability of themodel using contrastive augmentation. More importantly, we design an adaptivestrategy to integrate this information in a unified view. It is noteworthy thatthe new method can be extended to any pair-based metric loss. Extensiveexperimental results on benchmark datasets demonstrate that our method achievesstate-of-the-art performance compared with current deep metric learningapproaches.</p>  </details></details><details>  <summary>96. <b>标题：Correlation between image quality metrics of magnetic resonance images  and the neural network segmentation accuracy</b></summary>  <p><b>编号</b>：[430]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01093</p>  <p><b>作者</b>：Rajarajeswari Muthusivarajan,  Adrian Celaya,  Joshua P. Yung,  Satish Viswanath,  Daniel S. Marcus,  Caroline Chung,  David Fuentes</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：iqm based training inputs shed light, multilevel connections process input data, magnetic resonance images enables learning, training data set based, networks learning efficiency depends</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep neural networks with multilevel connections process input data incomplex ways to learn the information.A networks learning efficiency dependsnot only on the complex neural network architecture but also on the inputtraining images.Medical image segmentation with deep neural networks for skullstripping or tumor segmentation from magnetic resonance images enables learningboth global and local features of the images.Though medical images arecollected in a controlled environment,there may be artifacts or equipment basedvariance that cause inherent bias in the input this http URL this study, weinvestigated the correlation between the image quality metrics of MR imageswith the neural network segmentation accuracy.For that we have used the 3DDenseNet architecture and let the network trained on the same input butapplying different methodologies to select the training data set based on theIQM values.The difference in the segmentation accuracy between models based onthe random training inputs with IQM based training inputs shed light on therole of image quality metrics on segmentation this http URL running the imagequality metrics to choose the training inputs,further we may tune the learningefficiency of the network and the segmentation accuracy.</p>  </details></details><details>  <summary>97. <b>标题：Robustness of deep learning algorithms in astronomy -- galaxy morphology  studies</b></summary>  <p><b>编号</b>：[440]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00961</p>  <p><b>作者</b>：A. Ćiprijanović,  D. Kafkes,  G. N. Perdue,  K. Pedro,  G. Snyder,  F. J. Sánchez,  S. Madireddy,  S. M. Wild,  B. Nord</p>  <p><b>备注</b>：Accepted in: Fourth Workshop on Machine Learning and the Physical Sciences (35th Conference on Neural Information Processing Systems; NeurIPS2021); final version</p>  <p><b>关键词</b>：help improve model robustness, help scientists build, naturally occurring attacks, domain adaptation techniques, common image processing</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep learning models are being increasingly adopted in wide array ofscientific domains, especially to handle high-dimensionality and volume of thescientific data. However, these models tend to be brittle due to theircomplexity and overparametrization, especially to the inadvertent adversarialperturbations that can appear due to common image processing such ascompression or blurring that are often seen with real scientific data. It iscrucial to understand this brittleness and develop models robust to theseadversarial perturbations. To this end, we study the effect of observationalnoise from the exposure time, as well as the worst case scenario of a one-pixelattack as a proxy for compression or telescope errors on performance ofResNet18 trained to distinguish between galaxies of different morphologies inLSST mock data. We also explore how domain adaptation techniques can helpimprove model robustness in case of this type of naturally occurring attacksand help scientists build more trustworthy and stable models.</p>  </details></details><details>  <summary>98. <b>标题：IRA: A shape matching approach for recognition and comparison of generic  atomic patterns</b></summary>  <p><b>编号</b>：[441]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00939</p>  <p><b>作者</b>：Miha Gunde,  Nicolas Salles,  Anne Hémeryck,  Layla Martin-Samos</p>  <p><b>备注</b>：18 pages, 19 figures</p>  <p><b>关键词</b>：algorithm iteratively suggests rotated atom, standard singular value decomposition, including distorted structural fragments, constrained shortest distance assignments, returns minimal value</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We propose a versatile, parameter-less approach for solving the shapematching problem, specifically in the context of atomic structures when atomicassignments are not known a priori. The algorithm Iteratively suggests Rotatedatom-centered reference frames and Assignments (Iterative Rotations andAssignments, IRA). The frame for which a permutationally invariant set-setdistance, namely the Hausdorff distance, returns minimal value is chosen as thesolution of the matching problem. IRA is able to find rigid rotations,reflections, translations, and permutations between structures with differentnumbers of atoms, for any atomic arrangement and pattern, periodic or not. Whendistortions are present between the structures, optimal rotation andtranslation are found by further applying a standard Singular ValueDecomposition-based method. To compute the atomic assignments under theone-to-one assignment constraint, we develop our own algorithm, ConstrainedShortest Distance Assignments (CShDA). The overall approach is extensivelytested on several structures, including distorted structural fragments.Efficiency of the proposed algorithm is shown as a benchmark comparison againsttwo other shape matching algorithms. We discuss the use of our approach for theidentification and comparison of structures and structural fragments throughtwo examples: a replica exchange trajectory of a cyanine molecule, in which weshow how our approach could aid the exploration of relevant collectivecoordinates for clustering the data; and an SiO$_2$ amorphous model, in whichwe compute distortion scores and compare them with a classical strain-basedpotential. The source code and benchmark data are available at\url{this https URL}.</p>  </details></details><details>  <summary>99. <b>标题：Simulating Realistic MRI variations to Improve Deep Learning model and  visual explanations using GradCAM</b></summary>  <p><b>编号</b>：[446]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00837</p>  <p><b>作者</b>：Muhammad Ilyas Patel,  Shrey Singla,  Razeem Ahmad Ali Mattathodi,  Sumit Sharma,  Deepam Gautam,  Srinivasa Rao Kundeti</p>  <p><b>备注</b>：8 pages, 9 figures, IEEE-CCEM 2021 conference</p>  <p><b>关键词</b>：solving brain mri volumetric landmark detection problem, three respective views -- sagittal, proposed method shows favorable results, generate synthetic 3d volumetric data, weighted class activation mapping</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In the medical field, landmark detection in MRI plays an important role inreducing medical technician efforts in tasks like scan planning, imageregistration, etc. First, 88 landmarks spread across the brain anatomy in thethree respective views -- sagittal, coronal, and axial are manually annotated,later guidelines from the expert clinical technicians are takensub-anatomy-wise, for better localization of the existing landmarks, in orderto identify and locate the important atlas landmarks even in oblique scans. Toovercome limited data availability, we implement realistic data augmentation togenerate synthetic 3D volumetric data. We use a modified HighRes3DNet model forsolving brain MRI volumetric landmark detection problem. In order to visuallyexplain our trained model on unseen data, and discern a stronger model from aweaker model, we implement Gradient-weighted Class Activation Mapping(Grad-CAM) which produces a coarse localization map highlighting the regionsthe model is focusing. Our experiments show that the proposed method showsfavorable results, and the overall pipeline can be extended to a variablenumber of landmarks and other anatomies.</p>  </details></details><details>  <summary>100. <b>标题：Redundancy Reduction in Semantic Segmentation of 3D Brain Tumor MRIs</b></summary>  <p><b>编号</b>：[453]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00742</p>  <p><b>作者</b>：Md Mahfuzur Rahman Siddiquee,  Andriy Myronenko</p>  <p><b>备注</b>：BraTS 2021, BrainLes, MICCAI 2021</p>  <p><b>关键词</b>：within top 10 performing teams, multimodal brain tumor segmentation challenge, brain tumor segmentation methods, confidence based ensembling techniques, decoder based segmentation network</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Another year of the multimodal brain tumor segmentation challenge (BraTS)2021 provides an even larger dataset to facilitate collaboration and researchof brain tumor segmentation methods, which are necessary for disease analysisand treatment planning. A large dataset size of BraTS 2021 and the advent ofmodern GPUs provide a better opportunity for deep-learning based approaches tolearn tumor representation from the data. In this work, we maintained anencoder-decoder based segmentation network, but focused on a modification ofnetwork training process that minimizes redundancy under perturbations. Given aset trained networks, we further introduce a confidence based ensemblingtechniques to further improve the performance. We evaluated the method on BraTS2021 validation board, and achieved 0.8600, 0.8868 and 0.9265 average dice forenhanced tumor core, tumor core and whole tumor, respectively. Our team(NVAUTO) submission was the top performing in terms of ET and TC scores andwithin top 10 performing teams in terms of WT scores.</p>  </details></details><details>  <summary>101. <b>标题：Influential Prototypical Networks for Few Shot Learning: A  Dermatological Case Study</b></summary>  <p><b>编号</b>：[455]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00698</p>  <p><b>作者</b>：Ranjana Roy Chowdhury,  Deepti R. Bathula</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：three different benchmark dermatological datasets, conventional pn attributes equal importance, support sample embeddings belonging, support sample distribution, simple yet effective</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Prototypical network (PN) is a simple yet effective few shot learningstrategy. It is a metric-based meta-learning technique where classification isperformed by computing Euclidean distances to prototypical representations ofeach class. Conventional PN attributes equal importance to all samples andgenerates prototypes by simply averaging the support sample embeddingsbelonging to each class. In this work, we propose a novel version of PN thatattributes weights to support samples corresponding to their influence on thesupport sample distribution. Influence weights of samples are calculated basedon maximum mean discrepancy (MMD) between the mean embeddings of sampledistributions including and excluding the sample. Comprehensive evaluation ofour proposed influential PN (IPNet) is performed by comparing its performancewith other baseline PNs on three different benchmark dermatological datasets.IPNet outperforms all baseline models with compelling results across all threedatasets and various N-way, K-shot classification tasks. Findings fromcross-domain adaptation experiments further establish the robustness andgeneralizability of IPNet.</p>  </details></details><details>  <summary>102. <b>标题：Self-Verification in Image Denoising</b></summary>  <p><b>编号</b>：[456]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00666</p>  <p><b>作者</b>：Huangxing Lin,  Yihong Zhuang,  Delu Zeng,  Yue Huang,  Xinghao Ding,  John Paisley</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：level image statistics needed, various denoising tasks using, deep image prior learned, observed corrupted data, denoising performance close</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We devise a new regularization, called self-verification, for imagedenoising. This regularization is formulated using a deep image prior learnedby the network, rather than a traditional predefined prior. Specifically, wetreat the output of the network as a ``prior'' that we denoise again after``re-noising''. The comparison between the again denoised image and its priorcan be interpreted as a self-verification of the network's denoising ability.We demonstrate that self-verification encourages the network to capturelow-level image statistics needed to restore the image. Based on thisself-verification regularization, we further show that the network can learn todenoise even if it has not seen any clean images. This learning strategy isself-supervised, and we refer to it as Self-Verification Image Denoising(SVID). SVID can be seen as a mixture of learning-based methods and traditionalmodel-based denoising methods, in which regularization is adaptively formulatedusing the output of the network. We show the application of SVID to variousdenoising tasks using only observed corrupted data. It can achieve thedenoising performance close to supervised CNNs.</p>  </details></details><details>  <summary>103. <b>标题：TorchXRayVision: A library of chest X-ray datasets and models</b></summary>  <p><b>编号</b>：[459]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00595</p>  <p><b>作者</b>：Joseph Paul Cohen,  Joseph D. Viviano,  Paul Bertin,  Paul Morrison,  Parsa Torabian,  Matteo Guarrera,  Matthew P Lungren,  Akshay Chaudhari,  Rupert Brooks,  Mohammad Hashir,  Hadrien Bertrand</p>  <p><b>备注</b>：Library source code: this https URL</p>  <p><b>关键词</b>：open source software library, publicly available chest x, representation learning models, deep learning models, different data combinations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>TorchXRayVision is an open source software library for working with chestX-ray datasets and deep learning models. It provides a common interface andcommon pre-processing chain for a wide set of publicly available chest X-raydatasets. In addition, a number of classification and representation learningmodels with different architectures, trained on different data combinations,are available through the library to serve as baselines or feature extractors.</p>  </details></details><details>  <summary>104. <b>标题：Learning to Detect Open Carry and Concealed Object with 77GHz Radar</b></summary>  <p><b>编号</b>：[462]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00551</p>  <p><b>作者</b>：Xiangyu Gao,  Hui Liu,  Sumit Roy,  Guanbin Xing,  Ali Alansari,  Youchen Luo</p>  <p><b>备注</b>：12 pages</p>  <p><b>关键词</b>：detect carried objects using 77ghz radar, detecting harmful carried objects plays, cost 77ghz mmwave radar, carried objects detection problem, time detecting three classes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Detecting harmful carried objects plays a key role in intelligentsurveillance systems and has widespread applications, for example, in airportsecurity. In this paper, we focus on the relatively unexplored area of usinglow-cost 77GHz mmWave radar for the carried objects detection problem. Theproposed system is capable of real-time detecting three classes of objects -laptop, phone, and knife - under open carry and concealed cases where objectsare hidden with clothes or bags. This capability is achieved by initial signalprocessing for localization and generating range-azimuth-elevation image cubes,followed by a deep learning-based prediction network and a multi-shotpost-processing module for detecting objects. Extensive experiments forvalidating the system performance on detecting open carry and concealed objectshave been presented with a self-built radar-camera testbed and dataset.Additionally, the influence of different input, factors, and parameters onsystem performance is analyzed, providing an intuitive understanding of thesystem. This system would be the very first baseline for other future worksaiming to detect carried objects using 77GHz radar.</p>  </details></details><details>  <summary>105. <b>标题：Focal Attention Networks: optimising attention for biomedical image  segmentation</b></summary>  <p><b>编号</b>：[463]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00534</p>  <p><b>作者</b>：Michael Yeung,  Leonardo Rundo,  Evis Sala,  Carola-Bibiane Schönlieb,  Guang Yang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：attention mechanisms enables flexible integration, validated biomedical imaging datasets, focal distance penalty term, unified focal loss framework, convolutional neural network architectures</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In recent years, there has been increasing interest to incorporate attentioninto deep learning architectures for biomedical image segmentation. The modulardesign of attention mechanisms enables flexible integration into convolutionalneural network architectures, such as the U-Net. Whether attention isappropriate to use, what type of attention to use, and where in the network toincorporate attention modules, are all important considerations that arecurrently overlooked. In this paper, we investigate the role of the Focalparameter in modulating attention, revealing a link between attention in lossfunctions and networks. By incorporating a Focal distance penalty term, weextend the Unified Focal loss framework to include boundary-based losses.Furthermore, we develop a simple and interpretable, dataset and model-specificheuristic to integrate the Focal parameter into the Squeeze-and-Excitationblock and Attention Gate, achieving optimal performance with fewer number ofattention modules on three well-validated biomedical imaging datasets,suggesting judicious use of attention modules results in better performance andefficiency.</p>  </details></details><details>  <summary>106. <b>标题：Incorporating Boundary Uncertainty into loss functions for biomedical  image segmentation</b></summary>  <p><b>编号</b>：[464]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00533</p>  <p><b>作者</b>：Michael Yeung,  Guang Yang,  Evis Sala,  Carola-Bibiane Schönlieb,  Leonardo Rundo</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：achieving consistently improved performance across three well, validated biomedical imaging datasets compared, automated image segmentation tasks, enable robust model training, neither approach accurately reflects</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Manual segmentation is used as the gold-standard for evaluating neuralnetworks on automated image segmentation tasks. Due to considerableheterogeneity in shapes, colours and textures, demarcating object boundaries isparticularly difficult in biomedical images, resulting in significant inter andintra-rater variability. Approaches, such as soft labelling and distancepenalty term, apply a global transformation to the ground truth, redefining theloss function with respect to uncertainty. However, global operations arecomputationally expensive, and neither approach accurately reflects theuncertainty underlying manual annotation. In this paper, we propose theBoundary Uncertainty, which uses morphological operations to restrict softlabelling to object boundaries, providing an appropriate representation ofuncertainty in ground truth labels, and may be adapted to enable robust modeltraining where systematic manual segmentation errors are present. Weincorporate Boundary Uncertainty with the Dice loss, achieving consistentlyimproved performance across three well-validated biomedical imaging datasetscompared to soft labelling and distance-weighted penalty. Boundary Uncertaintynot only more accurately reflects the segmentation process, but it is alsoefficient, robust to segmentation errors and exhibits better generalisation.</p>  </details></details><details>  <summary>107. <b>标题：Calibrating the Dice loss to handle neural network overconfidence for  biomedical image segmentation</b></summary>  <p><b>编号</b>：[465]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00528</p>  <p><b>作者</b>：Michael Yeung,  Leonardo Rundo,  Yang Nan,  Evis Sala,  Carola-Bibiane Schönlieb,  Guang Yang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：dsc ++ loss achieves significantly improved calibration, conventional dsc loss across five well, deep learning based biomedical image segmentation, training deep learning segmentation models, well calibrated outputs enable tailoring</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The Dice similarity coefficient (DSC) is both a widely used metric and lossfunction for biomedical image segmentation due to its robustness to classimbalance. However, it is well known that the DSC loss is poorly calibrated,resulting in overconfident predictions that cannot be usefully interpreted inbiomedical and clinical practice. Performance is often the only metric used toevaluate segmentations produced by deep neural networks, and calibration isoften neglected. However, calibration is important for translation intobiomedical and clinical practice, providing crucial contextual information tomodel predictions for interpretation by scientists and clinicians. In thisstudy, we identify poor calibration as an emerging challenge of deep learningbased biomedical image segmentation. We provide a simple yet effectiveextension of the DSC loss, named the DSC++ loss, that selectively modulates thepenalty associated with overconfident, incorrect predictions. As a standaloneloss function, the DSC++ loss achieves significantly improved calibration overthe conventional DSC loss across five well-validated open-source biomedicalimaging datasets. Similarly, we observe significantly improved when integratingthe DSC++ loss into four DSC-based loss functions. Finally, we use softmaxthresholding to illustrate that well calibrated outputs enable tailoring ofprecision-recall bias, an important post-processing technique to adapt themodel predictions to suit the biomedical or clinical task. The DSC++ lossovercomes the major limitation of the DSC, providing a suitable loss functionfor training deep learning segmentation models for use in biomedical andclinical practice.</p>  </details></details><details>  <summary>108. <b>标题：IGCN: Image-to-graph Convolutional Network for 2D/3D Deformable  Registration</b></summary>  <p><b>编号</b>：[468]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00484</p>  <p><b>作者</b>：Megumi Nakao,  Mitsuhiro Nakamura,  Tetsuya Matsuda</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experimental results show shape prediction considering relationships among multiple organs, organ shape reconstruction based, multiple abdominal organs, framework enables simultaneous training, 3d deformable registration performance</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Organ shape reconstruction based on a single-projection image duringtreatment has wide clinical scope, e.g., in image-guided radiotherapy andsurgical guidance. We propose an image-to-graph convolutional network thatachieves deformable registration of a 3D organ mesh for a single-viewpoint 2Dprojection image. This framework enables simultaneous training of two types oftransformation: from the 2D projection image to a displacement map, and fromthe sampled per-vertex feature to a 3D displacement that satisfies thegeometrical constraint of the mesh structure. Assuming application to radiationtherapy, the 2D/3D deformable registration performance is verified for multipleabdominal organs that have not been targeted to date, i.e., the liver, stomach,duodenum, and kidney, and for pancreatic cancer. The experimental results showshape prediction considering relationships among multiple organs can be used topredict respiratory motion and deformation from digitally reconstructedradiographs with clinically acceptable accuracy.</p>  </details></details><details>  <summary>109. <b>标题：A robust single-pixel particle image velocimetry based on fully  convolutional networks with cross-correlation embedded</b></summary>  <p><b>编号</b>：[471]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00395</p>  <p><b>作者</b>：Qi Gao,  Hongtao Lin,  Han Tu,  Haoran Zhu,  Runjie Wei,  Guoping Zhang,  Xueming Shao</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：proposed model could therefore provide competitive, initial velocity field calculated using cross, new velocity field estimation paradigm, synthetic data sets including ground, real experimental piv data sets</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Particle image velocimetry (PIV) is essential in experimental fluid dynamics.In the current work, we propose a new velocity field estimation paradigm, whichachieves a synergetic combination of the deep learning method and thetraditional cross-correlation method. Specifically, the deep learning method isused to optimize and correct a coarse velocity guess to achieve asuper-resolution calculation. And the cross-correlation method provides theinitial velocity field based on a coarse correlation with a large interrogationwindow. As a reference, the coarse velocity guess helps with improving therobustness of the proposed algorithm. This fully convolutional network withembedded cross-correlation is named as CC-FCN. CC-FCN has two types of inputlayers, one is for the particle images, and the other is for the initialvelocity field calculated using cross-correlation with a coarse resolution.Firstly, two pyramidal modules extract features of particle images and initialvelocity field respectively. Then the fusion module appropriately fuses thesefeatures. Finally, CC-FCN achieves the super-resolution calculation through aseries of deconvolution layers to obtain the single-pixel velocity field. Asthe supervised learning strategy is considered, synthetic data sets includingground-truth fluid motions are generated to train the network parameters.Synthetic and real experimental PIV data sets are used to test the trainedneural network in terms of accuracy, precision, spatial resolution androbustness. The test results show that these attributes of CC-FCN are furtherimproved compared with those of other tested PIV algorithms. The proposed modelcould therefore provide competitive and robust estimations for PIV experiments.</p>  </details></details><details>  <summary>110. <b>标题：Dual Attention Network for Heart Rate and Respiratory Rate Estimation</b></summary>  <p><b>编号</b>：[472]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00390</p>  <p><b>作者</b>：Yuzhuo Ren,  Braeden Syrnyk,  Niranjan Avadhanam</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：proposed system significantly improves heart rate, contact camera based physiological measurement, remote physiological signal measurement, contact methods reduce risk, fingertip oximeters since non</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Heart rate and respiratory rate measurement is a vital step for diagnosingmany diseases. Non-contact camera based physiological measurement is moreaccessible and convenient in Telehealth nowadays than contact instruments suchas fingertip oximeters since non-contact methods reduce risk of infection.However, remote physiological signal measurement is challenging due toenvironment illumination variations, head motion, facial expression, etc. It'salso desirable to have a unified network which could estimate both heart rateand respiratory rate to reduce system complexity and latency. We propose aconvolutional neural network which leverages spatial attention and channelattention, which we call it dual attention network (DAN) to jointly estimateheart rate and respiratory rate with camera video as input. Extensiveexperiments demonstrate that our proposed system significantly improves heartrate and respiratory rate measurement accuracy.</p>  </details></details><details>  <summary>111. <b>标题：Functional Neural Networks for Parametric Image Restoration Problems</b></summary>  <p><b>编号</b>：[473]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00361</p>  <p><b>作者</b>：Fangzhou Luo,  Xiaolin Wu,  Yanhui Guo</p>  <p><b>备注</b>：NeurIPS 2021</p>  <p><b>关键词</b>：novel system called functional neural network, almost every single image restoration problem, previous researchers either treat problems, three parametric image restoration tasks, achieved great success due</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Almost every single image restoration problem has a closely relatedparameter, such as the scale factor in super-resolution, the noise level inimage denoising, and the quality factor in JPEG deblocking. Although recentstudies on image restoration problems have achieved great success due to thedevelopment of deep neural networks, they handle the parameter involved in anunsophisticated way. Most previous researchers either treat problems withdifferent parameter levels as independent tasks, and train a specific model foreach parameter level; or simply ignore the parameter, and train a single modelfor all parameter levels. The two popular approaches have their ownshortcomings. The former is inefficient in computing and the latter isineffective in performance. In this work, we propose a novel system calledfunctional neural network (FuncNet) to solve a parametric image restorationproblem with a single model. Unlike a plain neural network, the smallestconceptual element of our FuncNet is no longer a floating-point variable, but afunction of the parameter of the problem. This feature makes it both efficientand effective for a parametric problem. We apply FuncNet to super-resolution,image denoising, and JPEG deblocking. The experimental results show thesuperiority of our FuncNet on all three parametric image restoration tasks overthe state of the arts.</p>  </details></details><details>  <summary>112. <b>标题：Cross-Modality Fusion Transformer for Multispectral Object Detection</b></summary>  <p><b>编号</b>：[477]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00273</p>  <p><b>作者</b>：Fang Qingyun,  Han Dapeng,  Wang Zhaokui</p>  <p><b>备注</b>：5 pages,3 figures, 4 tables</p>  <p><b>关键词</b>：integrates global contextual information, making object detection applications, simple yet effective cross, modality feature fusion approach, multispectral object detection</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Multispectral image pairs can provide the combined information, making objectdetection applications more reliable and robust in the open world. To fullyexploit the different modalities, we present a simple yet effectivecross-modality feature fusion approach, named Cross-Modality Fusion Transformer(CFT) in this paper. Unlike prior CNNs-based works, guided by the transformerscheme, our network learns long-range dependencies and integrates globalcontextual information in the feature extraction stage. More importantly, byleveraging the self attention of the transformer, the network can naturallycarry out simultaneous intra-modality and inter-modality fusion, and robustlycapture the latent interactions between RGB and Thermal domains, therebysignificantly improving the performance of multispectral object detection.Extensive experiments and ablation studies on multiple datasets demonstratethat our approach is effective and achieves state-of-the-art detectionperformance. Our code and models will be released soon atthis https URL.</p>  </details></details><details>  <summary>113. <b>标题：Unpaired Learning for High Dynamic Range Image Tone Mapping</b></summary>  <p><b>编号</b>：[480]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00219</p>  <p><b>作者</b>：Yael Vinker,  Inbar Huberman-Spiegelglas,  Raanan Fattal</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：level attributes native ldr possess, unpaired adversarial training based, different image fidelity indices, producing low dynamic range, producing training data</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>High dynamic range (HDR) photography is becoming increasingly popular andavailable by DSLR and mobile-phone cameras. While deep neural networks (DNN)have greatly impacted other domains of image manipulation, their use for HDRtone-mapping is limited due to the lack of a definite notion of ground-truthsolution, which is needed for producing training data.In this paper we describe a new tone-mapping approach guided by the distinctgoal of producing low dynamic range (LDR) renditions that best reproduce thevisual characteristics of native LDR images. This goal enables the use of anunpaired adversarial training based on unrelated sets of HDR and LDR images,both of which are widely available and easy to acquire.In order to achieve an effective training under this minimal requirements, weintroduce the following new steps and components: (i) a range-normalizingpre-process which estimates and applies a different level of curve-basedcompression, (ii) a loss that preserves the input content while allowing thenetwork to achieve its goal, and (iii) the use of a more concise discriminatornetwork, designed to promote the reproduction of low-level attributes nativeLDR possess.Evaluation of the resulting network demonstrates its ability to producephoto-realistic artifact-free tone-mapped images, and state-of-the-artperformance on different image fidelity indices and visual distances.</p>  </details></details><details>  <summary>114. <b>标题：M2MRF: Many-to-Many Reassembly of Features for Tiny Lesion Segmentation  in Fundus Images</b></summary>  <p><b>编号</b>：[481]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00193</p>  <p><b>作者</b>：Qing Liu,  Haotian Liu,  Yixiong Liang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：existing feature reassembly operators reassemble multiple features, m2mrf outperforms existing feature reassembly operators, simultaneously aggregates multiple features inside, two lesion segmentation benchmarks, long range spatial dependencies</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Feature reassembly is an essential component in modern CNNs-basedsegmentation approaches, which includes feature downsampling and upsamplingoperators. Existing feature reassembly operators reassemble multiple featuresfrom a small predefined region into one for each target location independently.This may result in loss of spatial information, which could vanish activationsof tiny lesions particularly when they cluster together. In this paper, wepropose a many-to-many reassembly of features (M2MRF). It reassembles featuresin a dimension-reduced feature space and simultaneously aggregates multiplefeatures inside a large predefined region into multiple target features. Inthis way, long range spatial dependencies are captured to maintain activationson tiny lesions, particularly when multiple lesions coexist. Experimentalresults on two lesion segmentation benchmarks, i.e. DDR and IDRiD, show thatour M2MRF outperforms existing feature reassembly operators.</p>  </details></details><details>  <summary>115. <b>标题：Fetal MRI by robust deep generative prior reconstruction and  diffeomorphic registration: application to gestational age prediction</b></summary>  <p><b>编号</b>：[486]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00102</p>  <p><b>作者</b>：Lucilio Cordero-Grande,  Juan Enrique Ortuño-Fisac,  Alena Uus,  Maria Deprez,  Andrés Santos,  Joseph V. Hajnal,  María Jesús Ledesma-Carbayo</p>  <p><b>备注</b>：23 pages, 15 figures, 1 table</p>  <p><b>关键词</b>：usual scanning techniques employ single, results suggest improved image resolution, robust volumetric reconstructions integrated, volumetric reconstructions compare favourably, gestational age prediction results</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Magnetic resonance imaging of whole fetal body and placenta is limited bydifferent sources of motion affecting the womb. Usual scanning techniquesemploy single-shot multi-slice sequences where anatomical information indifferent slices may be subject to different deformations, contrast variationsor artifacts. Volumetric reconstruction formulations have been proposed tocorrect for these factors, but they must accommodate a non-homogeneous andnon-isotropic sampling, so regularization becomes necessary. Thus, in thispaper we propose a deep generative prior for robust volumetric reconstructionsintegrated with a diffeomorphic volume to slice registration method.Experiments are performed to validate our contributions and compare with astate of the art method in a cohort of $72$ fetal datasets in the range of$20-36$ weeks gestational age. Results suggest improved image resolution andmore accurate prediction of gestational age at scan when comparing to a stateof the art reconstruction method. In addition, gestational age predictionresults from our volumetric reconstructions compare favourably with existingbrain-based approaches, with boosted accuracy when integrating information oforgans other than the brain. Namely, a mean absolute error of $0.618$ weeks($R^2=0.958$) is achieved when combining fetal brain and trunk information.</p>  </details></details><details>  <summary>116. <b>标题：DeepDoseNet: A Deep Learning model for 3D Dose Prediction in Radiation  Therapy</b></summary>  <p><b>编号</b>：[487]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00077</p>  <p><b>作者</b>：Mumtaz Hussain Soomro,  Victor Gabriel Leandro Alves,  Hamidreza Nourzadeh,  Jeffrey V. Siebers</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：d99 %, d95 %, d1, d99 %, d95 %, d1, deepdosenet 3d dose prediction model based, predicted 3d dose distributions, 2020 aapm openkbp challenge</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The DeepDoseNet 3D dose prediction model based on ResNet and Dilated DenseNetis proposed. The 340 head-and-neck datasets from the 2020 AAPM OpenKBPchallenge were utilized, with 200 for training, 40 for validation, and 100 fortesting. Structures include 56Gy, 63Gy, 70Gy PTVs, and brainstem, spinal cord,right parotid, left parotid, larynx, esophagus, and mandible OARs. Mean squarederror (MSE) loss, mean absolute error (MAE) loss, and MAE plus dose-volumehistogram (DVH) based loss functions were investigated. Each model'sperformance was compared using a 3D dose score, $\bar{S_{D}}$, (mean absolutedifference between ground truth and predicted 3D dose distributions) and a DVHscore, $\bar{S_{DVH}}$ (mean absolute difference between ground truth andpredicted dose-volume metrics).Furthermore, DVH metrics Mean[Gy] and D0.1cc[Gy] for OARs and D99%, D95%, D1% for PTVs were computed. DeepDoseNet with theMAE plus DVH-based loss function had the best dose score performance of theOpenKBP entries. MAE+DVH model had the lowest prediction error (P<0.0001, wilcoxon test) on validation and test datasets (validation: $\bar{s_{d}}$="2.3Gy," $\bar{s_{dvh}}$="1.9Gy;" test: followed by the mae model mse had highest prediction error no significant difference was found among models in terms of mean [gy], but mae+dvh significantly outperformed d0.1cc[gy], particularly for mandible parotids both (p<0.01) (p<0.0001) datasets. d99%, d95%, d1% targets. reduced ~60% ~70%.< p>  </0.0001,></p></details></details><details>  <summary>117. <b>标题：Multiple Sclerosis Lesions Identification/Segmentation in Magnetic  Resonance Imaging using Ensemble CNN and Uncertainty Classification</b></summary>  <p><b>编号</b>：[495]</p>  <p><b>链接</b>：https://arxiv.org/abs/2108.11791</p>  <p><b>作者</b>：Giuseppe Placidi,  Luigi Cinque,  Filippo Mignosi,  Matteo Polsinelli</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：2016 msseg benchmark public data set, better emulate human reasoning, three pivotal concepts, single imaging modality, physicians partially manage</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>To date, several automated strategies for identification/segmentation ofMultiple Sclerosis (MS) lesions with the use of Magnetic Resonance Imaging(MRI) have been presented but they are either outperformed by human experts orperform differently from them. This is mainly due to the ambiguity originatedby MRI instabilities, peculiar variability of MS and unspecific nature of MRIwith respect to MS. Physicians partially manage the uncertainty generated byambiguity relying on their personal radiological/clinical/anatomical backgroundand experience. We present an automated framework based on three pivotalconcepts to better emulate human reasoning: 1. the modelling of uncertainty; 2.the proposal of two, separately trained, CNN, one optimized with respect tolesions themselves and the other to the environment surrounding lesions,respectively repeated for axial, coronal and sagittal directions; 3. thedefinition of an ensemble classifier to merge the information collected by allCNN. The proposed framework is trained, validated and tested on the 2016 MSSEGbenchmark public data set from a single imaging modality, the FLuid-AttenuatedInversion Recovery (FLAIR). The comparison, made with the consensus (theground-truth) between 7 human raters and with each of the 7 human raters,proves that there is no significant difference between the automated and thehuman raters. The results of our framework concerning the uncertainty are alsoreported, even if a comparison with the raters is impossible because they don'trecognize this class.</p>  </details></details><h1>自然语言处理</h1><details>  <summary>1. <b>标题：Introspective Distillation for Robust Question Answering</b></summary>  <p><b>编号</b>：[28]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01026</p>  <p><b>作者</b>：Yulei Niu,  Hanwang Zhang</p>  <p><b>备注</b>：Accepted by NeurIPS 2021</p>  <p><b>关键词</b>：novel debiasing method called introspective distillation, even achieving better id performance compared, recent debiasing methods achieve good, reading comprehension dataset squad demonstrate, visual qa datasets vqa v2</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Question answering (QA) models are well-known to exploit data bias, e.g., thelanguage prior in visual QA and the position bias in reading comprehension.Recent debiasing methods achieve good out-of-distribution (OOD)generalizability with a considerable sacrifice of the in-distribution (ID)performance. Therefore, they are only applicable in domains where the testdistribution is known in advance. In this paper, we present a novel debiasingmethod called Introspective Distillation (IntroD) to make the best of bothworlds for QA. Our key technical contribution is to blend the inductive bias ofOOD and ID by introspecting whether a training sample fits in the factual IDworld or the counterfactual OOD one. Experiments on visual QA datasets VQA v2,VQA-CP, and reading comprehension dataset SQuAD demonstrate that our proposedIntroD maintains the competitive OOD performance compared to other debiasingmethods, while sacrificing little or even achieving better ID performancecompared to the non-debiasing ones.</p>  </details></details><details>  <summary>2. <b>标题：Interpretable contrastive word mover's embedding</b></summary>  <p><b>编号</b>：[30]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01023</p>  <p><b>作者</b>：Ruijie Jiang,  Julia Gouvea,  Eric Miller,  David Hammer,  Shuchin Aeron</p>  <p><b>备注</b>：8 pages, 4 figures</p>  <p><b>关键词</b>：method improves significantly upon existing baselines, help ls researchers gain insights, develop natural language processing, several public datasets, clusters via identifying</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper shows that a popular approach to the supervised embedding ofdocuments for classification, namely, contrastive Word Mover's Embedding, canbe significantly enhanced by adding interpretability. This interpretability isachieved by incorporating a clustering promoting mechanism into the contrastiveloss. On several public datasets, we show that our method improvessignificantly upon existing baselines while providing interpretation to theclusters via identifying a set of keywords that are the most representative ofa particular class. Our approach was motivated in part by the need to developNatural Language Processing (NLP) methods for the \textit{novel problem ofassessing student work for scientific writing and thinking} - a problem that iscentral to the area of (educational) Learning Sciences (LS). In this context,we show that our approach leads to a meaningful assessment of the student workrelated to lab reports from a biology class and can help LS researchers gaininsights into student understanding and assess evidence of scientific thoughtprocesses.</p>  </details></details><details>  <summary>3. <b>标题：Cross-lingual Hate Speech Detection using Transformer Models</b></summary>  <p><b>编号</b>：[43]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00981</p>  <p><b>作者</b>：Teodor Tiţa,  Arkaitz Zubiaga</p>  <p><b>备注</b>：7 pages</p>  <p><b>关键词</b>：crucial social data science task, hate speech detection within, tuned altered multi, morally questionable real, comparative error analysis</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Hate speech detection within a cross-lingual setting represents a paramountarea of interest for all medium and large-scale online platforms. Failing toproperly address this issue on a global scale has already led over time tomorally questionable real-life events, human deaths, and the perpetuation ofhate itself. This paper illustrates the capabilities of fine-tuned alteredmulti-lingual Transformer models (mBERT, XLM-RoBERTa) regarding this crucialsocial data science task with cross-lingual training from English to French,vice-versa and each language on its own, including sections about iterativeimprovement and comparative error analysis.</p>  </details></details><details>  <summary>4. <b>标题：A transfer learning based approach for pronunciation scoring</b></summary>  <p><b>编号</b>：[47]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00976</p>  <p><b>作者</b>：Marcelo Sancinetti,  Jazmin Vidal,  Cyntia Bonomi,  Luciana Ferrer</p>  <p><b>备注</b>：ICASSP 2022</p>  <p><b>关键词</b>：phrase using models trained, several design choices, prioritizes low rates, automatic speech recognition, standard systems generate</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Phone-level pronunciation scoring is a challenging task, with performance farfrom that of human annotators. Standard systems generate a score for each phonein a phrase using models trained for automatic speech recognition (ASR) withnative data only. Better performance has been shown when using systems that aretrained specifically for the task using non-native data. Yet, such systems facethe challenge that datasets labelled for this task are scarce and usuallysmall. In this paper, we present a transfer learning-based approach thatleverages a model trained for ASR, adapting it for the task of pronunciationscoring. We analyze the effect of several design choices and compare theperformance with a state-of-the-art goodness of pronunciation (GOP) system. Ourfinal system is 20% better than the GOP system on EpaDB, a database forpronunciation scoring research, for a cost function that prioritizes low ratesof unnecessary corrections.</p>  </details></details><details>  <summary>5. <b>标题：Transductive Data Augmentation with Relational Path Rule Mining for  Knowledge Graph Embedding</b></summary>  <p><b>编号</b>：[48]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00974</p>  <p><b>作者</b>：Yushi Hirose,  Masashi Shimbo,  Taro Watanabe</p>  <p><b>备注</b>：8 pages, 0 figures, accepted by 2021 IEEE International Conference on Big Knowledge. The copyright of this paper has been transferred to the IEEE, please comply with the copyright of the IEEE</p>  <p><b>关键词</b>：proposed method effectively improves, propose transductive data augmentation, alternately augments training data, relation path rule induction, relation path rules</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>For knowledge graph completion, two major types of prediction models exist:one based on graph embeddings, and the other based on relation path ruleinduction. They have different advantages and disadvantages. To take advantageof both types, hybrid models have been proposed recently. One of the hybridmodels, UniKER, alternately augments training data by relation path rules andtrains an embedding model. Despite its high prediction accuracy, it does nottake full advantage of relation path rules, as it disregards low-confidencerules in order to maintain the quality of augmented data. To mitigate thislimitation, we propose transductive data augmentation by relation path rulesand confidence-based weighting of augmented data. The results and analysis showthat our proposed method effectively improves the performance of the embeddingmodel by augmenting data that include true answers or entities similar to them.</p>  </details></details><details>  <summary>6. <b>标题：Enhanced Language Representation with Label Knowledge for Span  Extraction</b></summary>  <p><b>编号</b>：[86]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00884</p>  <p><b>作者</b>：Pan Yang,  Xin Cong,  Zhenyun Sun,  Xingwu Liu</p>  <p><b>备注</b>：Accepted to the main conference of EMNLP 2021 (long paper)</p>  <p><b>关键词</b>：three typical span extraction tasks, designed semantics fusion module, efficiently integrate label knowledge, span extraction task, integrate label knowledge</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Span extraction, aiming to extract text spans (such as words or phrases) fromplain texts, is a fundamental process in Information Extraction. Recent worksintroduce the label knowledge to enhance the text representation by formalizingthe span extraction task into a question answering problem (QA Formalization),which achieves state-of-the-art performance. However, QA Formalization does notfully exploit the label knowledge and suffers from low efficiency intraining/inference. To address those problems, we introduce a new paradigm tointegrate label knowledge and further propose a novel model to explicitly andefficiently integrate label knowledge into text representations. Specifically,it encodes texts and label annotations independently and then integrates labelknowledge into text representation with an elaborate-designed semantics fusionmodule. We conduct extensive experiments on three typical span extractiontasks: flat NER, nested NER, and event detection. The empirical results showthat 1) our method achieves state-of-the-art performance on four benchmarks,and 2) reduces training time and inference time by 76% and 77% on average,respectively, compared with the QA Formalization paradigm. Our code and dataare available at this https URL.</p>  </details></details><details>  <summary>7. <b>标题：Interpretive Blindness</b></summary>  <p><b>编号</b>：[96]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00867</p>  <p><b>作者</b>：Nicholas Asher,  Julie Hunter</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：promote good epistemic practices, particular characteristic contemporary testimony, one acquires information, argumentative completeness },, hierarchical bayesian settings</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We model here an epistemic bias we call \textit{interpretive blindness} (IB).IB is a special problem for learning from testimony, in which one acquiresinformation only from text or conversation. We show that IB follows from aco-dependence between background beliefs and interpretation in a Bayesiansetting and the nature of contemporary testimony. We argue that a particularcharacteristic contemporary testimony, \textit{argumentative completeness}, canpreclude learning in hierarchical Bayesian settings, even in the presence ofconstraints that are designed to promote good epistemic practices.</p>  </details></details><details>  <summary>8. <b>标题：Exploring Non-Autoregressive End-To-End Neural Modeling For English  Mispronunciation Detection And Diagnosis</b></summary>  <p><b>编号</b>：[102]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00844</p>  <p><b>作者</b>：Hsin-Wei Wang,  Bi-Cheng Yan,  Hsuan-Sheng Chiu,  Yung-Chang Hsu,  Berlin Chen</p>  <p><b>备注</b>：Preprint. Under review 5 pages, 2 figures</p>  <p><b>关键词</b>：nonnative training data would often reduce, least two pivotal challenges, arctic english dataset seems, pronunciation modeling network stacked, current e2e neural methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>End-to-end (E2E) neural modeling has emerged as one predominant school ofthought to develop computer-assisted language training (CAPT) systems, showingcompetitive performance to conventional pronunciation-scoring based methods.However, current E2E neural methods for CAPT are faced with at least twopivotal challenges. On one hand, most of the E2E methods operate in anautoregressive manner with left-to-right beam search to dictate thepronunciations of an L2 learners. This however leads to very slow inferencespeed, which inevitably hinders their practical use. On the other hand, E2Eneural methods are normally data greedy and meanwhile an insufficient amount ofnonnative training data would often reduce their efficacy on mispronunciationdetection and diagnosis (MD&D). In response, we put forward a novel MD&D methodthat leverages non-autoregressive (NAR) E2E neural modeling to dramaticallyspeed up the inference time while maintaining performance in line with theconventional E2E neural methods. In addition, we design and develop apronunciation modeling network stacked on top of the NAR E2E models of ourmethod to further boost the effectiveness of MD&D. Empirical experimentsconducted on the L2-ARCTIC English dataset seems to validate the feasibility ofour method, in comparison to some top-of-the-line E2E models and an iconicpronunciation-scoring based method built on a DNN-HMM acoustic model.</p>  </details></details><details>  <summary>9. <b>标题：Deep Learning Transformer Architecture for Named Entity Recognition on  Low Resourced Languages: State of the art results</b></summary>  <p><b>编号</b>：[106]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00830</p>  <p><b>作者</b>：Ridewaan Hanslo</p>  <p><b>备注</b>：8 pages, 6 tables, and 3 figures</p>  <p><b>关键词</b>：conditional random fields ml model, transformer models significantly improve performance, tuning parameters per language, natural language processing tasks, additional research could evaluate</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper reports on the evaluation of Deep Learning (DL) transformerarchitecture models for Named-Entity Recognition (NER) on ten low-resourcedSouth African (SA) languages. In addition, these DL transformer models werecompared to other Neural Network and Machine Learning (ML) NER models. Thefindings show that transformer models significantly improve performance whenapplying discrete fine-tuning parameters per language. Furthermore, fine-tunedtransformer models outperform other neural network and machine learning modelswith NER on the low-resourced SA languages. For example, the transformer modelsgenerated the highest F-scores for six of the ten SA languages, including thehighest average F-score surpassing the Conditional Random Fields ML model.Additional research could evaluate the more recent transformer architecturemodels on other Natural Language Processing tasks and applications, such asPhrase chunking, Machine Translation, and Part-of-Speech tagging.</p>  </details></details><details>  <summary>10. <b>标题：Unsupervised Discovery of Unaccusative and Unergative Verbs</b></summary>  <p><b>编号</b>：[112]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00808</p>  <p><b>作者</b>：Sharid Loáiciga,  Luca Bevacqua,  Christian Hardmeier</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：inchoative alternation without knowing, intransitive sentence variants, detect english unergative, categories allow us, identify verbs participating</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present an unsupervised method to detect English unergative andunaccusative verbs. These categories allow us to identify verbs participatingin the causative-inchoative alternation without knowing the semantic roles ofthe verb. The method is based on the generation of intransitive sentencevariants of candidate verbs and probing a language model. We obtained resultson par with similar approaches, with the added benefit of not relying onannotated resources.</p>  </details></details><details>  <summary>11. <b>标题：A New Tool for Efficiently Generating Quality Estimation Datasets</b></summary>  <p><b>编号</b>：[129]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00767</p>  <p><b>作者</b>：Sugyeong Eo,  Chanjun Park,  Jaehyung Seo,  Hyeonseok Moon,  Heuiseok Lim</p>  <p><b>备注</b>：Accepted for Data-centric AI workshop at NeurIPS 2021</p>  <p><b>关键词</b>：user friendly qe dataset generation tool, qe dataset generation tool, requires significant human labor, encouraging multiple language pairs, fully automatic pseudo</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Building of data for quality estimation (QE) training is expensive andrequires significant human labor. In this study, we focus on a data-centricapproach while performing QE, and subsequently propose a fully automaticpseudo-QE dataset generation tool that generates QE datasets by receiving onlymonolingual or parallel corpus as the input. Consequently, the QE performanceis enhanced either by data augmentation or by encouraging multiple languagepairs to exploit the applicability of QE. Further, we intend to publiclyrelease this user friendly QE dataset generation tool as we believe this toolprovides a new, inexpensive method to the community for developing QE datasets.</p>  </details></details><details>  <summary>12. <b>标题：Outlining and Filling: Hierarchical Query Graph Generation for Answering  Complex Questions over Knowledge Graph</b></summary>  <p><b>编号</b>：[142]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00732</p>  <p><b>作者</b>：Yongrui Chen,  Huiying Li,  Guilin Qi,  Tianxing Wu,  Tenggou Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：graph generation model performs hierarchical generation, complex questions bring three new challenges, although recent approaches perform well, regard common complicated sparql syntax, new unified query graph grammar</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Query graph building aims to build correct executable SPARQL over theknowledge graph for answering natural language questions. Although recentapproaches perform well by NN-based query graph ranking, more complex questionsbring three new challenges: complicated SPARQL syntax, huge search space forranking, and noisy query graphs with local ambiguity. This paper handles thesechallenges. Initially, we regard common complicated SPARQL syntax as thesub-graphs comprising of vertices and edges and propose a new unified querygraph grammar to adapt them. Subsequently, we propose a new two-stage approachto build query graphs. In the first stage, the top-$k$ related instances(entities, relations, etc.) are collected by simple strategies, as thecandidate instances. In the second stage, a graph generation model performshierarchical generation. It first outlines a graph structure whose vertices andedges are empty slots, and then fills the appropriate instances into the slots,thereby completing the query graph. Our approach decomposes the unbearablesearch space of entire query graphs into affordable sub-spaces of operations,meanwhile, leverages the global structural information to eliminate localambiguity. The experimental results demonstrate that our approach greatlyimproves state-of-the-art on the hardest KGQA benchmarks and has an excellentperformance on complex questions.</p>  </details></details><details>  <summary>13. <b>标题：Comparative Study of Long Document Classification</b></summary>  <p><b>编号</b>：[153]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00702</p>  <p><b>作者</b>：Vedangi Wagh,  Snehal Khandve,  Isha Joshi,  Apurva Wani,  Geetanjali Kale,  Raviraj Joshi</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：revisit long document classification using standard machine learning approaches, six standard text classification datasets, even basic algorithms perform competitively, based models perform consistently well, different data sets thus making</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The amount of information stored in the form of documents on the internet hasbeen increasing rapidly. Thus it has become a necessity to organize andmaintain these documents in an optimum manner. Text classification algorithmsstudy the complex relationships between words in a text and try to interpretthe semantics of the document. These algorithms have evolved significantly inthe past few years. There has been a lot of progress from simple machinelearning algorithms to transformer-based architectures. However, existingliterature has analyzed different approaches on different data sets thus makingit difficult to compare the performance of machine learning algorithms. In thiswork, we revisit long document classification using standard machine learningapproaches. We benchmark approaches ranging from simple Naive Bayes to complexBERT on six standard text classification datasets. We present an exhaustivecomparison of different algorithms on a range of long document datasets. Were-iterate that long document classification is a simpler task and even basicalgorithms perform competitively with BERT-based approaches on most of thedatasets. The BERT-based models perform consistently well on all the datasetsand can be blindly used for the document classification task when thecomputations cost is not a concern. In the shallow model's category, we suggestthe usage of raw BiLSTM + Max architecture which performs decently across allthe datasets. Even simpler Glove + Attention bag of words model can be utilizedfor simpler use cases. The importance of using sophisticated models is clearlyvisible in the IMDB sentiment dataset which is a comparatively harder task.</p>  </details></details><details>  <summary>14. <b>标题：Discourse Comprehension: A Question Answering Framework to Represent  Sentence Connections</b></summary>  <p><b>编号</b>：[154]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00701</p>  <p><b>作者</b>：Wei-Jen Ko,  Cutter Dalton,  Mark Simmons,  Eliza Fisher,  Greg Durrett,  Junyi Jessy Li</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：answer pairs across 607 english documents, training methods utilizing existing question, enables scalable data collection targeting, requires high cognitive load, especially since finding answers</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>While there has been substantial progress in text comprehension throughsimple factoid question answering, more holistic comprehension of a discoursestill presents a major challenge. Someone critically reflecting on a text asthey read it will pose curiosity-driven, often open-ended questions, whichreflect deep understanding of the content and require complex reasoning toanswer. A key challenge in building and evaluating models for this type ofdiscourse comprehension is the lack of annotated data, especially since findinganswers to such questions (which may not be answered at all) requires highcognitive load for annotators over long documents. This paper presents a novelparadigm that enables scalable data collection targeting the comprehension ofnews documents, viewing these questions through the lens of discourse. Theresulting corpus, DCQA (Discourse Comprehension by Question Answering),consists of 22,430 question-answer pairs across 607 English documents. DCQAcaptures both discourse and semantic links between sentences in the form offree-form, open-ended questions. On an evaluation set that we annotated onquestions from the INQUISITIVE dataset, we show that DCQA provides valuablesupervision for answering open-ended questions. We additionally designpre-training methods utilizing existing question-answering resources, and usesynthetic data to accommodate unanswerable questions.</p>  </details></details><details>  <summary>15. <b>标题：Domain-adaptation of spherical embeddings</b></summary>  <p><b>编号</b>：[162]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00677</p>  <p><b>作者</b>：Mihalis Gongolidis,  Jeremy Minton,  Ronin Wu,  Valentin Stauber,  Jason Hoelscher-Obermaier,  Viktor Botev</p>  <p><b>备注</b>：SciNLP 2021 poster abstract</p>  <p><b>关键词</b>：two new document classification data, 01196 jointly learns word, recent spherical embedding model, proposed update training strategies, word correlation tasks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Domain adaptation of embedding models, updating a generic embedding to thelanguage of a specific domain, is a proven technique for domains that haveinsufficient data to train an effective model from scratch. Chemistrypublications is one such domain, where scientific jargon and overloadedterminology inhibit the performance of a general language model. The recentspherical embedding model (JoSE) proposed in arXiv:1911.01196 jointly learnsword and document embeddings during training on the multi-dimensional unitsphere, which performs well for document classification and word correlationtasks. But, we show a non-convergence caused by global rotations during itstraining prevents it from domain adaptation. In this work, we develop methodsto counter the global rotation of the embedding space and propose strategies toupdate words and documents during domain specific training. Two new documentclassification data-sets are collated from general and chemistry scientificjournals to compare the proposed update training strategies with benchmarkmodels. We show that our strategies are able to reduce the performance cost ofdomain adaptation to a level similar to Word2Vec.</p>  </details></details><details>  <summary>16. <b>标题：Comparative Explanations of Recommendations</b></summary>  <p><b>编号</b>：[165]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00670</p>  <p><b>作者</b>：Aobo Yang,  Nan Wang,  Renqin Cai,  Hongbo Deng,  Hongning Wang</p>  <p><b>备注</b>：17 pages, 4 figures</p>  <p><b>关键词</b>：two large recommendation benchmark datasets, art explainable recommendation algorithms demonstrate, new explanation quality metric based, first extract one sentence, e ., comparative explanations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>As recommendation is essentially a comparative (or ranking) process, a goodexplanation should illustrate to users why an item is believed to be betterthan another, i.e., comparative explanations about the recommended items.Ideally, after reading the explanations, a user should reach the same rankingof items as the system's. Unfortunately, little research attention has yet beenpaid on such comparative explanations.In this work, we develop an extract-and-refine architecture to explain therelative comparisons among a set of ranked items from a recommender system. Foreach recommended item, we first extract one sentence from its associatedreviews that best suits the desired comparison against a set of referenceitems. Then this extracted sentence is further articulated with respect to thetarget user through a generative model to better explain why the item isrecommended. We design a new explanation quality metric based on BLEU to guidethe end-to-end training of the extraction and refinement components, whichavoids generation of generic content. Extensive offline evaluations on twolarge recommendation benchmark datasets and serious user studies against anarray of state-of-the-art explainable recommendation algorithms demonstrate thenecessity of comparative explanations and the effectiveness of our solution.</p>  </details></details><details>  <summary>17. <b>标题：Unsupervised Domain Adaptation with Adapter</b></summary>  <p><b>编号</b>：[167]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00667</p>  <p><b>作者</b>：Rongsheng Zhang,  Yinhe Zheng,  Xiaoxi Mao,  Minlie Huang</p>  <p><b>备注</b>：Accepted by NeurIPS2021 workshop</p>  <p><b>关键词</b>：trained models embed generic knowledge learned, better capture transferable features, achieved promising results since, several trainable adapter modules, learned generic knowledge</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Unsupervised domain adaptation (UDA) with pre-trained language models (PrLM)has achieved promising results since these pre-trained models embed genericknowledge learned from various domains. However, fine-tuning all the parametersof the PrLM on a small domain-specific corpus distort the learned genericknowledge, and it is also expensive to deployment a whole fine-tuned PrLM foreach domain. This paper explores an adapter-based fine-tuning approach forunsupervised domain adaptation. Specifically, several trainable adapter modulesare inserted in a PrLM, and the embedded generic knowledge is preserved byfixing the parameters of the original PrLM at fine-tuning. A domain-fusionscheme is introduced to train these adapters using a mix-domain corpus tobetter capture transferable features. Elaborated experiments on two benchmarkdatasets are carried out, and the results demonstrate that our approach iseffective with different tasks, dataset sizes, and domain similarities.</p>  </details></details><details>  <summary>18. <b>标题：SADGA: Structure-Aware Dual Graph Aggregation Network for Text-to-SQL</b></summary>  <p><b>编号</b>：[174]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00653</p>  <p><b>作者</b>：Ruichu Cai,  Jinjie Yuan,  Boyan Xu,  Zhifeng Hao</p>  <p><b>备注</b>：Paper accepted at the 35th Conference on Neural Information Processing Systems(NeurIPS 2021)</p>  <p><b>关键词</b>：aware dual graph aggregation network, drawn much attention recently, also achieved 3rd place, aware aggregation method, aware aggregation method</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The Text-to-SQL task, aiming to translate the natural language of thequestions into SQL queries, has drawn much attention recently. One of the mostchallenging problems of Text-to-SQL is how to generalize the trained model tothe unseen database schemas, also known as the cross-domain Text-to-SQL task.The key lies in the generalizability of (i) the encoding method to model thequestion and the database schema and (ii) the question-schema linking method tolearn the mapping between words in the question and tables/columns in thedatabase schema. Focusing on the above two key issues, we propose aStructure-Aware Dual Graph Aggregation Network (SADGA) for cross-domainText-to-SQL. In SADGA, we adopt the graph structure to provide a unifiedencoding model for both the natural language question and database schema.Based on the proposed unified modeling, we further devise a structure-awareaggregation method to learn the mapping between the question-graph andschema-graph. The structure-aware aggregation method is featured with GlobalGraph Linking, Local Graph Linking, and Dual-Graph Aggregation Mechanism. Wenot only study the performance of our proposal empirically but also achieved3rd place on the challenging Text-to-SQL benchmark Spider at the time ofwriting.</p>  </details></details><details>  <summary>19. <b>标题：VSEC: Transformer-based Model for Vietnamese Spelling Correction</b></summary>  <p><b>编号</b>：[178]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00640</p>  <p><b>作者</b>：Dinh-Truong Do,  Ha Thanh Nguyen,  Thang Ngoc Bui,  Dinh Hieu Vo</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：byte pair encoding technique, spelling mistakes stand near, randomly introduced spelling errors, 341 different vietnamese sentences, correct vietnamese spelling errors</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Spelling error correction is one of topics which have a long history innatural language processing. Although previous studies have achieved remarkableresults, challenges still exist. In the Vietnamese language, a state-of-the-artmethod for the task infers a syllable's context from its adjacent syllables.The method's accuracy can be unsatisfactory, however, because the model maylose the context if two (or more) spelling mistakes stand near each other. Inthis paper, we propose a novel method to correct Vietnamese spelling errors. Wetackle the problems of mistyped errors and misspelled errors by using a deeplearning model. The embedding layer, in particular, is powered by the byte pairencoding technique. The sequence to sequence model based on the Transformerarchitecture makes our approach different from the previous works on the sameproblem. In the experiment, we train the model with a large synthetic dataset,which is randomly introduced spelling errors. We test the performance of theproposed method using a realistic dataset. This dataset contains 11,202human-made misspellings in 9,341 different Vietnamese sentences. Theexperimental results show that our method achieves encouraging performance with86.8% errors detected and 81.5% errors corrected, which improves thestate-of-the-art approach 5.6% and 2.2%, respectively.</p>  </details></details><details>  <summary>20. <b>标题：R-BERT-CNN: Drug-target interactions extraction from biomedical  literature</b></summary>  <p><b>编号</b>：[188]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00611</p>  <p><b>作者</b>：Jehad Aldahdooh,  Ziaurrehman Tanoli,  Jing Tang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：biocreative vi chemprot test corpus )., biocreative vii drugprot test corpus, biocreative vii challenge, often manually extracted, micro f1 score</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this research, we present our work participation for the DrugProt task ofBioCreative VII challenge. Drug-target interactions (DTIs) are critical fordrug discovery and repurposing, which are often manually extracted from theexperimental articles. There are >32M biomedical articles on PubMed andmanually extracting DTIs from such a huge knowledge base is challenging. Tosolve this issue, we provide a solution for Track 1, which aims to extract 10types of interactions between drug and protein entities. We applied an EnsembleClassifier model that combines BioMed-RoBERTa, a state of art language model,with Convolutional Neural Networks (CNN) to extract these relations. Despitethe class imbalances in the BioCreative VII DrugProt test corpus, our modelachieves a good performance compared to the average of other submissions in thechallenge, with the micro F1 score of 55.67% (and 63% on BioCreative VIChemProt test corpus). The results show the potential of deep learning inextracting various types of DTIs.</p>  </details></details><details>  <summary>21. <b>标题：Towards Language Modelling in the Speech Domain Using Sub-word  Linguistic Units</b></summary>  <p><b>编号</b>：[189]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00610</p>  <p><b>作者</b>：Anurag Katakkar,  Alan W Black</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：traditional text language modelling metrics like perplexity, offers better acoustic consistency across utterances, traditional speech lms often depending, model closely approximates babbling speech, based generative speech lm</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Language models (LMs) for text data have been studied extensively for theirusefulness in language generation and other downstream tasks. However, languagemodelling purely in the speech domain is still a relatively unexplored topic,with traditional speech LMs often depending on auxiliary text LMs for learningdistributional aspects of the language. For the English language, these LMstreat words as atomic units, which presents inherent challenges to languagemodelling in the speech domain. In this paper, we propose a novel LSTM-basedgenerative speech LM that is inspired by the CBOW model and built on linguisticunits including syllables and phonemes. This offers better acoustic consistencyacross utterances in the dataset, as opposed to single melspectrogram frames,or whole words. With a limited dataset, orders of magnitude smaller than thatrequired by contemporary generative models, our model closely approximatesbabbling speech. We show the effect of training with auxiliary text LMs,multitask learning objectives, and auxiliary articulatory features. Through ourexperiments, we also highlight some well known, but poorly documentedchallenges in training generative speech LMs, including the mismatch betweenthe supervised learning objective with which these models are trained such asMean Squared Error (MSE), and the true objective, which is speech quality. Ourexperiments provide an early indication that while validation loss and MelCepstral Distortion (MCD) are not strongly correlated with generated speechquality, traditional text language modelling metrics like perplexity andnext-token-prediction accuracy might be.</p>  </details></details><details>  <summary>22. <b>标题：A Systematic Investigation of Commonsense Understanding in Large  Language Models</b></summary>  <p><b>编号</b>：[191]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00607</p>  <p><b>作者</b>：Xiang Lorraine Li,  Adhi Kuncoro,  Cyprien de Masson d'Autume,  Phil Blunsom,  Aida Nematzadeh</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：models exhibit commonsense understanding --, leveraging explicit commonsense knowledge, many natural language processing, large language models, large language models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Large language models have shown impressive performance on many naturallanguage processing (NLP) tasks in a zero-shot setting. We ask whether thesemodels exhibit commonsense understanding -- a critical component of NLPapplications -- by evaluating models against four commonsense benchmarks. Wefind that the impressive zero-shot performance of large language models ismostly due to existence of dataset bias in our benchmarks. We also show thatthe zero-shot performance is sensitive to the choice of hyper-parameters andsimilarity of the benchmark to the pre-training datasets. Moreover, we did notobserve substantial improvements when evaluating models in a few-shot setting.Finally, in contrast to previous work, we find that leveraging explicitcommonsense knowledge does not yield substantial improvement.</p>  </details></details><details>  <summary>23. <b>标题：Minimum Description Length Recurrent Neural Networks</b></summary>  <p><b>编号</b>：[197]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00600</p>  <p><b>作者</b>：Nur Lan,  Michal Geyer,  Emmanuel Chemla,  Roni Katzir</p>  <p><b>备注</b>：14 pages</p>  <p><b>关键词</b>：objective function master tasks involving memory challenges, thus provide formal proofs, minimum description length score, nb ^{ 2n }$,, learners master grammars</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We train neural networks to optimize a Minimum Description Length score,i.e., to balance between the complexity of the network and its accuracy at atask. We show that networks trained with this objective function master tasksinvolving memory challenges such as counting, including cases that go beyondcontext-free languages. These learners master grammars for, e.g., $a^nb^n$,$a^nb^nc^n$, $a^nb^{2n}$, and $a^nb^mc^{n+m}$, and they perform addition. Theydo so with 100% accuracy, sometimes also with 100% confidence. The networks arealso small and their inner workings are transparent. We thus provide formalproofs that their perfect accuracy holds not only on a given test set, but forany input sequence.</p>  </details></details><details>  <summary>24. <b>标题：Text Classification for Task-based Source Code Related Questions</b></summary>  <p><b>编号</b>：[207]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00580</p>  <p><b>作者</b>：Sairamvinay Vijayaraghavan,  Jinxiao Song,  David Tomassi,  Siddhartha Punj,  Jailan Sabet</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：simple binary neural network classifier model, using hidden state context vectors, fold deep learning model, embeddings perform slightly better, hidden state layer</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>There is a key demand to automatically generate code for small tasks fordevelopers. Websites such as StackOverflow provide a simplistic way by offeringsolutions in small snippets which provide a complete answer to whatever taskquestion the developer wants to code. Natural Language Processing andparticularly Question-Answering Systems are very helpful in resolving andworking on these tasks. In this paper, we develop a two-fold deep learningmodel: Seq2Seq and a binary classifier that takes in the intent (which is innatural language) and code snippets in Python. We train both the intent and thecode utterances in the Seq2Seq model, where we decided to compare the effect ofthe hidden layer embedding from the encoder for representing the intent andsimilarly, using the decoder's hidden layer embeddings for the code sequence.Then we combine both these embeddings and then train a simple binary neuralnetwork classifier model for predicting if the intent is correctly answered bythe predicted code sequence from the seq2seq model. We find that the hiddenstate layer's embeddings perform slightly better than regular standardembeddings from a constructed vocabulary. We experimented with our tests on theCoNaLa dataset in addition to the StaQC database consisting of simple task-codesnippet-based pairs. We empirically establish that using additional pre-trainedembeddings for code snippets in Python is less context-based in comparison tousing hidden state context vectors from seq2seq models.</p>  </details></details><details>  <summary>25. <b>标题：What Went Wrong? Explaining Overall Dialogue Quality through  Utterance-Level Impacts</b></summary>  <p><b>编号</b>：[209]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00572</p>  <p><b>作者</b>：James D. Finch,  Sarah E. Finch,  Jinho D. Choi</p>  <p><b>备注</b>：Accepted at the 3rd Workshop on NLP for ConvAI</p>  <p><b>关键词</b>：dialogue system often requires intensive developer effort, overall user rating without utterance, allowing resultant model conclusions, overall dialogue quality, overall dialogue quality</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Improving user experience of a dialogue system often requires intensivedeveloper effort to read conversation logs, run statistical analyses, andintuit the relative importance of system shortcomings. This paper presents anovel approach to automated analysis of conversation logs that learns therelationship between user-system interactions and overall dialogue quality.Unlike prior work on utterance-level quality prediction, our approach learnsthe impact of each interaction from the overall user rating withoututterance-level annotation, allowing resultant model conclusions to be derivedon the basis of empirical evidence and at low cost. Our model identifiesinteractions that have a strong correlation with the overall dialogue qualityin a chatbot setting. Experiments show that the automated analysis from ourmodel agrees with expert judgments, making this work the first to show thatsuch weakly-supervised learning of utterance-level quality prediction is highlyachievable.</p>  </details></details><details>  <summary>26. <b>标题：An Approach to Inference-Driven Dialogue Management within a Social  Chatbot</b></summary>  <p><b>编号</b>：[210]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00570</p>  <p><b>作者</b>：Sarah E. Finch,  James D. Finch,  Daniil Huryn,  William Hutsell,  Xiaoyuan Huang,  Han He,  Jinho D. Choi</p>  <p><b>备注</b>：Published in 4th Proceedings of Alexa Prize (Alexa Prize 2020)</p>  <p><b>关键词</b>：synthesize new predicates using efficient graph matching, novel dialogue management approach based, first stage translates user utterances, synthesize new knowledge, understanding latent semantics</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present a chatbot implementing a novel dialogue management approach basedon logical inference. Instead of framing conversation a sequence of responsegeneration tasks, we model conversation as a collaborative inference process inwhich speakers share information to synthesize new knowledge in real time. Ourchatbot pipeline accomplishes this modelling in three broad stages. The firststage translates user utterances into a symbolic predicate representation. Thesecond stage then uses this structured representation in conjunction with alarger knowledge base to synthesize new predicates using efficient graphmatching. In the third and final stage, our bot selects a small subset ofpredicates and translates them into an English response. This approach lendsitself to understanding latent semantics of user inputs, flexible initiativetaking, and responses that are novel and coherent with the dialogue context.</p>  </details></details><details>  <summary>27. <b>标题：Revealing and Protecting Labels in Distributed Training</b></summary>  <p><b>编号</b>：[214]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00556</p>  <p><b>作者</b>：Trung Dang,  Om Thakkar,  Swaroop Ramaswamy,  Rajiv Mathews,  Peter Chin,  Françoise Beaufays</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：federated learning often involve transmission, model architectures across multiple domains, g ., resnet ),, existing reconstruction techniques improve, thereby avoiding transmission</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Distributed learning paradigms such as federated learning often involvetransmission of model updates, or gradients, over a network, thereby avoidingtransmission of private data. However, it is possible for sensitive informationabout the training data to be revealed from such gradients. Prior works havedemonstrated that labels can be revealed analytically from the last layer ofcertain models (e.g., ResNet), or they can be reconstructed jointly with modelinputs by using Gradients Matching [Zhu et al'19] with additional knowledgeabout the current state of the model. In this work, we propose a method todiscover the set of labels of training samples from only the gradient of thelast layer and the id to label mapping. Our method is applicable to a widevariety of model architectures across multiple domains. We demonstrate theeffectiveness of our method for model training in two domains - imageclassification, and automatic speech recognition. Furthermore, we show thatexisting reconstruction techniques improve their efficacy when used inconjunction with our method. Conversely, we demonstrate that gradientquantization and sparsification can significantly reduce the success of theattack.</p>  </details></details><details>  <summary>28. <b>标题：Quality Estimation Using Round-trip Translation with Sentence Embeddings</b></summary>  <p><b>编号</b>：[215]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00554</p>  <p><b>作者</b>：Nathan Crone,  Adam Power,  John Weldon</p>  <p><b>备注</b>：10 pages, 5 figures</p>  <p><b>关键词</b>：previous pitfalls found, many previous attempts, method makes use, language representation learning, trip translated sentences</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Estimating the quality of machine translation systems has been an ongoingchallenge for researchers in this field. Many previous attempts at usinground-trip translation as a measure of quality have failed, and there is muchdisagreement as to whether it can be a viable method of quality estimation. Inthis paper, we revisit round-trip translation, proposing a system which aims tosolve the previous pitfalls found with the approach. Our method makes use ofrecent advances in language representation learning to more accurately gaugethe similarity between the original and round-trip translated sentences.Experiments show that while our approach does not reach the performance ofcurrent state of the art methods, it may still be an effective approach forsome language pairs.</p>  </details></details><details>  <summary>29. <b>标题：Cross-Domain Reasoning via Template Filling</b></summary>  <p><b>编号</b>：[218]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00539</p>  <p><b>作者</b>：Dheeraj Rajagopal,  Vivek Khetan,  Bogdan Sacaleanu,  Anatole Gershman,  Andrew Fano,  Eduard Hovy</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experiments across several pretrained encoder, filling enables pretrained sequence, sequence models across domains, depth error analysis, reasoning across domains</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this paper, we explore the ability of sequence to sequence models toperform cross-domain reasoning. Towards this, we present aprompt-template-filling approach to enable sequence to sequence models toperform cross-domain reasoning. We also present a case-study with commonsenseand health and well-being domains, where we study how prompt-template-fillingenables pretrained sequence to sequence models across domains. Our experimentsacross several pretrained encoder-decoder models show that cross-domainreasoning is challenging for current models. We also show an in-depth erroranalysis and avenues for future research for reasoning across domains</p>  </details></details><details>  <summary>30. <b>标题：FinEAS: Financial Embedding Analysis of Sentiment</b></summary>  <p><b>编号</b>：[222]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00526</p>  <p><b>作者</b>：Asier Gutiérrez-Fandiño,  Miquel Noguer i Alonso,  Petter Kolm,  Jordi Armengol-Estapé</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：including sentiment analysis using labelled datasets, finance called financial embedding analysis, based language models like bert, financial sentiment analysis based, approach achieves significant improvements</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We introduce a new language representation model in finance called FinancialEmbedding Analysis of Sentiment (FinEAS). In financial markets, news andinvestor sentiment are significant drivers of security prices. Thus, leveragingthe capabilities of modern NLP approaches for financial sentiment analysis is acrucial component in identifying patterns and trends that are useful for marketparticipants and regulators. In recent years, methods that use transferlearning from large Transformer-based language models like BERT, have achievedstate-of-the-art results in text classification tasks, including sentimentanalysis using labelled datasets. Researchers have quickly adopted theseapproaches to financial texts, but best practices in this domain are notwell-established. In this work, we propose a new model for financial sentimentanalysis based on supervised fine-tuned sentence embeddings from a standardBERT model. We demonstrate our approach achieves significant improvements incomparison to vanilla BERT, LSTM, and FinBERT, a financial domain specificBERT.</p>  </details></details><details>  <summary>31. <b>标题：Visualization: the missing factor in Simultaneous Speech Translation</b></summary>  <p><b>编号</b>：[225]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00514</p>  <p><b>作者</b>：Sara Papi,  Matteo Negri,  Marco Turchi</p>  <p><b>备注</b>：Accepted at CLIC-it 2021</p>  <p><b>关键词</b>：like international live conferences, visualization strategy adopted, user experience standpoint, simultaneous speech translation, oriented metrics accounting</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Simultaneous speech translation (SimulST) is the task in which outputgeneration has to be performed on partial, incremental speech input. In recentyears, SimulST has become popular due to the spread of cross-lingualapplication scenarios, like international live conferences and streaminglectures, in which on-the-fly speech translation can facilitate users' accessto audio-visual content. In this paper, we analyze the characteristics of theSimulST systems developed so far, discussing their strengths and weaknesses. Wethen concentrate on the evaluation framework required to properly assesssystems' effectiveness. To this end, we raise the need for a broaderperformance analysis, also including the user experience standpoint. SimulSTsystems, indeed, should be evaluated not only in terms of quality/latencymeasures, but also via task-oriented metrics accounting, for instance, for thevisualization strategy adopted. In light of this, we highlight which are thegoals achieved by the community and what is still missing.</p>  </details></details><details>  <summary>32. <b>标题：DSC-IITISM at FinCausal 2021: Combining POS tagging with Attention-based  Contextual Representations for Identifying Causal Relationships in Financial  Documents</b></summary>  <p><b>编号</b>：[235]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00490</p>  <p><b>作者</b>：Gunjan Haldar,  Aman Mittal,  Pradyumna Gupta</p>  <p><b>备注</b>：5 pages, 5 tables</p>  <p><b>关键词</b>：financial documents using transformers, causality detection draws plenty, natural language processing, modern transformer models, explore several methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Causality detection draws plenty of attention in the field of NaturalLanguage Processing and linguistics research. It has essential applications ininformation retrieval, event prediction, question answering, financialanalysis, and market research. In this study, we explore several methods toidentify and extract cause-effect pairs in financial documents usingtransformers. For this purpose, we propose an approach that combines POStagging with the BIO scheme, which can be integrated with modern transformermodels to address this challenge of identifying causality in a given text. Ourbest methodology achieves an F1-Score of 0.9551, and an Exact Match Score of0.8777 on the blind test in the FinCausal-2021 Shared Task at the FinCausal2021 Workshop.</p>  </details></details><details>  <summary>33. <b>标题：Hierarchical Deep Residual Reasoning for Temporal Moment Localization</b></summary>  <p><b>编号</b>：[265]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00417</p>  <p><b>作者</b>：Ziyang Ma,  Xianjing Han,  Xuemeng Song,  Yiran Cui,  Liqiang Nie</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：simple yet effective res, hierarchical deep residual reasoning, existing methods mainly focus, works mainly understand, extensive experiments conducted</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Temporal Moment Localization (TML) in untrimmed videos is a challenging taskin the field of multimedia, which aims at localizing the start and end pointsof the activity in the video, described by a sentence query. Existing methodsmainly focus on mining the correlation between video and sentencerepresentations or investigating the fusion manner of the two modalities. Theseworks mainly understand the video and sentence coarsely, ignoring the fact thata sentence can be understood from various semantics, and the dominant wordsaffecting the moment localization in the semantics are the action and objectreference. Toward this end, we propose a Hierarchical Deep Residual Reasoning(HDRR) model, which decomposes the video and sentence into multi-levelrepresentations with different semantics to achieve a finer-grainedlocalization. Furthermore, considering that videos with different resolutionand sentences with different length have different difficulty in understanding,we design the simple yet effective Res-BiGRUs for feature fusion, which is ableto grasp the useful information in a self-adapting manner. Extensiveexperiments conducted on Charades-STA and ActivityNet-Captions datasetsdemonstrate the superiority of our HDRR model compared with otherstate-of-the-art methods.</p>  </details></details><details>  <summary>34. <b>标题：Speech Emotion Recognition Using Quaternion Convolutional Neural  Networks</b></summary>  <p><b>编号</b>：[271]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00404</p>  <p><b>作者</b>：Aneesh Muppidi,  Martin Radfar</p>  <p><b>备注</b>：Published in ICASSP 2021</p>  <p><b>关键词</b>：interactive emotional dyadic motion capture, qcnn also achieves comparable results, qcnn based ser model outperforms, quaternion convolutional neural network, model size significantly compared</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Although speech recognition has become a widespread technology, inferringemotion from speech signals still remains a challenge. To address this problem,this paper proposes a quaternion convolutional neural network (QCNN) basedspeech emotion recognition (SER) model in which Mel-spectrogram features ofspeech signals are encoded in an RGB quaternion domain. We show that our QCNNbased SER model outperforms other real-valued methods in the RyersonAudio-Visual Database of Emotional Speech and Song (RAVDESS, 8-classes)dataset, achieving, to the best of our knowledge, state-of-the-art results. TheQCNN also achieves comparable results with the state-of-the-art methods in theInteractive Emotional Dyadic Motion Capture (IEMOCAP 4-classes) and BerlinEMO-DB (7-classes) datasets. Specifically, the model achieves an accuracy of77.87\%, 70.46\%, and 88.78\% for the RAVDESS, IEMOCAP, and EMO-DB datasets,respectively. In addition, our results show that the quaternion unit structureis better able to encode internal dependencies to reduce its model sizesignificantly compared to other methods.</p>  </details></details><details>  <summary>35. <b>标题：FANS: Fusing ASR and NLU for on-device SLU</b></summary>  <p><b>编号</b>：[273]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00400</p>  <p><b>作者</b>：Martin Radfar,  Athanasios Mouchtaris,  Siegfried Kunzmann,  Ariya Rastrow</p>  <p><b>备注</b>：Published in Interspeech 2021</p>  <p><b>关键词</b>：systems translate voice input commands, predict non null slot tags, current slu systems deploy, given input audio, spoken language understanding</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Spoken language understanding (SLU) systems translate voice input commands tosemantics which are encoded as an intent and pairs of slot tags and values.Most current SLU systems deploy a cascade of two neural models where the firstone maps the input audio to a transcript (ASR) and the second predicts theintent and slots from the transcript (NLU). In this paper, we introduce FANS, anew end-to-end SLU model that fuses an ASR audio encoder to a multi-task NLUdecoder to infer the intent, slot tags, and slot values directly from a giveninput audio, obviating the need for transcription. FANS consists of a sharedaudio encoder and three decoders, two of which are seq-to-seq decoders thatpredict non null slot tags and slot values in parallel and in anauto-regressive manner. FANS neural encoder and decoders architectures areflexible which allows us to leverage different combinations of LSTM,self-attention, and attenders. Our experiments show compared to thestate-of-the-art end-to-end SLU models, FANS reduces ICER and IRER errorsrelatively by 30 % and 7 %, respectively, when tested on an in-house SLUdataset and by 0.86 % and 2 % absolute when tested on a public SLU dataset.</p>  </details></details><details>  <summary>36. <b>标题：EfficientWord-Net: An Open Source Hotword Detection Engine based on  One-shot Learning</b></summary>  <p><b>编号</b>：[280]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00379</p>  <p><b>作者</b>：Chidhambararajan R,  Aman Rangaur,  Sibi Chakkaravarthy Sethuraman</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：existing systems requires enormous amounts, special phrases also known, voice assistants like siri, time engines whose purpose, hotword detection engine based</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Voice assistants like Siri, Google Assistant, Alexa etc. are used widelyacross the globe for home automation, these require the use of special phrasesalso known as hotwords to wake it up and perform an action like "Hey Alexa!","Ok Google!" and "Hey Siri!" etc. These hotwords are detected with lightweightreal-time engines whose purpose is to detect the hotwords uttered by the user.This paper presents the design and implementation of a hotword detection enginebased on one-shot learning which detects the hotword uttered by the user inreal-time with just one or few training samples of the hotword. This approachis efficient when compared to existing implementations because the process ofadding a new hotword in the existing systems requires enormous amounts ofpositive and negative training samples and the model needs to retrain for everyhotword. This makes the existing implementations inefficient in terms ofcomputation and cost. The architecture proposed in this paper has achieved anaccuracy of 94.51%.</p>  </details></details><details>  <summary>37. <b>标题：AdvCodeMix: Adversarial Attack on Code-Mixed Data</b></summary>  <p><b>编号</b>：[287]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00350</p>  <p><b>作者</b>：Sourya Dipta Das,  Ayan Basak,  Soumil Mandal,  Dipankar Das</p>  <p><b>备注</b>：Accepted to CODS-COMAD 2022</p>  <p><b>关键词</b>：various sentiment classification models trained, employing various perturbation strategies, mixed classification models, various perturbation techniques, first generalized framework</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Research on adversarial attacks are becoming widely popular in the recentyears. One of the unexplored areas where prior research is lacking is theeffect of adversarial attacks on code-mixed data. Therefore, in the presentwork, we have explained the first generalized framework on text perturbation toattack code-mixed classification models in a black-box setting. We rely onvarious perturbation techniques that preserve the semantic structures of thesentences and also obscure the attacks from the perception of a human user. Thepresent methodology leverages the importance of a token to decide where toattack by employing various perturbation strategies. We test our strategies onvarious sentiment classification models trained on Bengali-English andHindi-English code-mixed datasets, and reduce their F1-scores by nearly 51 %and 53 % respectively, which can be further reduced if a larger number oftokens are perturbed in a given sentence.</p>  </details></details><details>  <summary>38. <b>标题：EmpBot: A T5-based Empathetic Chatbot focusing on Sentiments</b></summary>  <p><b>编号</b>：[299]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00310</p>  <p><b>作者</b>：Emmanouil Zaranis,  Georgios Paraskevopoulos,  Athanasios Katsamanis,  Alexandros Potamianos</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：empathy forcing auxiliary losses favor empathetic responses, transformer pretrained language model, human evaluation results indicate, favoring empathetic responses, response language modeling</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this paper, we introduce EmpBot: an end-to-end empathetic chatbot.Empathetic conversational agents should not only understand what is beingdiscussed, but also acknowledge the implied feelings of the conversationpartner and respond appropriately. To this end, we propose a method based on atransformer pretrained language model (T5). Specifically, during finetuning wepropose to use three objectives: response language modeling, sentimentunderstanding, and empathy forcing. The first objective is crucial forgenerating relevant and coherent responses, while the next ones are significantfor acknowledging the sentimental state of the conversational partner and forfavoring empathetic responses. We evaluate our model on the EmpatheticDialoguesdataset using both automated metrics and human evaluation. The inclusion of thesentiment understanding and empathy forcing auxiliary losses favor empatheticresponses, as human evaluation results indicate, comparing with the currentstate-of-the-art.</p>  </details></details><details>  <summary>39. <b>标题：EventNarrative: A large-scale Event-centric Dataset for Knowledge  Graph-to-Text Generation</b></summary>  <p><b>编号</b>：[311]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00276</p>  <p><b>作者</b>：Anthony Colas,  Ali Sadeghian,  Yue Wang,  Daisy Zhe Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：datasets contain many unlinked entities, help break new ground, current largest parallel dataset, corresponding natural language text, also evaluate two types</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We introduce EventNarrative, a knowledge graph-to-text dataset from publiclyavailable open-world knowledge graphs. Given the recent advances inevent-driven Information Extraction (IE), and that prior research ongraph-to-text only focused on entity-driven KGs, this paper focuses onevent-centric data. However, our data generation system can still be adapted toother other types of KG data. Existing large-scale datasets in thegraph-to-text area are non-parallel, meaning there is a large disconnectbetween the KGs and text. The datasets that have a paired KG and text, aresmall scale and manually generated or generated without a rich ontology, makingthe corresponding graphs sparse. Furthermore, these datasets contain manyunlinked entities between their KG and text pairs. EventNarrative consists ofapproximately 230,000 graphs and their corresponding natural language text, 6times larger than the current largest parallel dataset. It makes use of a richontology, all of the KGs entities are linked to the text, and our manualannotations confirm a high data quality. Our aim is two-fold: help break newground in event-centric research where data is lacking, and to give researchersa well-defined, large-scale dataset in order to better evaluate existing andfuture knowledge graph-to-text models. We also evaluate two types of baselineon EventNarrative: a graph-to-text specific model and two state-of-the-artlanguage models, which previous work has shown to be adaptable to the knowledgegraph-to-text domain.</p>  </details></details><details>  <summary>40. <b>标题：Magic Pyramid: Accelerating Inference with Early Exiting and Token  Pruning</b></summary>  <p><b>编号</b>：[328]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00230</p>  <p><b>作者</b>：Xuanli He,  Iman Keivanloo,  Yi Xu,  Xiang He,  Belinda Zeng,  Santosh Rajagopalan,  Trishul Chilimbi</p>  <p><b>备注</b>：8 pages</p>  <p><b>关键词</b>：two popular text classification tasks, early exiting express distinctive preferences, wise computation via token pruning, giga floating point operations, computation via removing non</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Pre-training and then fine-tuning large language models is commonly used toachieve state-of-the-art performance in natural language processing (NLP)tasks. However, most pre-trained models suffer from low inference speed.Deploying such large models to applications with latency constraints ischallenging. In this work, we focus on accelerating the inference viaconditional computations. To achieve this, we propose a novel idea, MagicPyramid (MP), to reduce both width-wise and depth-wise computation via tokenpruning and early exiting for Transformer-based models, particularly BERT. Theformer manages to save the computation via removing non-salient tokens, whilethe latter can fulfill the computation reduction by terminating the inferenceearly before reaching the final layer, if the exiting condition is met. Ourempirical studies demonstrate that compared to previous state of arts, MP isnot only able to achieve a speed-adjustable inference but also to surpass tokenpruning and early exiting by reducing up to 70% giga floating point operations(GFLOPs) with less than 0.5% accuracy drop. Token pruning and early exitingexpress distinctive preferences to sequences with different lengths. However,MP is capable of achieving an average of 8.06x speedup on two popular textclassification tasks, regardless of the sizes of the inputs.</p>  </details></details><details>  <summary>41. <b>标题：Backdoor Pre-trained Models Can Transfer to All</b></summary>  <p><b>编号</b>：[345]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00197</p>  <p><b>作者</b>：Lujia Shen,  Shouling Ji,  Xuhong Zhang,  Jinfeng Li,  Jing Chen,  Jie Shi,  Chengfang Fang,  Jianwei Yin,  Ting Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：popular online model repository hugging face, world natural language processing, inputs containing triggers directly, propose two new metrics, purpose language models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Pre-trained general-purpose language models have been a dominating componentin enabling real-world natural language processing (NLP) applications. However,a pre-trained model with backdoor can be a severe threat to the applications.Most existing backdoor attacks in NLP are conducted in the fine-tuning phase byintroducing malicious triggers in the targeted class, thus relying greatly onthe prior knowledge of the fine-tuning task. In this paper, we propose a newapproach to map the inputs containing triggers directly to a predefined outputrepresentation of the pre-trained NLP models, e.g., a predefined outputrepresentation for the classification token in BERT, instead of a target label.It can thus introduce backdoor to a wide range of downstream tasks without anyprior knowledge. Additionally, in light of the unique properties of triggers inNLP, we propose two new metrics to measure the performance of backdoor attacksin terms of both effectiveness and stealthiness. Our experiments with varioustypes of triggers show that our method is widely applicable to differentfine-tuning tasks (classification and named entity recognition) and todifferent models (such as BERT, XLNet, BART), which poses a severe threat.Furthermore, by collaborating with the popular online model repository HuggingFace, the threat brought by our method has been confirmed. Finally, we analyzethe factors that may affect the attack performance and share insights on thecauses of the success of our backdoor attack.</p>  </details></details><details>  <summary>42. <b>标题：Automatic Knowledge Augmentation for Generative Commonsense Reasoning</b></summary>  <p><b>编号</b>：[347]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00192</p>  <p><b>作者</b>：Jaehyung Seo,  Chanjun Park,  Sugyeong Eo,  Hyeonseok Moon,  Heuiseok Lim</p>  <p><b>备注</b>：Accepted for Data-centric AI workshop at NeurIPS 2021</p>  <p><b>关键词</b>：generative language models still struggle, language model without architecture modifications, uses automatic knowledge augmentation, extend commonsense knowledge using, generative commonsense reasoning</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Generative commonsense reasoning is the capability of a language model togenerate a sentence with a given concept-set that is based on commonsenseknowledge. However, generative language models still struggle to provideoutputs, and the training set does not contain patterns that are sufficient forgenerative commonsense reasoning. In this paper, we propose a data-centricmethod that uses automatic knowledge augmentation to extend commonsenseknowledge using a machine knowledge generator. This method can generatesemi-golden sentences that improve the generative commonsense reasoning of alanguage model without architecture modifications. Furthermore, this approachis a model-agnostic method and does not require human effort for dataconstruction.</p>  </details></details><details>  <summary>43. <b>标题：How should human translation coexist with NMT? Efficient tool for  building high quality parallel corpus</b></summary>  <p><b>编号</b>：[348]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00191</p>  <p><b>作者</b>：Chanjun Park,  Seolhwa Lee,  Hyeonseok Moon,  Sugyeong Eo,  Jaehyung Seo,  Heuiseok Lim</p>  <p><b>备注</b>：Accepted for Data-centric AI workshop at NeurIPS 2021</p>  <p><b>关键词</b>：combining data quality control, quality parallel corpora, proposed construction process, efficiently constructing high, neural machine translation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper proposes a tool for efficiently constructing high-quality parallelcorpora with minimizing human labor and making this tool publicly available.Our proposed construction process is based on neural machine translation (NMT)to allow for it to not only coexist with human translation, but also improveits efficiency by combining data quality control with human translation in adata-centric approach.</p>  </details></details><details>  <summary>44. <b>标题：Hierarchical Heterogeneous Graph Representation Learning for Short Text  Classification</b></summary>  <p><b>编号</b>：[352]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00180</p>  <p><b>作者</b>：Yaqing Wang,  Song Wang,  Quanming Yao,  Dejing Dou</p>  <p><b>备注</b>：Accepted to EMNLP 2021</p>  <p><b>关键词</b>：facilitates effective label propagation among similar short texts, various benchmark short text datasets show, hierarchical heterogeneous graph consisting, shine consistently outperforms state, new method called shine</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Short text classification is a fundamental task in natural languageprocessing. It is hard due to the lack of context information and labeled datain practice. In this paper, we propose a new method called SHINE, which isbased on graph neural network (GNN), for short text classification. First, wemodel the short text dataset as a hierarchical heterogeneous graph consistingof word-level component graphs which introduce more semantic and syntacticinformation. Then, we dynamically learn a short document graph that facilitateseffective label propagation among similar short texts. Thus, compared withexisting GNN-based methods, SHINE can better exploit interactions between nodesof the same types and capture similarities between short texts. Extensiveexperiments on various benchmark short text datasets show that SHINEconsistently outperforms state-of-the-art methods, especially with fewerlabels.</p>  </details></details><details>  <summary>45. <b>标题：Pseudo-Labeling for Massively Multilingual Speech Recognition</b></summary>  <p><b>编号</b>：[365]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00161</p>  <p><b>作者</b>：Loren Lugosch,  Tatiana Likhomanenko,  Gabriel Synnaeve,  Ronan Collobert</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：art monolingual speech recognition systems, massively multilingual speech recognition, unlabeled voxpopuli datasets show, final model using pseudo, works well even</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Semi-supervised learning through pseudo-labeling has become a staple ofstate-of-the-art monolingual speech recognition systems. In this work, weextend pseudo-labeling to massively multilingual speech recognition with 60languages. We propose a simple pseudo-labeling recipe that works well even withlow-resource languages: train a supervised multilingual model, fine-tune itwith semi-supervised learning on a target language, generate pseudo-labels forthat language, and train a final model using pseudo-labels for all languages,either from scratch or by fine-tuning. Experiments on the labeled Common Voiceand unlabeled VoxPopuli datasets show that our recipe can yield a model withbetter performance for many languages that also transfers well to LibriSpeech.</p>  </details></details><details>  <summary>46. <b>标题：DSEE: Dually Sparsity-embedded Efficient Tuning of Pre-trained Language  Models</b></summary>  <p><b>编号</b>：[366]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00160</p>  <p><b>作者</b>：Xuxi Chen,  Tianlong Chen,  Yu Cheng,  Weizhu Chen,  Zhangyang Wang,  Ahmed Hassan Awadallah</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：consistently demonstrate highly impressive parameter -/ training -/ inference, 35 \%$ inference flops savings, maintaining competitive downstream transfer performance, trained language models via magnitude, achieve two key objectives</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Gigantic pre-trained models have become central to natural languageprocessing (NLP), serving as the starting point for fine-tuning towards a rangeof downstream tasks. However, two pain points persist for this paradigm: (a) asthe pre-trained models grow bigger (e.g., 175B parameters for GPT-3), even thefine-tuning process can be time-consuming and computationally expensive; (b)the fine-tuned model has the same size as its starting point by default, whichis neither sensible due to its more specialized functionality, nor practicalsince many fine-tuned models will be deployed in resource-constrainedenvironments. To address these pain points, we propose a framework forresource- and parameter-efficient fine-tuning by leveraging the sparsity priorin both weight updates and the final model weights. Our proposed framework,dubbed Dually Sparsity-Embedded Efficient Tuning (DSEE), aims to achieve twokey objectives: (i) parameter efficient fine-tuning - by enforcingsparsity-aware weight updates on top of the pre-trained weights; and (ii)resource-efficient inference - by encouraging a sparse weight structure towardsthe final fine-tuned model. We leverage sparsity in these two directions byexploiting both unstructured and structured sparse patterns in pre-trainedlanguage models via magnitude-based pruning and $\ell_1$ sparse regularization.Extensive experiments and in-depth investigations, with diverse networkbackbones (i.e., BERT, GPT-2, and DeBERTa) on dozens of datasets, consistentlydemonstrate highly impressive parameter-/training-/inference-efficiency, whilemaintaining competitive downstream transfer performance. For instance, ourDSEE-BERT obtains about $35\%$ inference FLOPs savings with <1% trainable parameters and comparable performance to conventional fine-tuning. codes are available in this https url.< p>  </1%></p></details></details><details>  <summary>47. <b>标题：TransAug: Translate as Augmentation for Sentence Embeddings</b></summary>  <p><b>编号</b>：[367]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00157</p>  <p><b>作者</b>：Jue Wang,  Haofan Wang,  Xing Wu,  Chaochen Gao,  Debing Zhang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：standard semantic textual similarity, utilizing translated sentence pairs, english encoder via cross, contrastive learning greatly advances, lingual contrastive learning</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>While contrastive learning greatly advances the representation of sentenceembeddings, it is still limited by the size of the existing sentence datasets.In this paper, we present TransAug (Translate as Augmentation), which providethe first exploration of utilizing translated sentence pairs as dataaugmentation for text, and introduce a two-stage paradigm to advances thestate-of-the-art sentence embeddings. Instead of adopting an encoder trained inother languages setting, we first distill a Chinese encoder from a SimCSEencoder (pretrained in English), so that their embeddings are close in semanticspace, which can be regraded as implicit data augmentation. Then, we onlyupdate the English encoder via cross-lingual contrastive learning and frozenthe distilled Chinese encoder. Our approach achieves a new state-of-art onstandard semantic textual similarity (STS), outperforming both SimCSE andSentence-T5, and the best performance in corresponding tracks on transfer tasksevaluated by SentEval.</p>  </details></details><details>  <summary>48. <b>标题：The Golden Rule as a Heuristic to Measure the Fairness of Texts Using  Machine Learning</b></summary>  <p><b>编号</b>：[389]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00107</p>  <p><b>作者</b>：A. Izzidien,  J. Watson,  B. Loe,  P. Romero,  S. Fitz,  D. Stillwell</p>  <p><b>备注</b>：32 pages, 4 figures</p>  <p><b>关键词</b>：moral philosophy exists, individuals would typically, implementing two approaches, find f1 scores, axiom throughout history</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>To treat others as one would wish to be treated is a common formulation ofthe Golden Rule (GR). Yet, despite its prevalence as an axiom throughouthistory, no digitisation of the moral philosophy exists. In this paper weconsider how to digitise it so that it may be used to measure sentences suchas: the boy harmed the girl, and categorise them as fair or unfair. A reviewand reply to criticisms of the GR is made. We share the code for thedigitisation of the GR, and test it with a list of sentences. Implementing twoapproaches, one using the USE, and a second using ALBERT. We find F1 scores of78.0, 85.0, respectively. A suggestion of how the technology may be implementedto avoid unfair biases in word embeddings is made - given that individualswould typically not wish to be on the receiving end of an unfair act, such asracism, irrespective of whether the corpus being used deems such discriminationas praiseworthy.</p>  </details></details><details>  <summary>49. <b>标题：Measuring a Texts Fairness Dimensions Using Machine Learning Based on  Social Psychological Factors</b></summary>  <p><b>编号</b>：[398]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00086</p>  <p><b>作者</b>：A. Izzidien,  J. Watson,  B. Loe,  P. Romero,  S. Fitz,  D. Stillwell</p>  <p><b>备注</b>：38 pages, 9 figures</p>  <p><b>关键词</b>：dimensioned sentence level fairness perceptions vector, social bias within word embeddings, said fairness approximation vector produces, utilise social psychology literature, social act remains wanting</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Fairness is a principal social value that can be observed in civilisationsaround the world. A manifestations of this is in social agreements, oftendescribed in texts, such as contracts. Yet, despite the prevalence of such, afairness metric for texts describing a social act remains wanting. To addressthis, we take a step back to consider the problem based on first principals.Instead of using rules or templates, we utilise social psychology literature todetermine the principal factors that humans use when making a fairnessassessment. We then attempt to digitise these using word embeddings into amulti-dimensioned sentence level fairness perceptions vector to serve as anapproximation for these fairness perceptions. The method leverages a pro-socialbias within word embeddings, for which we obtain an F1= 81.0. A secondapproach, using PCA and ML based on the said fairness approximation vectorproduces an F1 score of 86.2. We details improvements that can be made in themethodology to incorporate the projection of sentence embedding on to asubspace representation of fairness.</p>  </details></details><details>  <summary>50. <b>标题：Skyformer: Remodel Self-Attention with Gaussian Kernel and Nyström  Method</b></summary>  <p><b>编号</b>：[420]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00035</p>  <p><b>作者</b>：Yifan Chen,  Qi Zeng,  Heng Ji,  Yun Yang</p>  <p><b>备注</b>：To appear in NeurIPS 2021</p>  <p><b>关键词</b>：long range arena benchmark show, computational cost without sacrificing, requiring fewer computation resources, although kernel machines suffer, high computational cost</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Transformers are expensive to train due to the quadratic time and spacecomplexity in the self-attention mechanism. On the other hand, although kernelmachines suffer from the same computation bottleneck in pairwise dot products,several approximation schemes have been successfully incorporated toconsiderably reduce their computational cost without sacrificing too muchaccuracy. In this work, we leverage the computation methods for kernel machinesto alleviate the high computational cost and introduce Skyformer, whichreplaces the softmax structure with a Gaussian kernel to stabilize the modeltraining and adapts the Nyström method to a non-positive semidefinite matrixto accelerate the computation. We further conduct theoretical analysis byshowing that the matrix approximation error of our proposed method is small inthe spectral norm. Experiments on Long Range Arena benchmark show that theproposed method is sufficient in getting comparable or even better performancethan the full self-attention while requiring fewer computation resources.</p>  </details></details><h1>机器学习</h1><details>  <summary>1. <b>标题：When Does Contrastive Learning Preserve Adversarial Robustness from  Pretraining to Finetuning?</b></summary>  <p><b>编号</b>：[1]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01124</p>  <p><b>作者</b>：Lijie Fan,  Sijia Liu,  Pin-Yu Chen,  Gaoyuan Zhang,  Chuang Gan</p>  <p><b>备注</b>：NeurIPS 2021. Code is available at this https URL</p>  <p><b>关键词</b>：supervised robust learning methods across multiple datasets, task robustness transferability without loss, helps preserve robustness without forgetting, novel adversarial contrastive pretraining framework, task robustness transferability '.</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Contrastive learning (CL) can learn generalizable feature representations andachieve the state-of-the-art performance of downstream tasks by finetuning alinear classifier on top of it. However, as adversarial robustness becomesvital in image classification, it remains unclear whether or not CL is able topreserve robustness to downstream tasks. The main challenge is that in theself-supervised pretraining + supervised finetuning paradigm, adversarialrobustness is easily forgotten due to a learning task mismatch from pretrainingto finetuning. We call such a challenge 'cross-task robustnesstransferability'. To address the above problem, in this paper we revisit andadvance CL principles through the lens of robustness enhancement. We show that(1) the design of contrastive views matters: High-frequency components ofimages are beneficial to improving model robustness; (2) Augmenting CL withpseudo-supervision stimulus (e.g., resorting to feature clustering) helpspreserve robustness without forgetting. Equipped with our new designs, wepropose AdvCL, a novel adversarial contrastive pretraining framework. We showthat AdvCL is able to enhance cross-task robustness transferability withoutloss of model accuracy and finetuning efficiency. With a thorough experimentalstudy, we demonstrate that AdvCL outperforms the state-of-the-artself-supervised robust learning methods across multiple datasets (CIFAR-10,CIFAR-100, and STL-10) and finetuning schemes (linear evaluation and full modelfinetuning).</p>  </details></details><details>  <summary>2. <b>标题：Rebooting ACGAN: Auxiliary Classifier GANs with Stable Training</b></summary>  <p><b>编号</b>：[3]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01118</p>  <p><b>作者</b>：Minguk Kang,  Woohyeon Shim,  Minsu Cho,  Jaesik Park</p>  <p><b>备注</b>：34 pages, 26 figures, 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：rebooted auxiliary classifier generative adversarial network, conditional generative adversarial networks, projecting input vectors onto, generate easily classifiable samples, auxiliary classifier gan</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Conditional Generative Adversarial Networks (cGAN) generate realistic imagesby incorporating class information into GAN. While one of the most popularcGANs is an auxiliary classifier GAN with softmax cross-entropy loss (ACGAN),it is widely known that training ACGAN is challenging as the number of classesin the dataset increases. ACGAN also tends to generate easily classifiablesamples with a lack of diversity. In this paper, we introduce two cures forACGAN. First, we identify that gradient exploding in the classifier can causean undesirable collapse in early training, and projecting input vectors onto aunit hypersphere can resolve the problem. Second, we propose the Data-to-DataCross-Entropy loss (D2D-CE) to exploit relational information in theclass-labeled dataset. On this foundation, we propose the Rebooted AuxiliaryClassifier Generative Adversarial Network (ReACGAN). The experimental resultsshow that ReACGAN achieves state-of-the-art generation results on CIFAR10,Tiny-ImageNet, CUB200, and ImageNet datasets. We also verify that ReACGANbenefits from differentiable augmentations and that D2D-CE harmonizes withStyleGAN2 architecture. Model weights and a software package that providesimplementations of representative cGANs and all experiments in our paper areavailable at this https URL.</p>  </details></details><details>  <summary>3. <b>标题：Resource-Efficient Federated Learning</b></summary>  <p><b>编号</b>：[4]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01108</p>  <p><b>作者</b>：Ahmed M. Abdelmoniem,  Atal Narayan Sahu,  Marco Canini,  Suhaib A. Fahmy</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：existing fl schemes use random participant selection, also improving trained model quality, presents numerous challenges relating, learners using local data, factors enable resource efficiency</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Federated Learning (FL) enables distributed training by learners using localdata, thereby enhancing privacy and reducing communication. However, itpresents numerous challenges relating to the heterogeneity of the datadistribution, device capabilities, and participant availability as deploymentsscale, which can impact both model convergence and bias. Existing FL schemesuse random participant selection to improve fairness; however, this can resultin inefficient use of resources and lower quality training. In this work, wesystematically address the question of resource efficiency in FL, showing thebenefits of intelligent participant selection, and incorporation of updatesfrom straggling participants. We demonstrate how these factors enable resourceefficiency while also improving trained model quality.</p>  </details></details><details>  <summary>4. <b>标题：FREGAN : an application of generative adversarial networks in enhancing  the frame rate of videos</b></summary>  <p><b>编号</b>：[5]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01105</p>  <p><b>作者</b>：Rishik Mishra,  Neeraj Gupta,  Nitya Shukla</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：frame rate enhancement generative adversarial network, high refresh rate, high refresh rate, frame rate enhancement, structural similarity index</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>A digital video is a collection of individual frames, while streaming thevideo the scene utilized the time slice for each frame. High refresh rate andhigh frame rate is the demand of all high technology applications. The actiontracking in videos becomes easier and motion becomes smoother in gamingapplications due to the high refresh rate. It provides a faster responsebecause of less time in between each frame that is displayed on the screen.FREGAN (Frame Rate Enhancement Generative Adversarial Network) model has beenproposed, which predicts future frames of a video sequence based on a sequenceof past frames. In this paper, we investigated the GAN model and proposedFREGAN for the enhancement of frame rate in videos. We have utilized Huber lossas a loss function in the proposed FREGAN. It provided excellent results insuper-resolution and we have tried to reciprocate that performance in theapplication of frame rate enhancement. We have validated the effectiveness ofthe proposed model on the standard datasets (UCF101 and RFree500). Theexperimental outcomes illustrate that the proposed model has a Peaksignal-to-noise ratio (PSNR) of 34.94 and a Structural Similarity Index (SSIM)of 0.95.</p>  </details></details><details>  <summary>5. <b>标题：Investigation of Independent Reinforcement Learning Algorithms in  Multi-Agent Environments</b></summary>  <p><b>编号</b>：[7]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01100</p>  <p><b>作者</b>：Ken Ming Lee,  Sriram Ganapathi Subramanian,  Mark Crowley</p>  <p><b>备注</b>：15 pages, 7 figures, Accepted for NeurIPS 2021 Deep Reinforcement Learning Workshop</p>  <p><b>关键词</b>：agents trained via independent algorithms learn, cooperative partially observable environments, independent reinforcement learning algorithms, three main categories, adding recurrence improves</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Independent reinforcement learning algorithms have no theoretical guaranteesfor finding the best policy in multi-agent settings. However, in practice,prior works have reported good performance with independent algorithms in somedomains and bad performance in others. Moreover, a comprehensive study of thestrengths and weaknesses of independent algorithms is lacking in theliterature. In this paper, we carry out an empirical comparison of theperformance of independent algorithms on four PettingZoo environments that spanthe three main categories of multi-agent environments, i.e., cooperative,competitive, and mixed. We show that in fully-observable environments,independent algorithms can perform on par with multi-agent algorithms incooperative and competitive settings. For the mixed environments, we show thatagents trained via independent algorithms learn to perform well individually,but fail to learn to cooperate with allies and compete with enemies. We alsoshow that adding recurrence improves the learning of independent algorithms incooperative partially observable environments.</p>  </details></details><details>  <summary>6. <b>标题：Encoding Program as Image: Evaluating Visual Representation of Source  Code</b></summary>  <p><b>编号</b>：[8]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01097</p>  <p><b>作者</b>：Md Rafiqul Islam Rabin,  Mohammad Amin Alipour</p>  <p><b>备注</b>：8 pages, 2 figures, 1 table</p>  <p><b>关键词</b>：neural models may provide high performance, code summarization task suggests, include various syntactic, evaluate several variations, encode source code</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>There are several approaches to encode source code in the input vectors ofneural models. These approaches attempt to include various syntactic andsemantic features of input programs in their encoding. In this paper, weinvestigate Code2Snapshot, a novel representation of the source code that isbased on the snapshots of input programs. We evaluate several variations ofthis representation and compare its performance with state-of-the-artrepresentations that utilize the rich syntactic and semantic features of inputprograms. Our preliminary study on the utility of Code2Snapshot in the codesummarization task suggests that simple snapshots of input programs havecomparable performance to the state-of-the-art representations. Interestingly,obscuring the input programs have insignificant impacts on the Code2Snapshotperformance, suggesting that, for some tasks, neural models may provide highperformance by relying merely on the structure of input programs.</p>  </details></details><details>  <summary>7. <b>标题：ZeBRA: Precisely Destroying Neural Networks with Zero-Data Based  Repeated Bit Flip Attack</b></summary>  <p><b>编号</b>：[14]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01080</p>  <p><b>作者</b>：Dahoon Park,  Kon-Woo Kwon,  Sunghoon Im,  Jaeha Kung</p>  <p><b>备注</b>：14 pages, 3 figures, 5 tables, Accepted at British Machine Vision Conference (BMVC) 2021</p>  <p><b>关键词</b>：data based repeated bit flip attack, precisely destroys deep neural networks, named distilled target data, model without accessing training, adversarial weight attack require</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this paper, we present Zero-data Based Repeated bit flip Attack (ZeBRA)that precisely destroys deep neural networks (DNNs) by synthesizing its ownattack datasets. Many prior works on adversarial weight attack require not onlythe weight parameters, but also the training or test dataset in searchingvulnerable bits to be attacked. We propose to synthesize the attack dataset,named distilled target data, by utilizing the statistics of batch normalizationlayers in the victim DNN model. Equipped with the distilled target data, ourZeBRA algorithm can search vulnerable bits in the model without accessingtraining or test dataset. Thus, our approach makes the adversarial weightattack more fatal to the security of DNNs. Our experimental results show that2.0x (CIFAR-10) and 1.6x (ImageNet) less number of bit flips are required onaverage to destroy DNNs compared to the previous attack method. Our code isavailable at https://github. com/pdh930105/ZeBRA.</p>  </details></details><details>  <summary>8. <b>标题：SmartSplit: Latency-Energy-Memory Optimisation for CNN Splitting on  Smartphone Environment</b></summary>  <p><b>编号</b>：[15]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01077</p>  <p><b>作者</b>：Ishan Prakash,  Aniruddh Bansal,  Rohit Verma,  Rajeev Shorey</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：although new generation smartphones come, decision analysis based approach, multiple cnn models show, taken centre stage, convolution neural networks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Artificial Intelligence has now taken centre stage in the smartphone industryowing to the need of bringing all processing close to the user and addressingprivacy concerns. Convolution Neural Networks (CNNs), which are used by severalAI applications, are highly resource and computation intensive. Although newgeneration smartphones come with AI-enabled chips, minimal memory and energyutilisation is essential as many applications are run concurrently on asmartphone. In light of this, optimising the workload on the smartphone byoffloading a part of the processing to a cloud server is an important directionof research. In this paper, we analyse the feasibility of splitting CNNsbetween smartphones and cloud server by formulating a multi-objectiveoptimisation problem that optimises the end-to-end latency, memory utilisation,and energy consumption. We design SmartSplit, a Genetic Algorithm with decisionanalysis based approach to solve the optimisation problem. Our experiments runwith multiple CNN models show that splitting a CNN between a smartphone and acloud server is feasible. The proposed approach, SmartSplit fares better whencompared to other state-of-the-art approaches.</p>  </details></details><details>  <summary>9. <b>标题：FedFm: Towards a Robust Federated Learning Approach For Fault Mitigation  at the Edge Nodes</b></summary>  <p><b>编号</b>：[16]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01074</p>  <p><b>作者</b>：Manupriya Gupta,  Pavas Goyal,  Rohit Verma,  Rajeev Shorey,  Huzur Saran</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：numerous heterogeneous edge devices collecting data, different network channels get involved, robust federated learning technique, federated learning deviates, selected devices fail</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Federated Learning deviates from the norm of "send data to model" to "sendmodel to data". When used in an edge ecosystem, numerous heterogeneous edgedevices collecting data through different means and connected through differentnetwork channels get involved in the training process. Failure of edge devicesin such an ecosystem due to device fault or network issues is highly likely. Inthis paper, we first analyse the impact of the number of edge devices on an FLmodel and provide a strategy to select an optimal number of devices that wouldcontribute to the model. We observe how the edge ecosystem behaves when theselected devices fail and provide a mitigation strategy to ensure a robustFederated Learning technique.</p>  </details></details><details>  <summary>10. <b>标题：Learning to Assimilate in Chaotic Dynamical Systems</b></summary>  <p><b>编号</b>：[21]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01058</p>  <p><b>作者</b>：Michael McCabe,  Jed Brown</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experimental results across several benchmark systems highlight, produce effective estimation schemes, used data assimilation methods, extending powerful results, data assimilation methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The accuracy of simulation-based forecasting in chaotic systems is heavilydependent on high-quality estimates of the system state at the time theforecast is initialized. Data assimilation methods are used to infer theseinitial conditions by systematically combining noisy, incomplete observationsand numerical models of system dynamics to produce effective estimationschemes. We introduce amortized assimilation, a framework for learning toassimilate in dynamical systems from sequences of noisy observations with noneed for ground truth data. We motivate the framework by extending powerfulresults from self-supervised denoising to the dynamical systems setting throughthe use of differentiable simulation. Experimental results across severalbenchmark systems highlight the improved effectiveness of our approach overwidely-used data assimilation methods.</p>  </details></details><details>  <summary>11. <b>标题：MOST-GAN: 3D Morphable StyleGAN for Disentangled Face Image Manipulation</b></summary>  <p><b>编号</b>：[22]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01048</p>  <p><b>作者</b>：Safa C. Medin,  Bernhard Egger,  Anoop Cherian,  Ye Wang,  Joshua B. Tenenbaum,  Xiaoming Liu,  Tim K. Marks</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：art 2d hair manipulation network, generate strikingly photorealistic face images, nonlinear 3d morphable models, gan achieves photorealistic manipulation, priori models physical attributes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recent advances in generative adversarial networks (GANs) have led toremarkable achievements in face image synthesis. While methods that usestyle-based GANs can generate strikingly photorealistic face images, it isoften difficult to control the characteristics of the generated faces in ameaningful and disentangled way. Prior approaches aim to achieve such semanticcontrol and disentanglement within the latent space of a previously trainedGAN. In contrast, we propose a framework that a priori models physicalattributes of the face such as 3D shape, albedo, pose, and lighting explicitly,thus providing disentanglement by design. Our method, MOST-GAN, integrates theexpressive power and photorealism of style-based GANs with the physicaldisentanglement and flexibility of nonlinear 3D morphable models, which wecouple with a state-of-the-art 2D hair manipulation network. MOST-GAN achievesphotorealistic manipulation of portrait images with fully disentangled 3Dcontrol over their physical attributes, enabling extreme manipulation oflighting, facial expression, and pose variations up to full profile view.</p>  </details></details><details>  <summary>12. <b>标题：A Unified View of cGANs with and without Classifiers</b></summary>  <p><b>编号</b>：[25]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01035</p>  <p><b>作者</b>：Si-An Chen,  Chun-Liang Li,  Hsuan-Tien Lin</p>  <p><b>备注</b>：Accepted by NeurIPS 2021</p>  <p><b>关键词</b>：explains several popular cgan variants, help eliminate samples generated, conditional generative adversarial networks, proposed framework outperforms state, one popular design</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Conditional Generative Adversarial Networks (cGANs) are implicit generativemodels which allow to sample from class-conditional distributions. ExistingcGANs are based on a wide range of different discriminator designs and trainingobjectives. One popular design in earlier works is to include a classifierduring training with the assumption that good classifiers can help eliminatesamples generated with wrong classes. Nevertheless, including classifiers incGANs often comes with a side effect of only generating easy-to-classifysamples. Recently, some representative cGANs avoid the shortcoming and reachstate-of-the-art performance without having classifiers. Somehow it remainsunanswered whether the classifiers can be resurrected to design better cGANs.In this work, we demonstrate that classifiers can be properly leveraged toimprove cGANs. We start by using the decomposition of the joint probabilitydistribution to connect the goals of cGANs and classification as a unifiedframework. The framework, along with a classic energy model to parameterizedistributions, justifies the use of classifiers for cGANs in a principledmanner. It explains several popular cGAN variants, such as ACGAN, ProjGAN, andContraGAN, as special cases with different levels of approximations, whichprovides a unified view and brings new insights to understanding cGANs.Experimental results demonstrate that the design inspired by the proposedframework outperforms state-of-the-art cGANs on multiple benchmark datasets,especially on the most challenging ImageNet. The code is available atthis https URL.</p>  </details></details><details>  <summary>13. <b>标题：Interpretable contrastive word mover's embedding</b></summary>  <p><b>编号</b>：[30]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01023</p>  <p><b>作者</b>：Ruijie Jiang,  Julia Gouvea,  Eric Miller,  David Hammer,  Shuchin Aeron</p>  <p><b>备注</b>：8 pages, 4 figures</p>  <p><b>关键词</b>：method improves significantly upon existing baselines, help ls researchers gain insights, develop natural language processing, several public datasets, clusters via identifying</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper shows that a popular approach to the supervised embedding ofdocuments for classification, namely, contrastive Word Mover's Embedding, canbe significantly enhanced by adding interpretability. This interpretability isachieved by incorporating a clustering promoting mechanism into the contrastiveloss. On several public datasets, we show that our method improvessignificantly upon existing baselines while providing interpretation to theclusters via identifying a set of keywords that are the most representative ofa particular class. Our approach was motivated in part by the need to developNatural Language Processing (NLP) methods for the \textit{novel problem ofassessing student work for scientific writing and thinking} - a problem that iscentral to the area of (educational) Learning Sciences (LS). In this context,we show that our approach leads to a meaningful assessment of the student workrelated to lab reports from a biology class and can help LS researchers gaininsights into student understanding and assess evidence of scientific thoughtprocesses.</p>  </details></details><details>  <summary>14. <b>标题：A variance principle explains why dropout finds flatter minima</b></summary>  <p><b>编号</b>：[31]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01022</p>  <p><b>作者</b>：Zhongwang Zhang,  Hanxu Zhou,  Zhi-Qin John Xu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：standard gradient descent training, dropout finds flatter minima, dropout finds flatter minima, flatter minimum compared, obtain good generalization</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Although dropout has achieved great success in deep learning, little is knownabout how it helps the training find a good generalization solution in thehigh-dimensional parameter space. In this work, we show that the training withdropout finds the neural network with a flatter minimum compared with standardgradient descent training. We further study the underlying mechanism of whydropout finds flatter minima through experiments. We propose a {\it VariancePrinciple} that the variance of a noise is larger at the sharper direction ofthe loss landscape. Existing works show that SGD satisfies the varianceprinciple, which leads the training to flatter minima. Our work show that thenoise induced by the dropout also satisfies the variance principle thatexplains why dropout finds flatter minima. In general, our work points out thatthe variance principle is an important similarity between dropout and SGD thatlead the training to find flatter minima and obtain good generalization.</p>  </details></details><details>  <summary>15. <b>标题：HyperPINN: Learning parameterized differential equations with  physics-informed hypernetworks</b></summary>  <p><b>编号</b>：[35]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01008</p>  <p><b>作者</b>：Filipe de Avila Belbute-Peres,  Yi-fan Chen,  Fei Sha</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：particular task requires solving, informed neural network models, generate neural networks, neural network solutions, requires either</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Many types of physics-informed neural network models have been proposed inrecent years as approaches for learning solutions to differential equations.When a particular task requires solving a differential equation at multipleparameterizations, this requires either re-training the model, or expanding itsrepresentation capacity to include the parameterization -- both solution thatincrease its computational cost. We propose the HyperPINN, which useshypernetworks to learn to generate neural networks that can solve adifferential equation from a given parameterization. We demonstrate withexperiments on both a PDE and an ODE that this type of model can lead to neuralnetwork solutions to differential equations that maintain a small size, evenwhen learning a family of solutions over a parameter space.</p>  </details></details><details>  <summary>16. <b>标题：Projected GANs Converge Faster</b></summary>  <p><b>编号</b>：[36]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01007</p>  <p><b>作者</b>：Axel Sauer,  Kashyap Chitta,  Jens Müller,  Andreas Geiger</p>  <p><b>备注</b>：To appear in NeurIPS 2021. Project Page: this https URL</p>  <p><b>关键词</b>：discriminator cannot fully exploit features, projected gan improves image quality, mixes features across channels, art fréchet inception distance, two benchmark datasets</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Generative Adversarial Networks (GANs) produce high-quality images but arechallenging to train. They need careful regularization, vast amounts ofcompute, and expensive hyper-parameter sweeps. We make significant headway onthese issues by projecting generated and real samples into a fixed, pretrainedfeature space. Motivated by the finding that the discriminator cannot fullyexploit features from deeper layers of the pretrained model, we propose a moreeffective strategy that mixes features across channels and resolutions. OurProjected GAN improves image quality, sample efficiency, and convergence speed.It is further compatible with resolutions of up to one Megapixel and advancesthe state-of-the-art Fréchet Inception Distance (FID) on twenty-two benchmarkdatasets. Importantly, Projected GANs match the previously lowest FIDs up to 40times faster, cutting the wall-clock time from 5 days to less than 3 hoursgiven the same computational resources.</p>  </details></details><details>  <summary>17. <b>标题：PDE-READ: Human-readable Partial Differential Equation Discovery using  Deep Learning</b></summary>  <p><b>编号</b>：[38]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00998</p>  <p><b>作者</b>：Robert Stephany,  Christopher Earls</p>  <p><b>备注</b>：32 pages, 14 figures</p>  <p><b>关键词</b>：uses two rational neural networks, principled sparse regression algorithm, free sparse regression algorithm, source library called pde, pde discovery shows promise</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>PDE discovery shows promise for uncovering predictive models for complexphysical systems but has difficulty when measurements are sparse and noisy. Weintroduce a new approach for PDE discovery that uses two Rational NeuralNetworks and a principled sparse regression algorithm to identify the hiddendynamics that govern a system's response. The first network learns the systemresponse function, while the second learns a hidden PDE which drives thesystem's evolution. We then use a parameter-free sparse regression algorithm toextract a human-readable form of the hidden PDE from the second network. Weimplement our approach in an open-source library called PDE-READ. Our approachsuccessfully identifies the Heat, Burgers, and Korteweg-De Vries equations withremarkable consistency. We demonstrate that our approach is unprecedentedlyrobust to both sparsity and noise and is, therefore, applicable to real-worldobservational data.</p>  </details></details><details>  <summary>18. <b>标题：Transfer Learning Approach to Bicycle-sharing Systems' Station Location  Planning using OpenStreetMap Data</b></summary>  <p><b>编号</b>：[41]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00990</p>  <p><b>作者</b>：Kamil Raczycki,  Piotr Szymański</p>  <p><b>备注</b>：Accepted to 4th ACM SIGSPATIAL International Workshop on Advances in Resilient and Intelligent Cities</p>  <p><b>关键词</b>：sharing stations usually requires expensive data gathering, uber h3 discrete global grid system, include citizens leaving public transport, different cities using transfer learning, bike sharing system quickly</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Bicycle-sharing systems (BSS) have become a daily reality for many citizensof larger, wealthier cities in developed regions. However, planning the layoutof bicycle-sharing stations usually requires expensive data gathering,surveying travel behavior and trip modelling followed by station layoutoptimization. Many smaller cities and towns, especially in developing areas,may have difficulty financing such projects. Planning a BSS also takes aconsiderable amount of time. Yet as the pandemic has shown us, municipalitieswill face the need to adapt rapidly to mobility shifts, which include citizensleaving public transport for bicycles. Laying out a bike sharing system quicklywill become critical in addressing the increase in bike demand. This paperaddresses the problem of cost and time in BSS layout design and proposes a newsolution to streamline and facilitate the process of such planning by usingspatial embedding methods. Based only on publicly available data fromOpenStreetMap, and station layouts from 34 cities in Europe, a method has beendeveloped to divide cities into micro-regions using the Uber H3 discrete globalgrid system and to indicate regions where it is worth placing a station basedon existing systems in different cities using transfer learning. The result ofthe work is a mechanism to support planners in their decision making whenplanning a station layout with a choice of reference cities.</p>  </details></details><details>  <summary>19. <b>标题：Partial-Adaptive Submodular Maximization</b></summary>  <p><b>编号</b>：[42]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00986</p>  <p><b>作者</b>：Shaojie Tang,  Jing Yuan</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：typical adaptive sequential decision making problem, e ., one must wait, monotone adaptive submodular maximization problem, adaptive submodular maximization focus, adaptive submodular maximization</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The goal of a typical adaptive sequential decision making problem is todesign an interactive policy that selects a group of items sequentially, basedon some partial observations, to maximize the expected utility. It has beenshown that the utility functions of many real-world applications, includingpooled-based active learning and adaptive influence maximization, satisfy theproperty of adaptive submodularity. However, most of existing studies onadaptive submodular maximization focus on the fully adaptive setting, i.e., onemust wait for the feedback from \emph{all} past selections before making thenext selection. Although this approach can take full advantage of feedback fromthe past to make informed decisions, it may take a longer time to complete theselection process as compared with the non-adaptive solution where allselections are made in advance before any observations take place. In thispaper, we explore the problem of partial-adaptive submodular maximization whereone is allowed to make multiple selections in a batch simultaneously andobserve their realizations together. Our approach enjoys the benefits ofadaptivity while reducing the time spent on waiting for the observations frompast selections. To the best of our knowledge, no results are known forpartial-adaptive policies for the non-monotone adaptive submodular maximizationproblem. We study this problem under both cardinality constraint and knapsackconstraints, and develop effective and efficient solutions for both cases. Wealso analyze the batch query complexity, i.e., the number of batches a policytakes to complete the selection process, of our policy under some additionalassumptions.</p>  </details></details><details>  <summary>20. <b>标题：Mixture Proportion Estimation and PU Learning: A Modern Approach</b></summary>  <p><b>编号</b>：[44]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00980</p>  <p><b>作者</b>：Saurabh Garg,  Yifan Wu,  Alex Smola,  Sivaraman Balakrishnan,  Zachary C. Lipton</p>  <p><b>备注</b>：Spotlight at NeurIPS 2021</p>  <p><b>关键词</b>：recently proposed heuristics lack theoretical coherence, ted )$^ n $, alternates, methods dominate previous approaches empirically, conditional value ignoring risk, propose two simple techniques</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Given only positive examples and unlabeled examples (from both positive andnegative classes), we might hope nevertheless to estimate an accuratepositive-versus-negative classifier. Formally, this task is broken down intotwo subtasks: (i) Mixture Proportion Estimation (MPE) -- determining thefraction of positive examples in the unlabeled data; and (ii) PU-learning --given such an estimate, learning the desired positive-versus-negativeclassifier. Unfortunately, classical methods for both problems break down inhigh-dimensional settings. Meanwhile, recently proposed heuristics lacktheoretical coherence and depend precariously on hyperparameter tuning. In thispaper, we propose two simple techniques: Best Bin Estimation (BBE) (for MPE);and Conditional Value Ignoring Risk (CVIR), a simple objective for PU-learning.Both methods dominate previous approaches empirically, and for BBE, weestablish formal guarantees that hold whenever we can train a model to cleanlyseparate out a small subset of positive examples. Our final algorithm(TED)$^n$, alternates between the two procedures, significantly improving bothour mixture proportion estimator and classifier</p>  </details></details><details>  <summary>21. <b>标题：Transductive Data Augmentation with Relational Path Rule Mining for  Knowledge Graph Embedding</b></summary>  <p><b>编号</b>：[48]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00974</p>  <p><b>作者</b>：Yushi Hirose,  Masashi Shimbo,  Taro Watanabe</p>  <p><b>备注</b>：8 pages, 0 figures, accepted by 2021 IEEE International Conference on Big Knowledge. The copyright of this paper has been transferred to the IEEE, please comply with the copyright of the IEEE</p>  <p><b>关键词</b>：proposed method effectively improves, propose transductive data augmentation, alternately augments training data, relation path rule induction, relation path rules</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>For knowledge graph completion, two major types of prediction models exist:one based on graph embeddings, and the other based on relation path ruleinduction. They have different advantages and disadvantages. To take advantageof both types, hybrid models have been proposed recently. One of the hybridmodels, UniKER, alternately augments training data by relation path rules andtrains an embedding model. Despite its high prediction accuracy, it does nottake full advantage of relation path rules, as it disregards low-confidencerules in order to maintain the quality of augmented data. To mitigate thislimitation, we propose transductive data augmentation by relation path rulesand confidence-based weighting of augmented data. The results and analysis showthat our proposed method effectively improves the performance of the embeddingmodel by augmenting data that include true answers or entities similar to them.</p>  </details></details><details>  <summary>22. <b>标题：Hex2vec -- Context-Aware Embedding H3 Hexagons with OpenStreetMap Tags</b></summary>  <p><b>编号</b>：[49]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00970</p>  <p><b>作者</b>：Szymon Woźniak,  Piotr Szymański</p>  <p><b>备注</b>：Accepted at 4th ACM SIGSPATIAL International Workshop on AI for Geographic Knowledge Discovery (GEOAI '21)</p>  <p><b>关键词</b>：quality inference using deep neural networks, resulting vector representations showcase semantic structures, satellite photos ), mobility data, past approaches however concentrated, learning vector representations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Representation learning of spatial and geographic data is a rapidlydeveloping field which allows for similarity detection between areas andhigh-quality inference using deep neural networks. Past approaches howeverconcentrated on embedding raster imagery (maps, street or satellite photos),mobility data or road networks. In this paper we propose the first approach tolearning vector representations of OpenStreetMap regions with respect to urbanfunctions and land-use in a micro-region grid. We identify a subset of OSM tagsrelated to major characteristics of land-use, building and urban regionfunctions, types of water, green or other natural areas. Through manualverification of tagging quality, we selected 36 cities were for training regionrepresentations. Uber's H3 index was used to divide the cities into hexagons,and OSM tags were aggregated for each hexagon. We propose the hex2vec methodbased on the Skip-gram model with negative sampling. The resulting vectorrepresentations showcase semantic structures of the map characteristics,similar to ones found in vector-based language models. We also present insightsfrom region similarity detection in six Polish cities and propose a regiontypology obtained through agglomerative clustering.</p>  </details></details><details>  <summary>23. <b>标题：VPFNet: Voxel-Pixel Fusion Network for Multi-class 3D Object Detection</b></summary>  <p><b>编号</b>：[52]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00966</p>  <p><b>作者</b>：Chia-Hung Wang,  Hsueh-Wei Chen,  Li-Chen Fu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：class 3d object detection task, class 3d object detection network, camera sensor data streams, dl )- embedded fusion, class object detection</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Many LiDAR-based methods for detecting large objects, single-class objectdetection, or under easy situations were claimed to perform quite well.However, their performances of detecting small objects or under hard situationsdid not surpass those of the fusion-based ones due to failure to leverage theimage semantics. In order to elevate the detection performance in a complicatedenvironment, this paper proposes a deep learning (DL)-embedded fusion-basedmulti-class 3D object detection network which admits both LiDAR and camerasensor data streams, named Voxel-Pixel Fusion Network (VPFNet). Inside thisnetwork, a key novel component is called Voxel-Pixel Fusion (VPF) layer, whichtakes advantage of the geometric relation of a voxel-pixel pair and fuses thevoxel features and the pixel features with proper mechanisms. Moreover, severalparameters are particularly designed to guide and enhance the fusion effectafter considering the characteristics of a voxel-pixel pair. Finally, theproposed method is evaluated on the KITTI benchmark for multi-class 3D objectdetection task under multilevel difficulty, and is shown to outperform allstate-of-the-art methods in mean average precision (mAP). It is also noteworthythat our approach here ranks the first on the KITTI leaderboard for thechallenging pedestrian class.</p>  </details></details><details>  <summary>24. <b>标题：iFlow: Numerically Invertible Flows for Efficient Lossless Compression  via a Uniform Coder</b></summary>  <p><b>编号</b>：[53]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00965</p>  <p><b>作者</b>：Shifeng Zhang,  Ning Kang,  Tom Ryder,  Zhenguo Li</p>  <p><b>备注</b>：Accepted for NeurIPS 2021 Spotlight</p>  <p><b>关键词</b>：neural compression garners little commercial interest due, discuss lossless compression using normalizing flows, first propose modular scale transform, numerically invertible flow transformations based, achieving efficient lossless compression</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>It was estimated that the world produced $59 ZB$ ($5.9 \times 10^{13} GB$) ofdata in 2020, resulting in the enormous costs of both data storage andtransmission. Fortunately, recent advances in deep generative models havespearheaded a new class of so-called "neural compression" algorithms, whichsignificantly outperform traditional codecs in terms of compression ratio.Unfortunately, the application of neural compression garners little commercialinterest due to its limited bandwidth; therefore, developing highly efficientframeworks is of critical practical importance. In this paper, we discusslossless compression using normalizing flows which have demonstrated a greatcapacity for achieving high compression ratios. As such, we introduce iFlow, anew method for achieving efficient lossless compression. We first proposeModular Scale Transform (MST) and a novel family of numerically invertible flowtransformations based on MST. Then we introduce the Uniform Base ConversionSystem (UBCS), a fast uniform-distribution codec incorporated into iFlow,enabling efficient compression. iFlow achieves state-of-the-art compressionratios and is $5\times$ quicker than other high-performance schemes.Furthermore, the techniques presented in this paper can be used to acceleratecoding time for a broad class of flow-based algorithms.</p>  </details></details><details>  <summary>25. <b>标题：Machine Learning aided Crop Yield Optimization</b></summary>  <p><b>编号</b>：[54]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00963</p>  <p><b>作者</b>：Chace Ashcraft,  Kiran Karra</p>  <p><b>备注</b>：4 pages, 2 figures</p>  <p><b>关键词</b>：optimize crop yield may help address upcoming global food demands due, apply modern deep reinforcement learning, help optimize crop yield, simultaneously minimizing constraining factors, crop simulation environment</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present a crop simulation environment with an OpenAI Gym interface, andapply modern deep reinforcement learning (DRL) algorithms to optimize yield. Weempirically show that DRL algorithms may be useful in discovering new policiesand approaches to help optimize crop yield, while simultaneously minimizingconstraining factors such as water and fertilizer usage. We propose that thishybrid plant modeling and data-driven approach for discovering new strategiesto optimize crop yield may help address upcoming global food demands due topopulation expansion and climate change.</p>  </details></details><details>  <summary>26. <b>标题：gtfs2vec -- Learning GTFS Embeddings for comparing Public Transport  Offer in Microregions</b></summary>  <p><b>编号</b>：[56]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00960</p>  <p><b>作者</b>：Piotr Gramacki,  Szymon Woźniak,  Piotr Szymański</p>  <p><b>备注</b>：Accepted at 4th ACM SIGSPATIAL International Workshop on AI for Geographic Knowledge Discovery GEOAI'21</p>  <p><b>关键词</b>：qualitatively describe public transport availability, similar public transport schedule characteristics, created certain features describing, associative deep neural network, selected 48 european cities</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We selected 48 European cities and gathered their public transport timetablesin the GTFS format. We utilized Uber's H3 spatial index to divide each cityinto hexagonal micro-regions. Based on the timetables data we created certainfeatures describing the quantity and variety of public transport availabilityin each region. Next, we trained an auto-associative deep neural network toembed each of the regions. Having such prepared representations, we then used ahierarchical clustering approach to identify similar regions. To do so, weutilized an agglomerative clustering algorithm with a euclidean distancebetween regions and Ward's method to minimize in-cluster variance. Finally, weanalyzed the obtained clusters at different levels to identify some number ofclusters that qualitatively describe public transport availability. We showedthat our typology matches the characteristics of analyzed cities and allowssuccesful searching for areas with similar public transport schedulecharacteristics.</p>  </details></details><details>  <summary>27. <b>标题：Robot Learning from Randomized Simulations: A Review</b></summary>  <p><b>编号</b>：[57]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00956</p>  <p><b>作者</b>：Fabio Muratore,  Fabio Ramos,  Greg Turk,  Wenhao Yu,  Michael Gienger,  Jan Peters</p>  <p><b>备注</b>：submitted to Frontiers in Robotics and AI</p>  <p><b>关键词</b>：facilitate learning robot control policies, despite becoming increasingly realistic, require large amounts, hence inevitably imperfect, art approaches learn</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The rise of deep learning has caused a paradigm shift in robotics research,favoring methods that require large amounts of data. It is prohibitivelyexpensive to generate such data sets on a physical platform. Therefore,state-of-the-art approaches learn in simulation where data generation is fastas well as inexpensive and subsequently transfer the knowledge to the realrobot (sim-to-real). Despite becoming increasingly realistic, all simulatorsare by construction based on models, hence inevitably imperfect. This raisesthe question of how simulators can be modified to facilitate learning robotcontrol policies and overcome the mismatch between simulation and reality,often called the 'reality gap'. We provide a comprehensive review ofsim-to-real research for robotics, focusing on a technique named 'domainrandomization' which is a method for learning from randomized simulations.</p>  </details></details><details>  <summary>28. <b>标题：Nested Multiple Instance Learning with Attention Mechanisms</b></summary>  <p><b>编号</b>：[59]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00947</p>  <p><b>作者</b>：Saul Fuster,  Trygve Eftestøl,  Kjersti Engan</p>  <p><b>备注</b>：Submitted to ICASSP 2022</p>  <p><b>关键词</b>：proposed model provides high accuracy performance, nested mil considers labelled bags within bags, method fits diverse applications, like finding relevant regions, classical image datasets show</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Multiple instance learning (MIL) is a type of weakly supervised learningwhere multiple instances of data with unknown labels are sorted into bags.Since knowledge about the individual instances is incomplete, labels areassigned to the bags containing the instances. While this method fits diverseapplications were labelled data is scarce, it lacks depth for solving morecomplex scenarios where associations between sets of instances have to be made,like finding relevant regions of interest in an image or detecting events in aset of time-series signals. Nested MIL considers labelled bags within bags,where only the outermost bag is labelled and inner-bags and instances arerepresented as latent labels. In addition, we propose using an attentionmechanism to add interpretability, providing awareness into the impact of eachinstance to the weak bag label. Experiments in classical image datasets showthat our proposed model provides high accuracy performance as well as spottingrelevant instances on image regions.</p>  </details></details><details>  <summary>29. <b>标题：Bounds all around: training energy-based models with bidirectional  bounds</b></summary>  <p><b>编号</b>：[67]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00929</p>  <p><b>作者</b>：Cong Geng,  Jia Wang,  Zhiyong Gao,  Jes Frellsen,  Søren Hauberg</p>  <p><b>备注</b>：This paper has been accepted by NeurIPS 2021</p>  <p><b>关键词</b>：developments significantly stabilize training, variational value function, thereby providing grounding, generative adversarial networks, best engineering practice</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Energy-based models (EBMs) provide an elegant framework for densityestimation, but they are notoriously difficult to train. Recent work hasestablished links to generative adversarial networks, where the EBM is trainedthrough a minimax game with a variational value function. We propose abidirectional bound on the EBM log-likelihood, such that we maximize a lowerbound and minimize an upper bound when solving the minimax game. We link onebound to a gradient penalty that stabilizes training, thereby providinggrounding for best engineering practice. To evaluate the bounds we develop anew and efficient estimator of the Jacobi-determinant of the EBM generator. Wedemonstrate that these developments significantly stabilize training and yieldhigh-quality density estimation and sample generation.</p>  </details></details><details>  <summary>30. <b>标题：Combining expert knowledge and neural networks to model environmental  stresses in agriculture</b></summary>  <p><b>编号</b>：[71]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00918</p>  <p><b>作者</b>：Kostadin Cvejoski,  Jannis Schuecker,  Anne-Katrin Mahlein,  Bogdan Georgiev</p>  <p><b>备注</b>：19 pages, Winners of the 2019 Syngenta Crop Challenge</p>  <p><b>关键词</b>：first design deterministic expert models, combine representation learning capabilities, model environmental heat, sensitivity analysis, resistant ones</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this work we combine representation learning capabilities of neuralnetwork with agricultural knowledge from experts to model environmental heatand drought stresses. We first design deterministic expert models which serveas a benchmark and inform the design of flexible neural-network architectures.Finally, a sensitivity analysis of the latter allows a clustering of hybridsinto susceptible and resistant ones.</p>  </details></details><details>  <summary>31. <b>标题：Adaptive Modeling Powers Fast Multi-parameter Fitting of CARS Spectra</b></summary>  <p><b>编号</b>：[72]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00917</p>  <p><b>作者</b>：Gregory J. Hunt,  Cody R. Ground,  Andrew D. Cutler</p>  <p><b>备注</b>：14 pages, 6 figures</p>  <p><b>关键词</b>：based measurement technique widely applied across many science, simultaneously recover multiple flow parameters, h_2 /$ air flame, recover multiple flow parameters, pump cars experiment probing</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Coherent anti-Stokes Raman Spectroscopy (CARS) is a laser-based measurementtechnique widely applied across many science and engineering disciplines toperform non-intrusive gas diagnostics. CARS is often used to study combustion,where the measured spectra can be used to simultaneously recover multiple flowparameters from the reacting gas such as temperature and relative species molefractions. This is typically done by using numerical optimization to find theflow parameters for which a theoretical model of the CARS spectra best matchesthe actual measurements. The most commonly used theoretical model is the CARSFTspectrum calculator. Unfortunately, this CARSFT spectrum generator iscomputationally expensive and using it to recover multiple flow parameters canbe prohibitively time-consuming, especially when experiments have hundreds orthousands of measurements distributed over time or space. To overcome theseissues, several methods have been developed to approximate CARSFT using alibrary of pre-computed theoretical spectra. In this work we present a newapproach that leverages ideas from the machine learning literature to build anadaptively smoothed kernel-based approximator. In application on a simulateddual-pump CARS experiment probing a $H_2/$air flame, we show that the approachcan use a small number library spectra to quickly and accurately recovertemperature and four gas species' mole fractions. The method's flexibilityallows fine-tuned navigation of the trade-off between speed and accuracy, andmakes the approach suitable for a wide range of problems and flow regimes.</p>  </details></details><details>  <summary>32. <b>标题：Multi-Attribute Balanced Sampling for Disentangled GAN Controls</b></summary>  <p><b>编号</b>：[74]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00909</p>  <p><b>作者</b>：Perla Doubinsky (CEDRIC - VERTIGO, CNAM),  Nicolas Audebert (CEDRIC - VERTIGO, CNAM),  Michel Crucianu (CEDRIC - VERTIGO, CNAM),  Hervé Le Borgne (LIST)</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：supervised approaches typically sample, extracting disentangled linear directions, occuring attributes thus balancing, two popular gan architectures, vary semantic attributes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Various controls over the generated data can be extracted from the latentspace of a pre-trained GAN, as it implicitly encodes the semantics of thetraining data. The discovered controls allow to vary semantic attributes in thegenerated images but usually lead to entangled edits that affect multipleattributes at the same time. Supervised approaches typically sample andannotate a collection of latent codes, then train classifiers in the latentspace to identify the controls. Since the data generated by GANs reflects thebiases of the original dataset, so do the resulting semantic controls. Wepropose to address disentanglement by subsampling the generated data to removeover-represented co-occuring attributes thus balancing the semantics of thedataset before training the classifiers. We demonstrate the effectiveness ofthis approach by extracting disentangled linear directions for facemanipulation on two popular GAN architectures, PGGAN and StyleGAN, and twodatasets, CelebAHQ and FFHQ. We show that this approach outperformsstate-of-the-art classifier-based methods while avoiding the need fordisentanglement-enforcing post-processing.</p>  </details></details><details>  <summary>33. <b>标题：Smart Fashion: A Review of AI Applications in the Fashion & Apparel  Industry</b></summary>  <p><b>编号</b>：[75]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00905</p>  <p><b>作者</b>：Seyed Omid Mohammadi,  Ahmad Kalhor (University of Tehran, College of Engineering, School of Electrical and Computer Engineering, Tehran, Iran)</p>  <p><b>备注</b>：99 Pages, 79 Figures, 24 Tables, Full length manuscript</p>  <p><b>关键词</b>：86 public fashion datasets accompanied, fashion research articles provides researchers, explicit research directions, 580 related articles, paper provides</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The fashion industry is on the verge of an unprecedented change. Theimplementation of machine learning, computer vision, and artificialintelligence (AI) in fashion applications is opening lots of new opportunitiesfor this industry. This paper provides a comprehensive survey on this matter,categorizing more than 580 related articles into 22 well-definedfashion-related tasks. Such structured task-based multi-label classification offashion research articles provides researchers with explicit researchdirections and facilitates their access to the related studies, improving thevisibility of studies simultaneously. For each task, a time chart is providedto analyze the progress through the years. Furthermore, we provide a list of 86public fashion datasets accompanied by a list of suggested applications andadditional information for each.</p>  </details></details><details>  <summary>34. <b>标题：Towards a theory of quantum gravity from neural networks</b></summary>  <p><b>编号</b>：[76]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00903</p>  <p><b>作者</b>：Vitaly Vanchurin</p>  <p><b>备注</b>：19 pages</p>  <p><b>关键词</b>：provide alternative macroscopic descriptions, two different types, stochastic entropy production, entropy destruction due, dynamical system described</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Neural network is a dynamical system described by two different types ofdegrees of freedom: fast-changing non-trainable variables (e.g. state ofneurons) and slow-changing trainable variables (e.g. weights and biases). Weshow that the non-equilibrium dynamics of trainable variables can be describedby the Madelung equations, if the number of neurons is fixed, and by theSchrodinger equation, if the learning system is capable of adjusting its ownparameters such as the number of neurons, step size and mini-batch size. Weargue that the Lorentz symmetries and curved space-time can emerge from theinterplay between stochastic entropy production and entropy destruction due tolearning. We show that the non-equilibrium dynamics of non-trainable variablescan be described by the geodesic equation (in the emergent space-time) forlocalized states of neurons, and by the Einstein equations (with cosmologicalconstant) for the entire network. We conclude that the quantum description oftrainable variables and the gravitational description of non-trainablevariables are dual in the sense that they provide alternative macroscopicdescriptions of the same learning system, defined microscopically as a neuralnetwork.</p>  </details></details><details>  <summary>35. <b>标题：Click-Based Student Performance Prediction: A Clustering Guided  Meta-Learning Approach</b></summary>  <p><b>编号</b>：[78]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00901</p>  <p><b>作者</b>：Yun-Wei Chu,  Elizabeth Tenorio,  Laura Cruz,  Kerrie Douglas,  Andrew S. Lan,  Christopher G. Brinton</p>  <p><b>备注</b>：10 pages, IEEE BigData 2021</p>  <p><b>关键词</b>：may lose important information embedded within, method obtains substantial improvements, clicking behavior via time, series learning architectures operating, predicting student knowledge acquisition</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We study the problem of predicting student knowledge acquisition in onlinecourses from clickstream behavior. Motivated by the proliferation of eLearninglecture delivery, we specifically focus on student in-video activity inlectures videos, which consist of content and in-video quizzes. Our methodologyfor predicting in-video quiz performance is based on three key ideas wedevelop. First, we model students' clicking behavior via time-series learningarchitectures operating on raw event data, rather than defining hand-craftedfeatures as in existing approaches that may lose important information embeddedwithin the click sequences. Second, we develop a self-supervised clickstreampre-training to learn informative representations of clickstream events thatcan initialize the prediction model effectively. Third, we propose a clusteringguided meta-learning-based training that optimizes the prediction model toexploit clusters of frequent patterns in student clickstream sequences. Throughexperiments on three real-world datasets, we demonstrate that our methodobtains substantial improvements over two baseline models in predictingstudents' in-video quiz performance. Further, we validate the importance of thepre-training and meta-learning components of our framework through ablationstudies. Finally, we show how our methodology reveals insights onvideo-watching behavior associated with knowledge acquisition for usefullearning analytics.</p>  </details></details><details>  <summary>36. <b>标题：Equivariant Contrastive Learning</b></summary>  <p><b>编号</b>：[80]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00899</p>  <p><b>作者</b>：Rumen Dangovski,  Li Jing,  Charlotte Loh,  Seungwook Han,  Akash Srivastava,  Brian Cheung,  Pulkit Agrawal,  Marin Soljačić</p>  <p><b>备注</b>：17 pages, 5 figures</p>  <p><b>关键词</b>：several popular computer vision benchmarks, training produces semantically good representations, applications beyond computer vision, broader class called equivariance, extend popular ssl methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In state-of-the-art self-supervised learning (SSL) pre-training producessemantically good representations by encouraging them to be invariant undermeaningful transformations prescribed from human knowledge. In fact, theproperty of invariance is a trivial instance of a broader class calledequivariance, which can be intuitively understood as the property thatrepresentations transform according to the way the inputs transform. Here, weshow that rather than using only invariance, pre-training that encouragesnon-trivial equivariance to some transformations, while maintaining invarianceto other transformations, can be used to improve the semantic quality ofrepresentations. Specifically, we extend popular SSL methods to a more generalframework which we name Equivariant Self-Supervised Learning (E-SSL). In E-SSL,a simple additional pre-training objective encourages equivariance bypredicting the transformations applied to the input. We demonstrate E-SSL'seffectiveness empirically on several popular computer vision benchmarks.Furthermore, we demonstrate usefulness of E-SSL for applications beyondcomputer vision; in particular, we show its utility on regression problems inphotonics science. We will release our code.</p>  </details></details><details>  <summary>37. <b>标题：Indiscriminate Poisoning Attacks Are Shortcuts</b></summary>  <p><b>编号</b>：[81]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00898</p>  <p><b>作者</b>：Da Yu,  Huishuai Zhang,  Wei Chen,  Jian Yin,  Tie-Yan Liu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：trained feature extractors would disable, deep learning heavily relies, indiscriminate data poisoning attacks, synthesize linear separable data, preventing unauthorized use</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Indiscriminate data poisoning attacks, which add imperceptible perturbationsto training data to maximize the test error of trained models, have become atrendy topic because they are thought to be capable of preventing unauthorizeduse of data. In this work, we investigate why these perturbations work inprinciple. We find that the perturbations of advanced poisoning attacks arealmost \textbf{linear separable} when assigned with the target labels of thecorresponding samples, which hence can work as \emph{shortcuts} for thelearning objective. This important population property has not been unveiledbefore. Moreover, we further verify that linear separability is indeed theworkhorse for poisoning attacks. We synthesize linear separable data asperturbations and show that such synthetic perturbations are as powerful as thedeliberately crafted attacks. Our finding suggests that the \emph{shortcutlearning} problem is more serious than previously believed as deep learningheavily relies on shortcuts even if they are of an imperceptible scale andmixed together with the normal features. This finding also suggests thatpre-trained feature extractors would disable these poisoning attackseffectively.</p>  </details></details><details>  <summary>38. <b>标题：Intervention Efficient Algorithm for Two-Stage Causal MDPs</b></summary>  <p><b>编号</b>：[84]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00886</p>  <p><b>作者</b>：Rahul Madhavan,  Aurghya Maiti,  Gaurav Sinha,  Siddharth Barman</p>  <p><b>备注</b>：29 pages</p>  <p><b>关键词</b>：study markov decision processes, instance dependent regret bound, utilizes convex optimization, regret minimization guarantees, current work develops</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We study Markov Decision Processes (MDP) wherein states correspond to causalgraphs that stochastically generate rewards. In this setup, the learner's goalis to identify atomic interventions that lead to high rewards by intervening onvariables at each state. Generalizing the recent causal-bandit framework, thecurrent work develops (simple) regret minimization guarantees for two-stagecausal MDPs, with parallel causal graph at each state. We propose an algorithmthat achieves an instance dependent regret bound. A key feature of ouralgorithm is that it utilizes convex optimization to address the explorationproblem. We identify classes of instances wherein our regret guarantee isessentially tight, and experimentally validate our theoretical results.</p>  </details></details><details>  <summary>39. <b>标题：Artificial Intelligence in the Low-Level Realm -- A Survey</b></summary>  <p><b>编号</b>：[87]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00881</p>  <p><b>作者</b>：Vahid Mohammadi Safarzadeh,  Hamed Ghasr Loghmani</p>  <p><b>备注</b>：7 pages</p>  <p><b>关键词</b>：traditional os kernel main tasks, practically related area concentrated, making ml computational aspects, specifically machine learning, aware machine learning</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Resource-aware machine learning has been a trending topic in recent years,focusing on making ML computational aspects more exploitable by the edgedevices in the Internet of Things. This paper attempts to review a conceptuallyand practically related area concentrated on efforts and challenges forapplying ML in the operating systems' main tasks in a low-resource environment.Artificial Intelligence has been integrated into the operating system withapplications such as voice or image recognition. However, this integration isonly in user space. Here, we seek methods and efforts that exploit AIapproaches, specifically machine learning, in the OSes' primaryresponsibilities. We provide the improvements that ML can bring to OS to makethem more trustworthy. In other words, the main question to be answered is howAI has played/can play a role directly in improving the traditional OS kernelmain tasks. Also, the challenges and limitations in the way of this combinationare provided.</p>  </details></details><details>  <summary>40. <b>标题：On the Expressivity of Markov Reward</b></summary>  <p><b>编号</b>：[89]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00876</p>  <p><b>作者</b>：David Abel,  Will Dabney,  Anna Harutyunyan,  Mark K. Ho,  Michael L. Littman,  Doina Precup,  Satinder Singh</p>  <p><b>备注</b>：Accepted to NeurIPS 2021</p>  <p><b>关键词</b>：study around three new abstract notions, main results prove, reward function exists, markov reward function, markov reward function</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Reward is the driving force for reinforcement-learning agents. This paper isdedicated to understanding the expressivity of reward as a way to capture tasksthat we would want an agent to perform. We frame this study around three newabstract notions of "task" that might be desirable: (1) a set of acceptablebehaviors, (2) a partial ordering over behaviors, or (3) a partial orderingover trajectories. Our main results prove that while reward can express many ofthese tasks, there exist instances of each task type that no Markov rewardfunction can capture. We then provide a set of polynomial-time algorithms thatconstruct a Markov reward function that allows an agent to optimize tasks ofeach of these three types, and correctly determine when no such reward functionexists. We conclude with an empirical study that corroborates and illustratesour theoretical findings.</p>  </details></details><details>  <summary>41. <b>标题：A moment-matching metric for latent variable generative models</b></summary>  <p><b>编号</b>：[90]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00875</p>  <p><b>作者</b>：Cédric Beaulac</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：facing unsupervised learning problems, evaluating latent variable models, latent variable models, discuss future work, gaussian mixture models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>It can be difficult to assess the quality of a fitted model when facingunsupervised learning problems. Latent variable models, such as variationautoencoders and Gaussian mixture models, are often trained withlikelihood-based approaches. In scope of Goodhart's law, when a metric becomesa target it ceases to be a good metric and therefore we should not uselikelihood to assess the quality of the fit of these models. The solution wepropose is a new metric for model comparison or regularization that relies onmoments. The concept is to study the difference between the data moments andthe model moments using a matrix norm, such as the Frobenius norm. We show howto use this new metric for model comparison and then for regularization. It iscommon to draw samples from the fitted distribution when evaluating latentvariable models and we show that our proposed metric is faster to compute andhas a smaller variance that this alternative. We conclude this article with aproof of concept of both applications and we discuss future work.</p>  </details></details><details>  <summary>42. <b>标题：An Uncertainty-Informed Framework for Trustworthy Fault Diagnosis in  Safety-Critical Applications</b></summary>  <p><b>编号</b>：[91]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00874</p>  <p><b>作者</b>：Taotao Zhou,  Enrique Lopez Droguett,  Ali Mosleh,  Felix T.S. Chan</p>  <p><b>备注</b>：49 pages</p>  <p><b>关键词</b>：thus potentially avoiding undesirable consequences, probabilistic bayesian convolutional neural network, end maintenance decision support systems, four common sensor faults, three ood datasets attributed</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>There has been a growing interest in deep learning-based prognostic andhealth management (PHM) for building end-to-end maintenance decision supportsystems, especially due to the rapid development of autonomous systems.However, the low trustworthiness of PHM hinders its applications insafety-critical assets when handling data from an unknown distribution thatdiffers from the training dataset, referred to as the out-of-distribution (OOD)dataset. To bridge this gap, we propose an uncertainty-informed framework todiagnose faults and meanwhile detect the OOD dataset, enabling the capabilityof learning unknowns and achieving trustworthy fault diagnosis. Particularly,we develop a probabilistic Bayesian convolutional neural network (CNN) toquantify both epistemic and aleatory uncertainties in fault diagnosis. Thefault diagnosis model flags the OOD dataset with large predictive uncertaintyfor expert intervention and is confident in providing predictions for the datawithin tolerable uncertainty. This results in trustworthy fault diagnosis andreduces the risk of erroneous decision-making, thus potentially avoidingundesirable consequences. The proposed framework is demonstrated by the faultdiagnosis of bearings with three OOD datasets attributed to random numbergeneration, an unknown fault mode, and four common sensor faults, respectively.The results show that the proposed framework is of particular advantage intackling unknowns and enhancing the trustworthiness of fault diagnosis insafety-critical applications.</p>  </details></details><details>  <summary>43. <b>标题：Probabilistic prediction of the heave motions of a semi-submersible by a  deep learning problem model</b></summary>  <p><b>编号</b>：[92]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00873</p>  <p><b>作者</b>：Xiaoxian Guo,  Xiantao Zhang,  Xinliang Tian,  Wenyue Lu,  Xin Li</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：provides useful early warning information, wide noise level range, floating offshore platform refers, training data could help, time motion prediction</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The real-time motion prediction of a floating offshore platform refers toforecasting its motions in the following one- or two-wave cycles, which helpsimprove the performance of a motion compensation system and provides usefulearly warning information. In this study, we extend a deep learning (DL) model,which could predict the heave and surge motions of a floating semi-submersible20 to 50 seconds ahead with good accuracy, to quantify its uncertainty of thepredictive time series with the help of the dropout technique. By repeating theinference several times, it is found that the collection of the predictive timeseries is a Gaussian process (GP). The DL model with dropout learned a kernelinside, and the learning procedure was similar to GP regression. Adding noiseinto training data could help the model to learn more robust features from thetraining data, thereby leading to a better performance on test data with a widenoise level range. This study extends the understanding of the DL model topredict the wave excited motions of an offshore platform.</p>  </details></details><details>  <summary>44. <b>标题：Statistical Consequences of Dueling Bandits</b></summary>  <p><b>编号</b>：[93]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00870</p>  <p><b>作者</b>：Nayan Saxena,  Pan Chen,  Emmy Liu</p>  <p><b>备注</b>：In Workshop on Reinforcement Learning for Education, 14th International Conference on Educational Data Mining , Paris, France, 2021</p>  <p><b>关键词</b>：dueling bandit algorithms perform well, comparing traditional uniform sampling, using dueling bandit algorithms, dueling bandit algorithm, run adaptive experiments</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Multi-Armed-Bandit frameworks have often been used by researchers to assesseducational interventions, however, recent work has shown that it is morebeneficial for a student to provide qualitative feedback through preferenceelicitation between different alternatives, making a dueling bandits frameworkmore appropriate. In this paper, we explore the statistical quality of dataunder this framework by comparing traditional uniform sampling to a duelingbandit algorithm and find that dueling bandit algorithms perform well atcumulative regret minimisation, but lead to inflated Type-I error rates andreduced power under certain circumstances. Through these results we provideinsight into the challenges and opportunities in using dueling banditalgorithms to run adaptive experiments.</p>  </details></details><details>  <summary>45. <b>标题：DetectorNet: Transformer-enhanced Spatial Temporal Graph Neural Network  for Traffic Prediction</b></summary>  <p><b>编号</b>：[94]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00869</p>  <p><b>作者</b>：He Li,  Shiyu Zhang,  Xuejiao Li,  Liangcai Su,  Hongjie Huang,  Duo Jin,  Linghao Chen,  Jianbing Huang,  Jaesoo Yoo</p>  <p><b>备注</b>：The 29th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems (ACM SIGSPATIAL 2021)</p>  <p><b>关键词</b>：eventually loses much valuable potential information, data presents unique challenges including, four ablation experiments proves, static road network structure, view temporal attention module</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Detectors with high coverage have direct and far-reaching benefits for roadusers in route planning and avoiding traffic congestion, but utilizing thesedata presents unique challenges including: the dynamic temporal correlation,and the dynamic spatial correlation caused by changes in road conditions.Although the existing work considers the significance of modeling withspatial-temporal correlation, what it has learned is still a static roadnetwork structure, which cannot reflect the dynamic changes of roads, andeventually loses much valuable potential information. To address thesechallenges, we propose DetectorNet enhanced by Transformer. Differs fromprevious studies, our model contains a Multi-view Temporal Attention module anda Dynamic Attention module, which focus on the long-distance and short-distancetemporal correlation, and dynamic spatial correlation by dynamically updatingthe learned knowledge respectively, so as to make accurate prediction. Inaddition, the experimental results on two public datasets and the comparisonresults of four ablation experiments proves that the performance of DetectorNetis better than the eleven advanced baselines.</p>  </details></details><details>  <summary>46. <b>标题：Surreal Decisions</b></summary>  <p><b>编号</b>：[98]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00862</p>  <p><b>作者</b>：Eddy Keming Chen,  Daniel Rubio</p>  <p><b>备注</b>：First published online: 05 June 2018</p>  <p><b>关键词</b>：surreal decision theory respects dominance reasoning even, pascalian decision problem depends, surreal numbers shall provide, pure pascalian strategy beats, although expected utility theory</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Although expected utility theory has proven a fruitful and elegant theory inthe finite realm, attempts to generalize it to infinite values have resulted inmany paradoxes. In this paper, we argue that the use of John Conway's surrealnumbers shall provide a firm mathematical foundation for transfinite decisiontheory. To that end, we prove a surreal representation theorem and show thatour surreal decision theory respects dominance reasoning even in the case ofinfinite values. We then bring our theory to bear on one of the more venerabledecision problems in the literature: Pascal's Wager. Analyzing the wagershowcases our theory's virtues and advantages. To that end, we analyze twoobjections against the wager: Mixed Strategies and Many Gods. After formulatingthe two objections in the framework of surreal utilities and probabilities, ourtheory correctly predicts that (1) the pure Pascalian strategy beats all mixedstrategies, and (2) what one should do in a Pascalian decision problem dependson what one's credence function is like. Our analysis therefore suggests thatalthough Pascal's Wager is mathematically coherent, it does not deliver what itpurports to, a rationally compelling argument that people should lead areligious life regardless of how confident they are in theism and itsalternatives.</p>  </details></details><details>  <summary>47. <b>标题：A Frequency Perspective of Adversarial Robustness</b></summary>  <p><b>编号</b>：[99]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00861</p>  <p><b>作者</b>：Shishira R Maiya,  Max Ehrlich,  Vatsal Agarwal,  Ser-Nam Lim,  Tom Goldstein,  Abhinav Shrivastava</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：provide new insights towards, commonly observed accuracy vs, analyze many intriguing properties, simply dataset dependent, despite recent advances</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Adversarial examples pose a unique challenge for deep learning systems.Despite recent advances in both attacks and defenses, there is still a lack ofclarity and consensus in the community about the true nature and underlyingproperties of adversarial examples. A deep understanding of these examples canprovide new insights towards the development of more effective attacks anddefenses. Driven by the common misconception that adversarial examples arehigh-frequency noise, we present a frequency-based understanding of adversarialexamples, supported by theoretical and empirical findings. Our analysis showsthat adversarial examples are neither in high-frequency nor in low-frequencycomponents, but are simply dataset dependent. Particularly, we highlight theglaring disparities between models trained on CIFAR-10 and ImageNet-deriveddatasets. Utilizing this framework, we analyze many intriguing properties oftraining robust models with frequency constraints, and propose afrequency-based explanation for the commonly observed accuracy vs. robustnesstrade-off.</p>  </details></details><details>  <summary>48. <b>标题：Large-Scale Deep Learning Optimizations: A Comprehensive Survey</b></summary>  <p><b>编号</b>：[101]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00856</p>  <p><b>作者</b>：Xiaoxin He,  Fuzhao Xue,  Xiaozhe Ren,  Yang You</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：models consistently yield better performance, generally spend longer training time, generalization gap arises, achieved promising results, scale deep learning</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep learning have achieved promising results on a wide spectrum of AIapplications. Larger datasets and models consistently yield better performance.However, we generally spend longer training time on more computation andcommunication. In this survey, we aim to provide a clear sketch about theoptimizations for large-scale deep learning with regard to the model accuracyand model efficiency. We investigate algorithms that are most commonly used foroptimizing, elaborate the debatable topic of generalization gap arises inlarge-batch training, and review the SOTA strategies in addressing thecommunication overhead and reducing the memory footprints.</p>  </details></details><details>  <summary>49. <b>标题：Back to Basics: Efficient Network Compression via IMP</b></summary>  <p><b>编号</b>：[103]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00843</p>  <p><b>作者</b>：Max Zimmer,  Christoph Spiegel,  Sebastian Pokutta</p>  <p><b>备注</b>：10 pages main text, 11 pages appendix, 4 tables, 12 figures</p>  <p><b>关键词</b>：realistic yet easily realisable baseline, effectively compressing deep neural networks, total training time actually required, properly determine optimal layer, global selection criterion fails</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Network pruning is a widely used technique for effectively compressing DeepNeural Networks with little to no degradation in performance during inference.Iterative Magnitude Pruning (IMP) is one of the most established approaches fornetwork pruning, consisting of several iterative training and pruning steps,where a significant amount of the network's performance is lost after pruningand then recovered in the subsequent retraining phase. While commonly used as abenchmark reference, it is often argued that a) it reaches suboptimal states bynot incorporating sparsification into the training phase, b) its globalselection criterion fails to properly determine optimal layer-wise pruningrates and c) its iterative nature makes it slow and non-competitive. In lightof recently proposed retraining techniques, we investigate these claims throughrigorous and consistent experiments where we compare IMP topruning-during-training algorithms, evaluate proposed modifications of itsselection criterion and study the number of iterations and total training timeactually required. We find that IMP with SLR for retraining can outperformstate-of-the-art pruning-during-training approaches without or with only littlecomputational overhead, that the global magnitude selection criterion islargely competitive with more complex approaches and that only few retrainingepochs are needed in practice to achieve most of the sparsity-vs.-performancetradeoff of IMP. Our goals are both to demonstrate that basic IMP can alreadyprovide state-of-the-art pruning results on par with or even outperforming morecomplex or heavily parameterized approaches and also to establish a morerealistic yet easily realisable baseline for future research.</p>  </details></details><details>  <summary>50. <b>标题：Statistical quantification of confounding bias in predictive modelling</b></summary>  <p><b>编号</b>：[111]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00814</p>  <p><b>作者</b>：Tamas Spisak</p>  <p><b>备注</b>：20 pages, 7 figures. The manuscript is associated with the the python package `mlconfound`: this https URL See manuscript repository, including fully reproducible analysis code, here: this https URL</p>  <p><b>关键词</b>：autism brain imaging data exchange dataset reveals confounders, clinically useful machine learning biomarkers, functional brain connectivity data, confounding bias significantly hampers, art confound mitigation approaches</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The lack of non-parametric statistical tests for confounding biassignificantly hampers the development of robust, valid and generalizablepredictive models in many fields of research. Here I propose the partial andfull confounder tests, which, for a given confounder variable, probe the nullhypotheses of unconfounded and fully confounded models, respectively. The testsprovide a strict control for Type I errors and high statistical power, even fornon-normally and non-linearly dependent predictions, often seen in machinelearning. Applying the proposed tests on models trained on functional brainconnectivity data from the Human Connectome Project and the Autism BrainImaging Data Exchange dataset reveals confounders that were previouslyunreported or found to be hard to correct for with state-of-the-art confoundmitigation approaches. The tests, implemented in the package mlconfound(this https URL), can aid the assessment and improvement ofthe generalizability and neurobiological validity of predictive models and,thereby, foster the development of clinically useful machine learningbiomarkers.</p>  </details></details><details>  <summary>51. <b>标题：Decentralized Cooperative Reinforcement Learning with Hierarchical  Information Structure</b></summary>  <p><b>编号</b>：[122]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00781</p>  <p><b>作者</b>：Hsu Kao,  Chen-Yu Wei,  Vijay Subramanian</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：existing methods often require high level, obtain $\ widetilde {\ mathcal, $\ widetilde {\ mathcal, hierarchical information structure arising, existing lower bound</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Multi-agent reinforcement learning (MARL) problems are challenging due toinformation asymmetry. To overcome this challenge, existing methods oftenrequire high level of coordination or communication between the agents. Weconsider two-agent multi-armed bandits (MABs) and Markov decision processes(MDPs) with a hierarchical information structure arising in applications, whichwe exploit to propose simpler and more efficient algorithms that require nocoordination or communication. In the structure, in each step the ``leader"chooses her action first, and then the ``follower" decides his action afterobserving the leader's action. The two agents observe the same reward (and thesame state transition in the MDP setting) that depends on their joint action.For the bandit setting, we propose a hierarchical bandit algorithm thatachieves a near-optimal gap-independent regret of$\widetilde{\mathcal{O}}(\sqrt{ABT})$ and a near-optimal gap-dependent regretof $\mathcal{O}(\log(T))$, where $A$ and $B$ are the numbers of actions of theleader and the follower, respectively, and $T$ is the number of steps. Wefurther extend to the case of multiple followers and the case with a deephierarchy, where we both obtain near-optimal regret bounds. For the MDPsetting, we obtain $\widetilde{\mathcal{O}}(\sqrt{H^7S^2ABT})$ regret, where$H$ is the number of steps per episode, $S$ is the number of states, $T$ is thenumber of episodes. This matches the existing lower bound in terms of $A, B$,and $T$.</p>  </details></details><details>  <summary>52. <b>标题：Pseudo-Spherical Contrastive Divergence</b></summary>  <p><b>编号</b>：[123]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00780</p>  <p><b>作者</b>：Lantao Yu,  Jiaming Song,  Yang Song,  Stefano Ermon</p>  <p><b>备注</b>：NeurIPS 2021</p>  <p><b>关键词</b>：train ebms without additional computational cost, strictly proper homogeneous scoring rules, commonly used image datasets demonstrate, typically trained via contrastive divergence, flexibly choose various learning objectives</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Energy-based models (EBMs) offer flexible distribution parametrization.However, due to the intractable partition function, they are typically trainedvia contrastive divergence for maximum likelihood estimation. In this paper, wepropose pseudo-spherical contrastive divergence (PS-CD) to generalize maximumlikelihood learning of EBMs. PS-CD is derived from the maximization of a familyof strictly proper homogeneous scoring rules, which avoids the computation ofthe intractable partition function and provides a generalized family oflearning objectives that include contrastive divergence as a special case.Moreover, PS-CD allows us to flexibly choose various learning objectives totrain EBMs without additional computational cost or variational minimaxoptimization. Theoretical analysis on the proposed method and extensiveexperiments on both synthetic data and commonly used image datasets demonstratethe effectiveness and modeling flexibility of PS-CD, as well as its robustnessto data contamination, thus showing its superiority over maximum likelihood and$f$-EBMs.</p>  </details></details><details>  <summary>53. <b>标题：Validate on Sim, Detect on Real -- Model Selection for Domain  Randomization</b></summary>  <p><b>编号</b>：[130]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00765</p>  <p><b>作者</b>：Gal Leibovich,  Guy Jacob,  Shadi Endrawis,  Gal Novik,  Aviv Tamar</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：policy ranking without requiring additional real world data, uses significantly less data compared, method achieves significantly better ranking, vsdr improves policy selection across, extensively evaluate different dr parameters</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>A practical approach to learning robot skills, often termed sim2real, is totrain control policies in simulation and then deploy them on a real robot.Popular techniques to improve the sim2real transfer build on domainrandomization (DR): Training the policy on a diverse set of randomly generateddomains with the hope of better generalization to the real world. Due to thelarge number of hyper-parameters in both the policy learning and DR algorithms,one often ends up with a large number of trained models, where choosing thebest model among them demands costly evaluation on the real robot. In this workwe ask: Can we rank the policies without running them in the real world? Ourmain idea is that a predefined set of real world data can be used to evaluateall policies, using out-of-distribution detection (OOD) techniques. In a sense,this approach can be seen as a "unit test" to evaluate policies before any realworld execution. However, we find that by itself, the OOD score can beinaccurate and very sensitive to the particular OOD method. Our maincontribution is a simple-yet-effective policy score that combines OOD with anevaluation in simulation. We show that our score - VSDR - can significantlyimprove the accuracy of policy ranking without requiring additional real worlddata. We evaluate the effectiveness of VSDR on sim2real transfer in a roboticgrasping task with image inputs. We extensively evaluate different DRparameters and OOD methods, and show that VSDR improves policy selection acrossthe board. More importantly, our method achieves significantly better ranking,and uses significantly less data compared to baselines.</p>  </details></details><details>  <summary>54. <b>标题：Single-Item Fashion Recommender: Towards Cross-Domain Recommendations</b></summary>  <p><b>编号</b>：[133]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00758</p>  <p><b>作者</b>：Seyed Omid Mohammadi,  Hossein Bodaghi,  Ahmad Kalhor (University of Tehran, College of Engineering, School of Electrical and Computer Engineering, Tehran, Iran)</p>  <p><b>备注</b>：16 Pages, 14 Figures, 2 Tables</p>  <p><b>关键词</b>：single fashion item shop image, recommendation tasks called objective, many challenges lie ahead, listing similar items available, based fashion recommender system</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Nowadays, recommender systems and search engines play an integral role infashion e-commerce. Still, many challenges lie ahead, and this study tries totackle some. This article first suggests a content-based fashion recommendersystem that uses a parallel neural network to take a single fashion item shopimage as input and make in-shop recommendations by listing similar itemsavailable in the store. Next, the same structure is enhanced to personalize theresults based on user preferences. This work then introduces a backgroundaugmentation technique that makes the system more robust to out-of-domainqueries, enabling it to make street-to-shop recommendations using only atraining set of catalog shop images. Moreover, the last contribution of thispaper is a new evaluation metric for recommendation tasks calledobjective-guided human score. This method is an entirely customizable frameworkthat produces interpretable, comparable scores from subjective evaluations ofhuman scorers.</p>  </details></details><details>  <summary>55. <b>标题：Towards the Generalization of Contrastive Self-Supervised Learning</b></summary>  <p><b>编号</b>：[138]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00743</p>  <p><b>作者</b>：Weiran Huang,  Mingyang Yi,  Xuyang Zhao</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：attracted great attention since, two canonical contrastive self, trained models generalize, requires unlabeled data, embeds input data</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recently, self-supervised learning has attracted great attention since itonly requires unlabeled data for training. Contrastive learning is a popularapproach for self-supervised learning and empirically performs well inpractice. However, the theoretical understanding of its generalization abilityon downstream tasks is not well studied. To this end, we present a theoreticalexplanation of how contrastive self-supervised pre-trained models generalize todownstream tasks. Concretely, we quantitatively show that the self-supervisedmodel has generalization ability on downstream classification tasks if itembeds input data into a feature space with distinguishing centers of classesand closely clustered intra-class samples. With the above conclusion, wefurther explore SimCLR and Barlow Twins, which are two canonical contrastiveself-supervised methods. We prove that the aforementioned feature space can beobtained via any of the methods, and thus explain their success on thegeneralization on downstream classification tasks. Finally, various experimentsare also conducted to verify our theoretical findings.</p>  </details></details><details>  <summary>56. <b>标题：Calibrating Explore-Exploit Trade-off for Fair Online Learning to Rank</b></summary>  <p><b>编号</b>：[140]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00735</p>  <p><b>作者</b>：Yiling Jia,  Hongning Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：g ., intentionally present selected results, existing fair ranking solutions usually require, items might receive differential treatments, offline supervised ranking model learning, existing fair ol2r solutions</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Online learning to rank (OL2R) has attracted great research interests inrecent years, thanks to its advantages in avoiding expensive relevance labelingas required in offline supervised ranking model learning. Such a solutionexplores the unknowns (e.g., intentionally present selected results on toppositions) to improve its relevance estimation. This however triggers concernson its ranking fairness: different groups of items might receive differentialtreatments during the course of OL2R. But existing fair ranking solutionsusually require the knowledge of result relevance or a performing rankerbeforehand, which contradicts with the setting of OL2R and thus cannot bedirectly applied to guarantee fairness.In this work, we propose a general framework to achieve fairness defined bygroup exposure in OL2R. The key idea is to calibrate exploration andexploitation for fairness control, relevance learning and online rankingquality. In particular, when the model is exploring a set of results forrelevance feedback, we confine the exploration within a subset of randompermutations, where fairness across groups is maintained while the feedback isstill unbiased. Theoretically we prove such a strategy introduces minimumdistortion in OL2R's regret to obtain fairness. Extensive empirical analysis isperformed on two public learning to rank benchmark datasets to demonstrate theeffectiveness of the proposed solution compared to existing fair OL2Rsolutions.</p>  </details></details><details>  <summary>57. <b>标题：Robust Deep Learning from Crowds with Belief Propagation</b></summary>  <p><b>编号</b>：[141]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00734</p>  <p><b>作者</b>：Hoyoung Kim,  Seunghyuk Cho,  Dongwoo Kim,  Jungseul Ok</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：em framework alternating variational inference, graphical model representing local dependencies, crowdsourcing systems enable us, based em algorithm, predictive model working</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Crowdsourcing systems enable us to collect noisy labels from crowd workers. Agraphical model representing local dependencies between workers and tasksprovides a principled way of reasoning over the true labels from the noisyanswers. However, one needs a predictive model working on unseen data directlyfrom crowdsourced datasets instead of the true labels in many cases. To infertrue labels and learn a predictive model simultaneously, we propose a newdata-generating process, where a neural network generates the true labels fromtask features. We devise an EM framework alternating variational inference anddeep learning to infer the true labels and to update the neural network,respectively. Experimental results with synthetic and real datasets show abelief-propagation-based EM algorithm is robust to i) corruption in taskfeatures, ii) multi-modal or mismatched worker prior, and iii) few spammerssubmitting noises to many tasks.</p>  </details></details><details>  <summary>58. <b>标题：Adaptive Multi-receptive Field Spatial-Temporal Graph Convolutional  Network for Traffic Forecasting</b></summary>  <p><b>编号</b>：[144]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00724</p>  <p><b>作者</b>：Xing Wang (1),  Juan Zhao (1),  Lin Zhu (1),  Xu Zhou (2),  Zhao Li (2),  Junlan Feng (1),  Chao Deng (1),  Yong Zhang (2) ((1) China Mobile Research Institute, Beijing, China, (2) Electronic Engineering, Beijing University of Posts and Telecommunications, Beijing, China)</p>  <p><b>备注</b>：To be published in IEEE GLOBECOM</p>  <p><b>关键词</b>：intrinsic features make mobile network traffic forecasting far, two different domains consistently show amf, novel deep learning network architecture, mobile network traffic forecasting, fully connected deep network</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Mobile network traffic forecasting is one of the key functions in dailynetwork operation. A commercial mobile network is large, heterogeneous, complexand dynamic. These intrinsic features make mobile network traffic forecastingfar from being solved even with recent advanced algorithms such as graphconvolutional network-based prediction approaches and various attentionmechanisms, which have been proved successful in vehicle traffic forecasting.In this paper, we cast the problem as a spatial-temporal sequence predictiontask. We propose a novel deep learning network architecture, AdaptiveMulti-receptive Field Spatial-Temporal Graph Convolutional Networks(AMF-STGCN), to model the traffic dynamics of mobile base stations. AMF-STGCNextends GCN by (1) jointly modeling the complex spatial-temporal dependenciesin mobile networks, (2) applying attention mechanisms to capture variousReceptive Fields of heterogeneous base stations, and (3) introducing an extradecoder based on a fully connected deep network to conquer the errorpropagation challenge with multi-step forecasting. Experiments on fourreal-world datasets from two different domains consistently show AMF-STGCNoutperforms the state-of-the-art methods.</p>  </details></details><details>  <summary>59. <b>标题：Edge-Level Explanations for Graph Neural Networks by Extending  Explainability Methods for Convolutional Neural Networks</b></summary>  <p><b>编号</b>：[145]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00722</p>  <p><b>作者</b>：Tetsu Kasanishi,  Xueting Wang,  Toshihiko Yamasaki</p>  <p><b>备注</b>：4 pages, accepted at 23rd IEEE International Symposium on Multimedia (ISM), short paper, 2021</p>  <p><b>关键词</b>：weighted class activation mapping, take graph data, graph neural networks, experimental results indicate, deep learning models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Graph Neural Networks (GNNs) are deep learning models that take graph data asinputs, and they are applied to various tasks such as traffic prediction andmolecular property prediction. However, owing to the complexity of the GNNs, ithas been difficult to analyze which parts of inputs affect the GNN model'soutputs. In this study, we extend explainability methods for ConvolutionalNeural Networks (CNNs), such as Local Interpretable Model-Agnostic Explanations(LIME), Gradient-Based Saliency Maps, and Gradient-Weighted Class ActivationMapping (Grad-CAM) to GNNs, and predict which edges in the input graphs areimportant for GNN decisions. The experimental results indicate that theLIME-based approach is the most efficient explainability method for multipletasks in the real-world situation, outperforming even the state-of-the-artmethod in GNN explainability.</p>  </details></details><details>  <summary>60. <b>标题：Communication-Compressed Adaptive Gradient Method for Distributed  Nonconvex Optimization</b></summary>  <p><b>编号</b>：[150]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00705</p>  <p><b>作者</b>：Yujia Wang,  Lu Lin,  Jinghui Chen</p>  <p><b>备注</b>：34 pages, 10 figures</p>  <p><b>关键词</b>：efficient distributed adaptive gradient method converges, proposed distributed learning framework features, efficient adaptive gradient methods, distributed nonconvex optimization problem, side model update design</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Due to the explosion in the size of the training datasets, distributedlearning has received growing interest in recent years. One of the majorbottlenecks is the large communication cost between the central server and thelocal workers. While error feedback compression has been proven to besuccessful in reducing communication costs with stochastic gradient descent(SGD), there are much fewer attempts in building communication-efficientadaptive gradient methods with provable guarantees, which are widely used intraining large-scale machine learning models. In this paper, we propose a newcommunication-compressed AMSGrad for distributed nonconvex optimizationproblem, which is provably efficient. Our proposed distributed learningframework features an effective gradient compression strategy and a worker-sidemodel update design. We prove that the proposed communication-efficientdistributed adaptive gradient method converges to the first-order stationarypoint with the same iteration complexity as uncompressed vanilla AMSGrad in thestochastic nonconvex optimization setting. Experiments on various benchmarksback up our theory.</p>  </details></details><details>  <summary>61. <b>标题：Comparative Study of Long Document Classification</b></summary>  <p><b>编号</b>：[153]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00702</p>  <p><b>作者</b>：Vedangi Wagh,  Snehal Khandve,  Isha Joshi,  Apurva Wani,  Geetanjali Kale,  Raviraj Joshi</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：revisit long document classification using standard machine learning approaches, six standard text classification datasets, even basic algorithms perform competitively, based models perform consistently well, different data sets thus making</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The amount of information stored in the form of documents on the internet hasbeen increasing rapidly. Thus it has become a necessity to organize andmaintain these documents in an optimum manner. Text classification algorithmsstudy the complex relationships between words in a text and try to interpretthe semantics of the document. These algorithms have evolved significantly inthe past few years. There has been a lot of progress from simple machinelearning algorithms to transformer-based architectures. However, existingliterature has analyzed different approaches on different data sets thus makingit difficult to compare the performance of machine learning algorithms. In thiswork, we revisit long document classification using standard machine learningapproaches. We benchmark approaches ranging from simple Naive Bayes to complexBERT on six standard text classification datasets. We present an exhaustivecomparison of different algorithms on a range of long document datasets. Were-iterate that long document classification is a simpler task and even basicalgorithms perform competitively with BERT-based approaches on most of thedatasets. The BERT-based models perform consistently well on all the datasetsand can be blindly used for the document classification task when thecomputations cost is not a concern. In the shallow model's category, we suggestthe usage of raw BiLSTM + Max architecture which performs decently across allthe datasets. Even simpler Glove + Attention bag of words model can be utilizedfor simpler use cases. The importance of using sophisticated models is clearlyvisible in the IMDB sentiment dataset which is a comparatively harder task.</p>  </details></details><details>  <summary>62. <b>标题：RMNet: Equivalently Removing Residual Connection from Networks</b></summary>  <p><b>编号</b>：[158]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00687</p>  <p><b>作者</b>：Fanxu Meng,  Hao Cheng,  Jiaxin Zhuang,  Ke Li,  Xing Sun</p>  <p><b>备注</b>：Equivalently removing residual connection from ResBlock with non-linear layer inside it, towards an efficient plain model</p>  <p><b>关键词</b>：rm operation allows input feature maps, designing dnns without residual connections, remove residual connections without changing, although residual connection enables training, high ratio network pruning</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Although residual connection enables training very deep neural networks, itis not friendly for online inference due to its multi-branch topology. Thisencourages many researchers to work on designing DNNs without residualconnections at inference. For example, RepVGG re-parameterizes multi-branchtopology to a VGG-like (single-branch) model when deploying, showing greatperformance when the network is relatively shallow. However, RepVGG can nottransform ResNet to VGG equivalently because re-parameterizing methods can onlybe applied to linear blocks and the non-linear layers (ReLU) have to be putoutside of the residual connection which results in limited representationability, especially for deeper networks. In this paper, we aim to remedy thisproblem and propose to remove the residual connection in a vanilla ResNetequivalently by a reserving and merging (RM) operation on ResBlock.Specifically, the RM operation allows input feature maps to pass through theblock while reserving their information and merges all the information at theend of each block, which can remove residual connections without changing theoriginal output. As a plug-in method, RM Operation basically has threeadvantages: 1) its implementation makes it naturally friendly for high rationetwork pruning. 2) it helps break the depth limitation of RepVGG. 3) it leadsto better accuracy-speed trade-off network (RMNet) compared to ResNet andRepVGG. We believe the ideology of RM Operation can inspire many insights onmodel design for the community in the future. Code is available at:this https URL.</p>  </details></details><details>  <summary>63. <b>标题：Graph Structural Attack by Spectral Distanc</b></summary>  <p><b>编号</b>：[159]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00684</p>  <p><b>作者</b>：Lu Lin,  Ethan Blaser,  Hongning Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experiments demonstrate remarkable effectiveness, disrupt graph spectral filters, effective graph structural attack, graph learning tasks, graph convolutional networks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Graph Convolutional Networks (GCNs) have fueled a surge of interest due totheir superior performance on graph learning tasks, but are also shownvulnerability to adversarial attacks. In this paper, an effective graphstructural attack is investigated to disrupt graph spectral filters in theFourier domain. We define the spectral distance based on the eigenvalues ofgraph Laplacian to measure the disruption of spectral filters. We then generateedge perturbations by simultaneously maximizing a task-specific attackobjective and the proposed spectral distance. The experiments demonstrateremarkable effectiveness of the proposed attack in the white-box setting atboth training and test time. Our qualitative analysis shows the connectionbetween the attack behavior and the imposed changes on the spectraldistribution, which provides empirical evidence that maximizing spectraldistance is an effective manner to change the structural property of graphs inthe spatial domain and perturb the frequency components in the Fourier domain.</p>  </details></details><details>  <summary>64. <b>标题：GCNear: A Hybrid Architecture for Efficient GCN Training with  Near-Memory Processing</b></summary>  <p><b>编号</b>：[160]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00680</p>  <p><b>作者</b>：Zhe Zhou,  Cong Li,  Xuechao Wei,  Guangyu Sun</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：complex training dataflow jointly increase, large graphs even requires hundreds, heterogeneous nature challenges current cpu, high aggregated local bandwidth, propose several optimization strategies</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recently, Graph Convolutional Networks (GCNs) have become state-of-the-artalgorithms for analyzing non-euclidean graph data. However, it is challengingto realize efficient GCN training, especially on large graphs. The reasons aremany-folded: 1) GCN training incurs a substantial memory footprint. Full-batchtraining on large graphs even requires hundreds to thousands of gigabytes ofmemory to buffer the intermediate data for back-propagation. 2) GCN traininginvolves both memory-intensive data reduction and computation-intensivefeatures/gradients update operations. Such a heterogeneous nature challengescurrent CPU/GPU platforms. 3) The irregularity of graphs and the complextraining dataflow jointly increase the difficulty of improving a GCN trainingsystem's efficiency.This paper presents GCNear, a hybrid architecture to tackle these challenges.Specifically, GCNear adopts a DIMM-based memory system to provide easy-to-scalememory capacity. To match the heterogeneous nature, we categorize GCN trainingoperations as memory-intensive Reduce and computation-intensive Updateoperations. We then offload Reduce operations to on-DIMM NMEs, making full useof the high aggregated local bandwidth. We adopt a CAE with sufficientcomputation capacity to process Update operations. We further propose severaloptimization strategies to deal with the irregularity of GCN tasks and improveGCNear's performance. We also propose a Multi-GCNear system to evaluate thescalability of GCNear.</p>  </details></details><details>  <summary>65. <b>标题：Latent Structures Mining with Contrastive Modality Fusion for Multimedia  Recommendation</b></summary>  <p><b>编号</b>：[161]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00678</p>  <p><b>作者</b>：Jinghao Zhang,  Yanqiao Zhu,  Qiang Liu,  Mengqi Zhang,  Shu Wu,  Liang Wang</p>  <p><b>备注</b>：12 pages; in submission to IEEE TKDE. arXiv admin note: substantial text overlap with arXiv:2104.09036</p>  <p><b>关键词</b>：multiple modalities might allow us, comprehensively discover candidate items, aware structure learning module, fully understand content information, existing collaborative filtering methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recent years have witnessed growing interests in multimedia recommendation,which aims to predict whether a user will interact with an item with multimodalcontents. Previous studies focus on modeling user-item interactions withmultimodal features included as side information. However, this scheme is notwell-designed for multimedia recommendation. Firstly, only collaborativeitem-item relationships are implicitly modeled through high-orderitem-user-item co-occurrences. We argue that the latent semantic item-itemstructures underlying these multimodal contents could be beneficial forlearning better item representations and assist the recommender models tocomprehensively discover candidate items. Secondly, previous studies disregardthe fine-grained multimodal fusion. Although having access to multiplemodalities might allow us to capture rich information, we argue that the simplecoarse-grained fusion by linear combination or concatenation in previous workis insufficient to fully understand content information and itemthis http URL this end, we propose a latent structure MIning withContRastive mOdality fusion method (MICRO for brevity). To be specific, wedevise a novel modality-aware structure learning module, which learns item-itemrelationships for each modality. Based on the learned modality-aware latentitem relationships, we perform graph convolutions that explicitly inject itemaffinities to modality-aware item representations. Then, we design a novelcontrastive method to fuse multimodal features. These enriched itemrepresentations can be plugged into existing collaborative filtering methods tomake more accurate recommendations. Extensive experiments on real-worlddatasets demonstrate the superiority of our method over state-of-the-artbaselines.</p>  </details></details><details>  <summary>66. <b>标题：RMNA: A Neighbor Aggregation-Based Knowledge Graph Representation  Learning Model Using Rule Mining</b></summary>  <p><b>编号</b>：[171]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00658</p>  <p><b>作者</b>：Ling Chen,  Jun Cui,  Xing Tang,  Chaodu Song,  Yuntao Qian,  Yansheng Li,  Yongjun Zhang</p>  <p><b>备注</b>：22 pages, 2 figures</p>  <p><b>关键词</b>：uses selected horn rules, art traditional representation learning, existing narl models either, narl model named rmna, models show competitive performance</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Although the state-of-the-art traditional representation learning (TRL)models show competitive performance on knowledge graph completion, there is noparameter sharing between the embeddings of entities, and the connectionsbetween entities are weak. Therefore, neighbor aggregation-based representationlearning (NARL) models are proposed, which encode the information in theneighbors of an entity into its embeddings. However, existing NARL modelseither only utilize one-hop neighbors, ignoring the information in multi-hopneighbors, or utilize multi-hop neighbors by hierarchical neighbor aggregation,destroying the completeness of multi-hop neighbors. In this paper, we propose aNARL model named RMNA, which obtains and filters horn rules through a rulemining algorithm, and uses selected horn rules to transform valuable multi-hopneighbors into one-hop neighbors, therefore, the information in valuablemulti-hop neighbors can be completely utilized by aggregating these one-hopneighbors. In experiments, we compare RMNA with the state-of-the-art TRL modelsand NARL models. The results show that RMNA has a competitive performance.</p>  </details></details><details>  <summary>67. <b>标题：Collage: Automated Integration of Deep Learning Backends</b></summary>  <p><b>编号</b>：[173]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00655</p>  <p><b>作者</b>：Byungsoo Jeon,  Sunghyun Park,  Peiyuan Liao,  Sheng Xu,  Tianqi Chen,  Zhihao Jia</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：collage automatically integrates multiple backends together without manual intervention, current dl frameworks require significant manual effort, two different nvidia gpus, outperforms existing frameworks, integrating dl backends</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Strong demands for efficient deployment of Deep Learning (DL) applicationsprompt the rapid development of a rich DL ecosystem. To keep up with its fastadvancement, it is crucial for DL frameworks to efficiently integrate a varietyof optimized libraries and runtimes as their backends and generate the fastestpossible executable by using them properly. However, current DL frameworksrequire significant manual effort to integrate diverse backends and often failto deliver high performance. In this paper, we propose Collage, an automaticframework for integrating DL backends. Collage provides a backend registrationinterface that allows users to precisely specify the capability of variousbackends. By leveraging the specifications of available backends, Collagesearches for an optimized backend placement for a given workload and executionenvironment. Our evaluation shows that Collage automatically integratesmultiple backends together without manual intervention, and outperformsexisting frameworks by 1.21x, 1.39x, 1.40x on two different NVIDIA GPUs and anIntel CPU respectively.</p>  </details></details><details>  <summary>68. <b>标题：To Talk or to Work: Delay Efficient Federated Learning over Mobile Edge  Devices</b></summary>  <p><b>编号</b>：[179]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00637</p>  <p><b>作者</b>：Pavana Prakash,  Jiahao Ding,  Maoqiang Wu,  Minglei Shu,  Rong Yu,  Miao Pan</p>  <p><b>备注</b>：Accepted for publication in Globecom'21</p>  <p><b>关键词</b>：unreliable network connections may obstruct, emerging distributed machine learning paradigm, create local model updates along, since mobile devices collaborate, mobile edge devices</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Federated learning (FL), an emerging distributed machine learning paradigm,in conflux with edge computing is a promising area with novel applications overmobile edge devices. In FL, since mobile devices collaborate to train a modelbased on their own data under the coordination of a central server by sharingjust the model updates, training data is maintained private. However, withoutthe central availability of data, computing nodes need to communicate the modelupdates often to attain convergence. Hence, the local computation time tocreate local model updates along with the time taken for transmitting them toand from the server result in a delay in the overall time. Furthermore,unreliable network connections may obstruct an efficient communication of theseupdates. To address these, in this paper, we propose a delay-efficient FLmechanism that reduces the overall time (consisting of both the computation andcommunication latencies) and communication rounds required for the model toconverge. Exploring the impact of various parameters contributing to delay, weseek to balance the trade-off between wireless communication (to talk) andlocal computation (to work). We formulate a relation with overall time as anoptimization problem and demonstrate the efficacy of our approach throughextensive simulations.</p>  </details></details><details>  <summary>69. <b>标题：Settling the Horizon-Dependence of Sample Complexity in Reinforcement  Learning</b></summary>  <p><b>编号</b>：[180]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00633</p>  <p><b>作者</b>：Yuanzhi Li,  Ruosong Wang,  Lin F. Yang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：1 )$- optimal policy using $\ mathrm, polylog }( h )$ episodes, polylog }( h )$ dependence, h $, previous work, horizon markov decision processes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recently there is a surge of interest in understanding the horizon-dependenceof the sample complexity in reinforcement learning (RL). Notably, for an RLenvironment with horizon length $H$, previous work have shown that there is aprobably approximately correct (PAC) algorithm that learns an $O(1)$-optimalpolicy using $\mathrm{polylog}(H)$ episodes of environment interactions whenthe number of states and actions is fixed. It is yet unknown whether the$\mathrm{polylog}(H)$ dependence is necessary or not. In this work, we resolvethis question by developing an algorithm that achieves the same PAC guaranteewhile using only $O(1)$ episodes of environment interactions, completelysettling the horizon-dependence of the sample complexity in RL. We achieve thisbound by (i) establishing a connection between value functions in discountedand finite-horizon Markov decision processes (MDPs) and (ii) a novelperturbation analysis in MDPs. We believe our new techniques are of independentinterest and could be applied in related questions in RL.</p>  </details></details><details>  <summary>70. <b>标题：Safe Learning of Linear Time-Invariant Systems</b></summary>  <p><b>编号</b>：[181]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00631</p>  <p><b>作者</b>：Farhad Farokhi,  Alex S. Leong,  Mohammad Zamani,  Iman Shames</p>  <p><b>备注</b>：Accepted in NeurIPS 2021 Workshop on Safe and Robust Control of Uncertain Systems</p>  <p><b>关键词</b>：provide rigorous confidence bounds, constrained optimization exists, time linear time, tightening becomes negligible, modify control inputs</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We consider safety in simultaneous learning and control of discrete-timelinear time-invariant systems. We provide rigorous confidence bounds on thelearned model of the system based on the number of utilized state measurements.These bounds are used to modify control inputs to the system via anoptimization problem with potentially time-varying safety constraints. We provethat the state can only exit the safe set with small probability, provided afeasible solution to the safety-constrained optimization exists. Thisoptimization problem is then reformulated in a more computationally-friendlyformat by tightening the safety constraints to account for model uncertaintyduring learning. The tightening decreases as the confidence in the learnedmodel improves. We finally prove that, under persistence of excitation, thetightening becomes negligible as more measurements are gathered.</p>  </details></details><details>  <summary>71. <b>标题：Distantly Supervised Semantic Text Detection and Recognition for  Broadcast Sports Videos Understanding</b></summary>  <p><b>编号</b>：[182]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00629</p>  <p><b>作者</b>：Avijit Shah,  Topojoy Biswas,  Sathish Ramadoss,  Deven Santosh Shah</p>  <p><b>备注</b>：9 pages, 7 figures and 6 tables. To be published in the proceedings of ACM Multimedia 21, Industrial Track, held from October 20-24 in China</p>  <p><b>关键词</b>：study extremely accurate semantic text detection, extract extremely accurate semantic text, video frames still remains one, automatically build sports clock datasets, novel distant supervision technique</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Comprehensive understanding of key players and actions in multiplayer sportsbroadcast videos is a challenging problem. Unlike in news or finance videos,sports videos have limited text. While both action recognition for multiplayersports and detection of players has seen robust research, understandingcontextual text in video frames still remains one of the most impactful avenuesof sports video understanding. In this work we study extremely accuratesemantic text detection and recognition in sports clocks, and challengestherein. We observe unique properties of sports clocks, which makes it hard toutilize general-purpose pre-trained detectors and recognizers, so that text canbe accurately understood to the degree of being used to align to externalknowledge. We propose a novel distant supervision technique to automaticallybuild sports clock datasets. Along with suitable data augmentations, combinedwith any state-of-the-art text detection and recognition model architectures,we extract extremely accurate semantic text. Finally, we share ourcomputational architecture pipeline to scale this system in industrial settingand proposed a robust dataset for the same to validate our results.</p>  </details></details><details>  <summary>72. <b>标题：Intrusion Detection using Spatial-Temporal features based on Riemannian  Manifold</b></summary>  <p><b>编号</b>：[183]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00626</p>  <p><b>作者</b>：Amardeep Singh,  Julian Jang-Jaccard</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：new novel feature extraction method based, often requires high computational cost, detecting malicious network traffic behavior, using hybrid classification techniques, detecting malicious network traffic</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Network traffic data is a combination of different data bytes packets underdifferent network protocols. These traffic packets have complex time-varyingnon-linear relationships. Existing state-of-the-art methods rise up to thischallenge by fusing features into multiple subsets based on correlations andusing hybrid classification techniques that extract spatial and temporalcharacteristics. This often requires high computational cost and manual supportthat limit them for real-time processing of network traffic. To address this,we propose a new novel feature extraction method based on covariance matricesthat extract spatial-temporal characteristics of network traffic data fordetecting malicious network traffic behavior. The covariance matrices in ourproposed method not just naturally encode the mutual relationships betweendifferent network traffic values but also have well-defined geometry that fallsin the Riemannian manifold. Riemannian manifold is embedded with distancemetrics that facilitate extracting discriminative features for detectingmalicious network traffic. We evaluated our model on NSL-KDD and UNSW-NB15datasets and showed our proposed method significantly outperforms theconventional method and other existing studies on the dataset.</p>  </details></details><details>  <summary>73. <b>标题：Deep Recursive Embedding for High-Dimensional Data</b></summary>  <p><b>编号</b>：[184]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00622</p>  <p><b>作者</b>：Zixia Zhou,  Xinrui Zu,  Yuanyuan Wang,  Boudewijn P.F. Lelieveldt,  Qian Tao</p>  <p><b>备注</b>：arXiv admin note: substantial text overlap with arXiv:2104.05171</p>  <p><b>关键词</b>：public datasets demonstrated improved embedding performance, combine deep neural networks, generic deep embedding network, distributed stochastic neighbor embedding, called deep recursive embedding</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Embedding high-dimensional data onto a low-dimensional manifold is of boththeoretical and practical value. In this paper, we propose to combine deepneural networks (DNN) with mathematics-guided embedding rules forhigh-dimensional data embedding. We introduce a generic deep embedding network(DEN) framework, which is able to learn a parametric mapping fromhigh-dimensional space to low-dimensional space, guided by well-establishedobjectives such as Kullback-Leibler (KL) divergence minimization. We furtherpropose a recursive strategy, called deep recursive embedding (DRE), to makeuse of the latent data representations for boosted embedding performance. Weexemplify the flexibility of DRE by different architectures and loss functions,and benchmarked our method against the two most popular embedding methods,namely, t-distributed stochastic neighbor embedding (t-SNE) and uniformmanifold approximation and projection (UMAP). The proposed DRE method can mapout-of-sample data and scale to extremely large datasets. Experiments on arange of public datasets demonstrated improved embedding performance in termsof local and global structure preservation, compared with otherstate-of-the-art embedding methods.</p>  </details></details><details>  <summary>74. <b>标题：PIE: Pseudo-Invertible Encoder</b></summary>  <p><b>编号</b>：[186]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00619</p>  <p><b>作者</b>：Jan Jetze Beitler,  Ivan Sosnovik,  Arnold Smeulders</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：evaluate gaussian pseudo invertible encoder, call pseudo invertible encoders, pseudo bijective architecture, model outperforms wae, introduce new class</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We consider the problem of information compression from high dimensionaldata. Where many studies consider the problem of compression by non-invertibletransformations, we emphasize the importance of invertible compression. Weintroduce new class of likelihood-based autoencoders with pseudo bijectivearchitecture, which we call Pseudo Invertible Encoders. We provide thetheoretical explanation of their principles. We evaluate Gaussian PseudoInvertible Encoder on MNIST, where our model outperforms WAE and VAE insharpness of the generated images.</p>  </details></details><details>  <summary>75. <b>标题：Towards Language Modelling in the Speech Domain Using Sub-word  Linguistic Units</b></summary>  <p><b>编号</b>：[189]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00610</p>  <p><b>作者</b>：Anurag Katakkar,  Alan W Black</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：traditional text language modelling metrics like perplexity, offers better acoustic consistency across utterances, traditional speech lms often depending, model closely approximates babbling speech, based generative speech lm</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Language models (LMs) for text data have been studied extensively for theirusefulness in language generation and other downstream tasks. However, languagemodelling purely in the speech domain is still a relatively unexplored topic,with traditional speech LMs often depending on auxiliary text LMs for learningdistributional aspects of the language. For the English language, these LMstreat words as atomic units, which presents inherent challenges to languagemodelling in the speech domain. In this paper, we propose a novel LSTM-basedgenerative speech LM that is inspired by the CBOW model and built on linguisticunits including syllables and phonemes. This offers better acoustic consistencyacross utterances in the dataset, as opposed to single melspectrogram frames,or whole words. With a limited dataset, orders of magnitude smaller than thatrequired by contemporary generative models, our model closely approximatesbabbling speech. We show the effect of training with auxiliary text LMs,multitask learning objectives, and auxiliary articulatory features. Through ourexperiments, we also highlight some well known, but poorly documentedchallenges in training generative speech LMs, including the mismatch betweenthe supervised learning objective with which these models are trained such asMean Squared Error (MSE), and the true objective, which is speech quality. Ourexperiments provide an early indication that while validation loss and MelCepstral Distortion (MCD) are not strongly correlated with generated speechquality, traditional text language modelling metrics like perplexity andnext-token-prediction accuracy might be.</p>  </details></details><details>  <summary>76. <b>标题：Explainable Artificial Intelligence for Smart City Application: A Secure  and Trusted Platform</b></summary>  <p><b>编号</b>：[196]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00601</p>  <p><b>作者</b>：M. Humayn Kabir,  Khondokar Fida Hasan,  Mohammad Kamrul Hasan,  Keyvan Ansari</p>  <p><b>备注</b>：Book_Chapter, Springer Nature</p>  <p><b>关键词</b>：g ., deep learning, applying different autonomous systems, protecting critical cyber infrastructure, major smart city solutions, seemingly unpredictable outputs</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Artificial Intelligence (AI) is one of the disruptive technologies that isshaping the future. It has growing applications for data-driven decisions inmajor smart city solutions, including transportation, education, healthcare,public governance, and power systems. At the same time, it is gainingpopularity in protecting critical cyber infrastructure from cyber threats,attacks, damages, or unauthorized access. However, one of the significantissues of those traditional AI technologies (e.g., deep learning) is that therapid progress in complexity and sophistication propelled and turned out to beuninterpretable black boxes. On many occasions, it is very challenging tounderstand the decision and bias to control and trust systems' unexpected orseemingly unpredictable outputs. It is acknowledged that the loss of controlover interpretability of decision-making becomes a critical issue for manydata-driven automated applications. But how may it affect the system's securityand trustworthiness? This chapter conducts a comprehensive study of machinelearning applications in cybersecurity to indicate the need for explainabilityto address this question. While doing that, this chapter first discusses theblack-box problems of AI technologies for Cybersecurity applications in smartcity-based solutions. Later, considering the new technological paradigm,Explainable Artificial Intelligence (XAI), this chapter discusses thetransition from black-box to white-box. This chapter also discusses thetransition requirements concerning the interpretability, transparency,understandability, and Explainability of AI-based technologies in applyingdifferent autonomous systems in smart cities. Finally, it has presented somecommercial XAI platforms that offer explainability over traditional AItechnologies before presenting future challenges and opportunities.</p>  </details></details><details>  <summary>77. <b>标题：Bayesian optimization of distributed neurodynamical controller models  for spatial navigation</b></summary>  <p><b>编号</b>：[198]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00599</p>  <p><b>作者</b>：Armin Hadzic,  Grace M. Hwang,  Kechen Zhang,  Kevin M. Schultz,  Joseph D. Monaco</p>  <p><b>备注</b>：29 pages, 10 figures</p>  <p><b>关键词</b>：generalized task performance across environments, operate within hippocampal place, demonstrated advances toward resilient, capture spatially distributed rewards, study conventional swarm models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Dynamical systems models for controlling multi-agent swarms have demonstratedadvances toward resilient, decentralized navigation algorithms. We previouslyintroduced the NeuroSwarms controller, in which agent-based interactions weremodeled by analogy to neuronal network interactions, including attractordynamics and phase synchrony, that have been theorized to operate withinhippocampal place-cell circuits in navigating rodents. This complexityprecludes linear analyses of stability, controllability, and performancetypically used to study conventional swarm models. Further, tuning dynamicalcontrollers by hand or grid search is often inadequate due to the complexity ofobjectives, dimensionality of model parameters, and computational costs ofsimulation-based sampling. Here, we present a framework for tuning dynamicalcontroller models of autonomous multi-agent systems based on BayesianOptimization (BayesOpt). Our approach utilizes a task-dependent objectivefunction to train Gaussian Processes (GPs) as surrogate models to achieveadaptive and efficient exploration of a dynamical controller model's parameterspace. We demonstrate this approach by studying an objective function selectingfor NeuroSwarms behaviors that cooperatively localize and capture spatiallydistributed rewards under time pressure. We generalized task performance acrossenvironments by combining scores for simulations in distinct geometries. Tovalidate search performance, we compared high-dimensional clustering for high-vs. low-likelihood parameter points by visualizing sample trajectories inUniform Manifold Approximation and Projection (UMAP) embeddings. Our findingsshow that adaptive, sample-efficient evaluation of the self-organizingbehavioral capacities of complex systems, including dynamical swarmcontrollers, can accelerate the translation of neuroscientific theory toapplied domains.</p>  </details></details><details>  <summary>78. <b>标题：Unsupervised Learning to Subphenotype Delirium Patients from Electronic  Health Records</b></summary>  <p><b>编号</b>：[201]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00592</p>  <p><b>作者</b>：Yiqing Zhao,  Yuan Luo</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：work could recalibrate existing delirium prediction models, detect delirium using medical information mart, common acute onset brain dysfunction, highly heterogeneous medical conditions, underlying medical condition</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Delirium is a common acute onset brain dysfunction in the emergency settingand is associated with higher mortality. It is difficult to detect and monitorsince its presentations and risk factors can be different depending on theunderlying medical condition of patients. In our study, we aimed to identifysubtypes within the delirium population and build subgroup-specific predictivemodels to detect delirium using Medical Information Mart for Intensive Care IV(MIMIC-IV) data. We showed that clusters exist within the delirium population.Differences in feature importance were also observed for subgroup-specificpredictive models. Our work could recalibrate existing delirium predictionmodels for each delirium subgroup and improve the precision of deliriumdetection and monitoring for ICU or emergency department patients who hadhighly heterogeneous medical conditions.</p>  </details></details><details>  <summary>79. <b>标题：A Tensor SVD-based Classification Algorithm Applied to fMRI Data</b></summary>  <p><b>编号</b>：[204]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00587</p>  <p><b>作者</b>：Katherine Keegan,  Tanvi Vishwanath,  Yihua Xu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：facilitate efficient multidimensional feature extraction, matrix singular value decomposition, best possible equivalent matrix, based classification algorithm using, vectorization causes us</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>To analyze the abundance of multidimensional data, tensor-based frameworkshave been developed. Traditionally, the matrix singular value decomposition(SVD) is used to extract the most dominant features from a matrix containingthe vectorized data. While the SVD is highly useful for data that can beappropriately represented as a matrix, this step of vectorization causes us tolose the high-dimensional relationships intrinsic to the data. To facilitateefficient multidimensional feature extraction, we utilize a projection-basedclassification algorithm using the t-SVDM, a tensor analog of the matrix SVD.Our work extends the t-SVDM framework and the classification algorithm, bothinitially proposed for tensors of order 3, to any number of dimensions. We thenapply this algorithm to a classification task using the StarPlus fMRI dataset.Our numerical experiments demonstrate that there exists a superior tensor-basedapproach to fMRI classification than the best possible equivalent matrix-basedapproach. Our results illustrate the advantages of our chosen tensor framework,provide insight into beneficial choices of parameters, and could be furtherdeveloped for classification of more complex imaging data. We provide ourPython implementation at this https URL.</p>  </details></details><details>  <summary>80. <b>标题：Text Classification for Task-based Source Code Related Questions</b></summary>  <p><b>编号</b>：[207]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00580</p>  <p><b>作者</b>：Sairamvinay Vijayaraghavan,  Jinxiao Song,  David Tomassi,  Siddhartha Punj,  Jailan Sabet</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：simple binary neural network classifier model, using hidden state context vectors, fold deep learning model, embeddings perform slightly better, hidden state layer</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>There is a key demand to automatically generate code for small tasks fordevelopers. Websites such as StackOverflow provide a simplistic way by offeringsolutions in small snippets which provide a complete answer to whatever taskquestion the developer wants to code. Natural Language Processing andparticularly Question-Answering Systems are very helpful in resolving andworking on these tasks. In this paper, we develop a two-fold deep learningmodel: Seq2Seq and a binary classifier that takes in the intent (which is innatural language) and code snippets in Python. We train both the intent and thecode utterances in the Seq2Seq model, where we decided to compare the effect ofthe hidden layer embedding from the encoder for representing the intent andsimilarly, using the decoder's hidden layer embeddings for the code sequence.Then we combine both these embeddings and then train a simple binary neuralnetwork classifier model for predicting if the intent is correctly answered bythe predicted code sequence from the seq2seq model. We find that the hiddenstate layer's embeddings perform slightly better than regular standardembeddings from a constructed vocabulary. We experimented with our tests on theCoNaLa dataset in addition to the StaQC database consisting of simple task-codesnippet-based pairs. We empirically establish that using additional pre-trainedembeddings for code snippets in Python is less context-based in comparison tousing hidden state context vectors from seq2seq models.</p>  </details></details><details>  <summary>81. <b>标题：Can we learn gradients by Hamiltonian Neural Networks?</b></summary>  <p><b>编号</b>：[211]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00565</p>  <p><b>作者</b>：Aleksandr Timofeev,  Andrei Afonin,  Yehao Liu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：simplest hamiltonian neural network, ode neural networks, classic optimization methods, automatic inductive bias, achieves comparable results</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this work, we propose a meta-learner based on ODE neural networks thatlearns gradients. This approach makes the optimizer is more flexible inducingan automatic inductive bias to the given task. Using the simplest HamiltonianNeural Network we demonstrate that our method outperforms a meta-learner basedon LSTM for an artificial task and the MNIST dataset with ReLU activations inthe optimizee. Furthermore, it also surpasses the classic optimization methodsfor the artificial task and achieves comparable results for MNIST.</p>  </details></details><details>  <summary>82. <b>标题：Revealing and Protecting Labels in Distributed Training</b></summary>  <p><b>编号</b>：[214]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00556</p>  <p><b>作者</b>：Trung Dang,  Om Thakkar,  Swaroop Ramaswamy,  Rajiv Mathews,  Peter Chin,  Françoise Beaufays</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：federated learning often involve transmission, model architectures across multiple domains, g ., resnet ),, existing reconstruction techniques improve, thereby avoiding transmission</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Distributed learning paradigms such as federated learning often involvetransmission of model updates, or gradients, over a network, thereby avoidingtransmission of private data. However, it is possible for sensitive informationabout the training data to be revealed from such gradients. Prior works havedemonstrated that labels can be revealed analytically from the last layer ofcertain models (e.g., ResNet), or they can be reconstructed jointly with modelinputs by using Gradients Matching [Zhu et al'19] with additional knowledgeabout the current state of the model. In this work, we propose a method todiscover the set of labels of training samples from only the gradient of thelast layer and the id to label mapping. Our method is applicable to a widevariety of model architectures across multiple domains. We demonstrate theeffectiveness of our method for model training in two domains - imageclassification, and automatic speech recognition. Furthermore, we show thatexisting reconstruction techniques improve their efficacy when used inconjunction with our method. Conversely, we demonstrate that gradientquantization and sparsification can significantly reduce the success of theattack.</p>  </details></details><details>  <summary>83. <b>标题：Quality Estimation Using Round-trip Translation with Sentence Embeddings</b></summary>  <p><b>编号</b>：[215]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00554</p>  <p><b>作者</b>：Nathan Crone,  Adam Power,  John Weldon</p>  <p><b>备注</b>：10 pages, 5 figures</p>  <p><b>关键词</b>：previous pitfalls found, many previous attempts, method makes use, language representation learning, trip translated sentences</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Estimating the quality of machine translation systems has been an ongoingchallenge for researchers in this field. Many previous attempts at usinground-trip translation as a measure of quality have failed, and there is muchdisagreement as to whether it can be a viable method of quality estimation. Inthis paper, we revisit round-trip translation, proposing a system which aims tosolve the previous pitfalls found with the approach. Our method makes use ofrecent advances in language representation learning to more accurately gaugethe similarity between the original and round-trip translated sentences.Experiments show that while our approach does not reach the performance ofcurrent state of the art methods, it may still be an effective approach forsome language pairs.</p>  </details></details><details>  <summary>84. <b>标题：Fast Global Convergence of Policy Optimization for Constrained MDPs</b></summary>  <p><b>编号</b>：[216]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00552</p>  <p><b>作者</b>：Tao Liu,  Ruida Zhou,  Dileep Kalathil,  P. R. Kumar,  Chao Tian</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：horizon constrained markov decision process framework, faster convergence rate $\ mathcal, }( 1 /\ sqrt, })$ global convergence rate, natural policy gradient</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We address the issue of safety in reinforcement learning. We pose the problemin a discounted infinite-horizon constrained Markov decision process framework.Existing results have shown that gradient-based methods are able to achieve an$\mathcal{O}(1/\sqrt{T})$ global convergence rate both for the optimality gapand the constraint violation. We exhibit a natural policy gradient-basedalgorithm that has a faster convergence rate $\mathcal{O}(\log(T)/T)$ for boththe optimality gap and the constraint violation. When Slater's condition issatisfied and known a priori, zero constraint violation can be furtherguaranteed for a sufficiently large $T$ while maintaining the same convergencerate.</p>  </details></details><details>  <summary>85. <b>标题：Learning Debiased and Disentangled Representations for Semantic  Segmentation</b></summary>  <p><b>编号</b>：[221]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00531</p>  <p><b>作者</b>：Sanghyeok Chu,  Dongwan Kim,  Bohyung Han</p>  <p><b>备注</b>：Accepted by NeurIPS 2021</p>  <p><b>关键词</b>：complex dense prediction problems including semantic segmentation, effectively reduce feature dependencies among classes, randomly eliminating certain class information, multiple semantic segmentation benchmarks, especially notable performance gains</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep neural networks are susceptible to learn biased models with entangledfeature representations, which may lead to subpar performances on variousdownstream tasks. This is particularly true for under-represented classes,where a lack of diversity in the data exacerbates the tendency. This limitationhas been addressed mostly in classification tasks, but there is little study onadditional challenges that may appear in more complex dense prediction problemsincluding semantic segmentation. To this end, we propose a model-agnostic andstochastic training scheme for semantic segmentation, which facilitates thelearning of debiased and disentangled representations. For each class, we firstextract class-specific information from the highly entangled feature map. Then,information related to a randomly sampled class is suppressed by a featureselection process in the feature space. By randomly eliminating certain classinformation in each training iteration, we effectively reduce featuredependencies among classes, and the model is able to learn more debiased anddisentangled feature representations. Models trained with our approachdemonstrate strong results on multiple semantic segmentation benchmarks, withespecially notable performance gains on under-represented classes.</p>  </details></details><details>  <summary>86. <b>标题：Classification of fetal compromise during labour: signal processing and  feature engineering of the cardiotocograph</b></summary>  <p><b>编号</b>：[224]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00517</p>  <p><b>作者</b>：M. O'Sullivan,  T. Gabruseva,  G. Boylan,  M. O'Riordan,  G. Lightbody,  W. Marnane</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：ctg requires dynamic pattern recognition, viable path towards objective, system control theory using, signal quality measure improved, arma features ranked amongst</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Cardiotocography (CTG) is the main tool used for fetal monitoring duringlabour. Interpretation of CTG requires dynamic pattern recognition in realtime. It is recognised as a difficult task with high inter- and intra-observerdisagreement. Machine learning has provided a viable path towards objective andreliable CTG assessment. In this study, novel CTG features are developed basedon clinical expertise and system control theory using an autoregressivemoving-average (ARMA) model to characterise the response of the fetal heartrate to contractions. The features are evaluated in a machine learning model toassess their efficacy in identifying fetal compromise. ARMA features rankedamongst the top features for detecting fetal compromise. Additionally,including clinical factors in the machine learning model and pruning data basedon a signal quality measure improved the performance of the classifier.</p>  </details></details><details>  <summary>87. <b>标题：Automated Hyperparameter Optimization Challenge at CIKM 2021 AnalyticCup</b></summary>  <p><b>编号</b>：[226]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00513</p>  <p><b>作者</b>：Huaijun Jiang,  Yu Shen,  Yang Li</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：competition organizers provide anonymized realistic industrial tasks, acm cikm 2021 analyticcup track 2 )., qq browser 2021 ai algorithm competiton, heuristic early stopping strategy, automated hyperparameter optimization challenge</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this paper, we describe our method for tackling the automatedhyperparameter optimization challenge in QQ Browser 2021 AI AlgorithmCompetiton (ACM CIKM 2021 AnalyticCup Track 2). The competition organizersprovide anonymized realistic industrial tasks and datasets for black-boxoptimization. Based on our open-sourced package OpenBox, we adopt the Bayesianoptimization framework for configuration sampling and a heuristic earlystopping strategy. We won first place in both the preliminary and finalcontests with the results of 0.938291 and 0.918753, respectively.</p>  </details></details><details>  <summary>88. <b>标题：Smart(Sampling)Augment: Optimal and Efficient Data Augmentation for  Semantic Segmentation</b></summary>  <p><b>编号</b>：[238]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00487</p>  <p><b>作者</b>：Misgana Negassi,  Diane Wagner,  Alexander Reiterer</p>  <p><b>备注</b>：Negassi and Wagner provided an equal contribution</p>  <p><b>关键词</b>：data augmentation methods enrich datasets, fixed augmentation strategy competes, automated data augmentation methods, smartaugment uses bayesian optimization, design choices behind smartaugment</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Data augmentation methods enrich datasets with augmented data to improve theperformance of neural networks. Recently, automated data augmentation methodshave emerged, which automatically design augmentation strategies. Existing workfocuses on image classification and object detection, whereas we provide thefirst study on semantic image segmentation and introduce two new approaches:\textit{SmartAugment} and \textit{SmartSamplingAugment}. SmartAugment usesBayesian Optimization to search over a rich space of augmentation strategiesand achieves a new state-of-the-art performance in all semantic segmentationtasks we consider. SmartSamplingAugment, a simple parameter-free approach witha fixed augmentation strategy competes in performance with the existingresource-intensive approaches and outperforms cheap state-of-the-art dataaugmentation methods. Further, we analyze the impact, interaction, andimportance of data augmentation hyperparameters and perform ablation studies,which confirm our design choices behind SmartAugment and SmartSamplingAugment.Lastly, we will provide our source code for reproducibility and to facilitatefurther research.</p>  </details></details><details>  <summary>89. <b>标题：Efficient, Anytime Algorithms for Calibration with Isotonic Regression  under Strictly Convex Losses</b></summary>  <p><b>编号</b>：[244]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00468</p>  <p><b>作者</b>：Kaan Gokcesu,  Hakan Gokcesu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：general strictly convex loss functions, traditional square error setting, specific loss settings, single staircase transform, optimal monotone transform</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We investigate the calibration of estimations to increase performance with anoptimal monotone transform on the estimator outputs. We start by studying thetraditional square error setting with its weighted variant and show that theoptimal monotone transform is in the form of a unique staircase function. Wefurther show that this staircase behavior is preserved for general strictlyconvex loss functions. Their optimal monotone transforms are also unique, i.e.,there exist a single staircase transform that achieves the minimum loss. Wepropose a linear time and space algorithm that can find such optimal transformsfor specific loss settings. Our algorithm has an online implementation wherethe optimal transform for the samples observed so far are found in linear spaceand amortized time when the samples arrive in an ordered fashion. We alsoextend our results to cases where the functions are not trivial to individuallyoptimize and propose an anytime algorithm, which has linear space andpseudo-linearithmic time complexity.</p>  </details></details><details>  <summary>90. <b>标题：DAdaQuant: Doubly-adaptive quantization for communication-efficient  Federated Learning</b></summary>  <p><b>编号</b>：[246]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00465</p>  <p><b>作者</b>：Robert Hönig,  Yiren Zhao,  Robert Mullins</p>  <p><b>备注</b>：10 pages, 5 figures, submitted to ICLR 2022</p>  <p><b>关键词</b>：dadaquant consistently improves client $\ rightarrow, boost compression without sacrificing model quality, fl incurs significant communication costs, efficiently compress fl communication, recently proposed algorithms quantize</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Federated Learning (FL) is a powerful technique for training a model on aserver with data from several clients in a privacy-preserving manner. In FL, aserver sends the model to every client, who then train the model locally andsend it back to the server. The server aggregates the updated models andrepeats the process for several rounds. FL incurs significant communicationcosts, in particular when transmitting the updated local models from theclients back to the server. Recently proposed algorithms quantize the modelparameters to efficiently compress FL communication. These algorithms typicallyhave a quantization level that controls the compression factor. We find thatdynamic adaptations of the quantization level can boost compression withoutsacrificing model quality. First, we introduce a time-adaptive quantizationalgorithm that increases the quantization level as training progresses. Second,we introduce a client-adaptive quantization algorithm that assigns eachindividual client the optimal quantization level at every round. Finally, wecombine both algorithms into DAdaQuant, the doubly-adaptive quantizationalgorithm. Our experiments show that DAdaQuant consistently improvesclient$\rightarrow$server compression, outperforming the strongest non-adaptivebaselines by up to $2.8\times$.</p>  </details></details><details>  <summary>91. <b>标题：FastCover: An Unsupervised Learning Framework for Multi-Hop Influence  Maximization in Social Networks</b></summary>  <p><b>编号</b>：[247]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00463</p>  <p><b>作者</b>：Runbo Ni,  Xueyan Li,  Fangqi Li,  Xiaofeng Gao,  Guihai Chen</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：many possible useful applications, diffusion process among neighbors, world social networks demonstrate, novel graph neural network, graph reversed attention network</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Finding influential users in social networks is a fundamental problem withmany possible useful applications. Viewing the social network as a graph, theinfluence of a set of users can be measured by the number of neighbors locatedwithin a given number of hops in the network, where each hop marks a step ofinfluence diffusion. In this paper, we reduce the problem of IM to abudget-constrained d-hop dominating set problem (kdDSP). We propose a unifiedmachine learning (ML) framework, FastCover, to solve kdDSP by learning anefficient greedy strategy in an unsupervised way. As one critical component ofthe framework, we devise a novel graph neural network (GNN) architecture, graphreversed attention network (GRAT), that captures the diffusion process amongneighbors. Unlike most heuristic algorithms and concurrent ML frameworks forcombinatorial optimization problems, FastCover determines the entire seed setfrom the nodes' scores computed with only one forward propagation of the GNNand has a time complexity quasi-linear in the graph size. Experiments onsynthetic graphs and real-world social networks demonstrate that FastCoverfinds solutions with better or comparable quality rendered by the concurrentalgorithms while achieving a speedup of over 1000x.</p>  </details></details><details>  <summary>92. <b>标题：Graph Neural Network based scheduling : Improved throughput under a  generalized interference model</b></summary>  <p><b>编号</b>：[249]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00459</p>  <p><b>作者</b>：S. Ramakrishnan,  Jaswanthi Mandalapu,  Subrahmanya Swamy Peruru,  Bhavesh Jain,  Eitan Altman</p>  <p><b>备注</b>：10 pages, Accepted at EAI VALUETOOLS 2021 - 14th EAI International Conference on Performance Evaluation Methodologies and Tools</p>  <p><b>关键词</b>：k $- tolerant conflict graph model, significantly ($ 4 $-$ 20, generalized interference model called, require labelled data set, extensive numerical experiments illustrate</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this work, we propose a Graph Convolutional Neural Networks (GCN) basedscheduling algorithm for adhoc networks. In particular, we consider ageneralized interference model called the $k$-tolerant conflict graph model anddesign an efficient approximation for the well-known Max-Weight schedulingalgorithm. A notable feature of this work is that the proposed method do notrequire labelled data set (NP-hard to compute) for training the neural network.Instead, we design a loss function that utilises the existing greedy approachesand trains a GCN that improves the performance of greedy approaches. Ourextensive numerical experiments illustrate that using our GCN approach, we cansignificantly ($4$-$20$ percent) improve the performance of the conventionalgreedy approach.</p>  </details></details><details>  <summary>93. <b>标题：Decentralized Multi-Agent Reinforcement Learning: An Off-Policy Method</b></summary>  <p><b>编号</b>：[254]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00438</p>  <p><b>作者</b>：Kuo Li,  Qing-Shan Jia</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：space markov decision process, agents make individual decisions, g ., q, data efficiency compared, higher accumulated reward</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We discuss the problem of decentralized multi-agent reinforcement learning(MARL) in this work. In our setting, the global state, action, and reward areassumed to be fully observable, while the local policy is protected as privacyby each agent, and thus cannot be shared with others. There is a communicationgraph, among which the agents can exchange information with their neighbors.The agents make individual decisions and cooperate to reach a higheraccumulated reward.Towards this end, we first propose a decentralized actor-critic (AC) setting.Then, the policy evaluation and policy improvement algorithms are designed fordiscrete and continuous state-action-space Markov Decision Process (MDP)respectively. Furthermore, convergence analysis is given under thediscrete-space case, which guarantees that the policy will be reinforced byalternating between the processes of policy evaluation and policy improvement.In order to validate the effectiveness of algorithms, we design experiments andcompare them with previous algorithms, e.g., Q-learning \cite{watkins1992q} andMADDPG \cite{lowe2017multi}. The results show that our algorithms performbetter from the aspects of both learning speed and final performance. Moreover,the algorithms can be executed in an off-policy manner, which greatly improvesthe data efficiency compared with on-policy algorithms.</p>  </details></details><details>  <summary>94. <b>标题：An Actor-Critic Method for Simulation-Based Optimization</b></summary>  <p><b>编号</b>：[256]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00435</p>  <p><b>作者</b>：Kuo Li,  Qing-Shan Jia,  Jiaqi Yan</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：e ., adversarial attack task, existing works commonly optimize, internal processing rule cannot, including two toy examples, based optimization problem</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We focus on a simulation-based optimization problem of choosing the bestdesign from the feasible space. Although the simulation model can be queriedwith finite samples, its internal processing rule cannot be utilized in theoptimization process. We formulate the sampling process as a policy searchingproblem and give a solution from the perspective of Reinforcement Learning(RL). Concretely, Actor-Critic (AC) framework is applied, where the Actorserves as a surrogate model to predict the performance on unknown designs,whereas the actor encodes the sampling policy to be optimized. We design theupdating rule and propose two algorithms for the cases where the feasiblespaces are continuous and discrete respectively. Some experiments are designedto validate the effectiveness of proposed algorithms, including two toyexamples, which intuitively explain the algorithms, and two more complex tasks,i.e., adversarial attack task and RL task, which validate the effectiveness inlarge-scale problems. The results show that the proposed algorithms cansuccessfully deal with these problems. Especially note that in the RL task, ourmethods give a new perspective to robot control by treating the task as asimulation model and solving it by optimizing the policy generating process,while existing works commonly optimize the policy itself directly.</p>  </details></details><details>  <summary>95. <b>标题：Efficient passive membership inference attack in federated learning</b></summary>  <p><b>编号</b>：[258]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00430</p>  <p><b>作者</b>：Oualid Zari,  Chuan Xu,  Giovanni Neglia</p>  <p><b>备注</b>：Accepted as a poster in NeurIPS 2021 PriML workshop</p>  <p><b>关键词</b>：requires much less computation power, global machine learning model, passive membership inference attack, new passive inference attack, magnitude less memory space</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In cross-device federated learning (FL) setting, clients such as mobilescooperate with the server to train a global machine learning model, whilemaintaining their data locally. However, recent work shows that client'sprivate information can still be disclosed to an adversary who just eavesdropsthe messages exchanged between the client and the server. For example, theadversary can infer whether the client owns a specific data instance, which iscalled a passive membership inference attack. In this paper, we propose a newpassive inference attack that requires much less computation power and memorythan existing methods. Our empirical results show that our attack achieves ahigher accuracy on CIFAR100 dataset (more than $4$ percentage points) withthree orders of magnitude less memory space and five orders of magnitude lesscalculations.</p>  </details></details><details>  <summary>96. <b>标题：Using Google Trends as a proxy for occupant behavior to predict building  energy consumption</b></summary>  <p><b>编号</b>：[260]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00426</p>  <p><b>作者</b>：Chun Fu,  Clayton Miller</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：ashrae great energy predictor iii, highly correlated google trends data, top five winning teams, advanced machine learning algorithms, building energy prediction research</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In recent years, the availability of larger amounts of energy data andadvanced machine learning algorithms has created a surge in building energyprediction research. However, one of the variables in energy prediction models,occupant behavior, is crucial for prediction performance but hard-to-measure ortime-consuming to collect from each building. This study proposes an approachthat utilizes the search volume of topics (e.g., education} or Microsoft Excel)on the Google Trends platform as a proxy of occupant behavior and use ofbuildings. Linear correlations were first examined to explore the relationshipbetween energy meter data and Google Trends search terms to infer buildingoccupancy. Prediction errors before and after the inclusion of the trends ofthese terms were compared and analyzed based on the ASHRAE Great EnergyPredictor III (GEPIII) competition dataset. The results show that highlycorrelated Google Trends data can effectively reduce the overall RMSLE errorfor a subset of the buildings to the level of the GEPIII competition's top fivewinning teams' performance. In particular, the RMSLE error reduction duringpublic holidays and days with site-specific schedules are respectively reducedby 20-30% and 2-5%. These results show the potential of using Google Trends toimprove energy prediction for a portion of the building stock by automaticallyidentifying site-specific and holiday schedules.</p>  </details></details><details>  <summary>97. <b>标题：Deep Learning in Human Activity Recognition with Wearable Sensors: A  Review on Advances</b></summary>  <p><b>编号</b>：[264]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00418</p>  <p><b>作者</b>：Shibo Zhang,  Yaxuan Li,  Shen Zhang,  Farzad Shahabi,  Stephen Xia,  Yu Deng,  Nabil Alshurafa</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：deep learning -- based har, introduces deep learning methods, perform human activity recognition, including activity tracking, summarizes existing work</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Mobile and wearable devices have enabled numerous applications, includingactivity tracking, wellness monitoring, and human-computer interaction, thatmeasure and improve our daily lives. Many of these applications are madepossible by leveraging the rich collection of low-power sensors found in manymobile and wearable devices to perform human activity recognition (HAR).Recently, deep learning has greatly pushed the boundaries of HAR on mobile andwearable devices. This paper systematically categorizes and summarizes existingwork that introduces deep learning methods for wearables-based HAR and providesa comprehensive analysis of the current advancements, developing trends, andmajor challenges. We also present cutting-edge frontiers and future directionsfor deep learning--based HAR.</p>  </details></details><details>  <summary>98. <b>标题：Safe Adaptive Learning-based Control for Constrained Linear Quadratic  Regulators with Regret Guarantees</b></summary>  <p><b>编号</b>：[267]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00411</p>  <p><b>作者</b>：Yingying Li,  Subhro Das,  Jeff Shamma,  Na Li</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：quadratic cost function subject, (\ cdot )$ absorbs, optimal safe linear controller, unknown linear system, require system restarts</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We study the adaptive control of an unknown linear system with a quadraticcost function subject to safety constraints on both the states and actions. Thechallenges of this problem arise from the tension among safety, exploration,performance, and computation. To address these challenges, we propose apolynomial-time algorithm that guarantees feasibility and constraintsatisfaction with high probability under proper conditions. Our algorithm isimplemented on a single trajectory and does not require system restarts.Further, we analyze the regret of our learning algorithm compared to theoptimal safe linear controller with known model information. The proposedalgorithm can achieve a $\tilde O(T^{2/3})$ regret, where $T$ is the number ofstages and $\tilde O(\cdot)$ absorbs some logarithmic terms of $T$.</p>  </details></details><details>  <summary>99. <b>标题：Efficiently Modeling Long Sequences with Structured State Spaces</b></summary>  <p><b>编号</b>：[276]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00396</p>  <p><b>作者</b>：Albert Gu,  Karan Goel,  Christopher Ré</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：s4 achieves strong empirical results across, promising recent approach proposed modeling sequences, although conventional models including rnns, technique involves conditioning \(, address sequence data across</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>A central goal of sequence modeling is designing a single principled modelthat can address sequence data across a range of modalities and tasks,particularly on long-range dependencies. Although conventional models includingRNNs, CNNs, and Transformers have specialized variants for capturing longdependencies, they still struggle to scale to very long sequences of $10000$ ormore steps. A promising recent approach proposed modeling sequences bysimulating the fundamental state space model (SSM) \( x'(t) = Ax(t) + Bu(t),y(t) = Cx(t) + Du(t) \), and showed that for appropriate choices of the statematrix \( A \), this system could handle long-range dependencies mathematicallyand empirically. However, this method has prohibitive computation and memoryrequirements, rendering it infeasible as a general sequence modeling solution.We propose the Structured State Space (S4) sequence model based on a newparameterization for the SSM, and show that it can be computed much moreefficiently than prior approaches while preserving their theoretical strengths.Our technique involves conditioning \( A \) with a low-rank correction,allowing it to be diagonalized stably and reducing the SSM to the well-studiedcomputation of a Cauchy kernel. S4 achieves strong empirical results across adiverse range of established benchmarks, including (i) 91\% accuracy onsequential CIFAR-10 with no data augmentation or auxiliary losses, on par witha larger 2-D ResNet, (ii) substantially closing the gap to Transformers onimage and language modeling tasks, while performing generation $60\times$faster (iii) SoTA on every task from the Long Range Arena benchmark, includingsolving the challenging Path-X task of length 16k that all prior work fails on,while being as efficient as all competitors.</p>  </details></details><details>  <summary>100. <b>标题：EfficientWord-Net: An Open Source Hotword Detection Engine based on  One-shot Learning</b></summary>  <p><b>编号</b>：[280]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00379</p>  <p><b>作者</b>：Chidhambararajan R,  Aman Rangaur,  Sibi Chakkaravarthy Sethuraman</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：existing systems requires enormous amounts, special phrases also known, voice assistants like siri, time engines whose purpose, hotword detection engine based</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Voice assistants like Siri, Google Assistant, Alexa etc. are used widelyacross the globe for home automation, these require the use of special phrasesalso known as hotwords to wake it up and perform an action like "Hey Alexa!","Ok Google!" and "Hey Siri!" etc. These hotwords are detected with lightweightreal-time engines whose purpose is to detect the hotwords uttered by the user.This paper presents the design and implementation of a hotword detection enginebased on one-shot learning which detects the hotword uttered by the user inreal-time with just one or few training samples of the hotword. This approachis efficient when compared to existing implementations because the process ofadding a new hotword in the existing systems requires enormous amounts ofpositive and negative training samples and the model needs to retrain for everyhotword. This makes the existing implementations inefficient in terms ofcomputation and cost. The architecture proposed in this paper has achieved anaccuracy of 94.51%.</p>  </details></details><details>  <summary>101. <b>标题：Sustainable AI: Environmental Implications, Challenges and Opportunities</b></summary>  <p><b>编号</b>：[283]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00364</p>  <p><b>作者</b>：Carole-Jean Wu,  Ramya Raghavendra,  Udit Gupta,  Bilge Acun,  Newsha Ardalani,  Kiwan Maeng,  Gloria Chang,  Fiona Aga Behram,  James Huang,  Charles Bai,  Michael Gschwind,  Anurag Gupta,  Myle Ott,  Anastasia Melnikov,  Salvatore Candido,  David Brooks,  Geeta Chauhan,  Benjamin Lee,  Hsien-Hsin S. Lee,  Bugra Akyildiz,  Maximilian Balandat,  Joe Spisak,  Ravi Jain,  Mike Rabbat,  Kim Hazelwood</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：scale machine learning use cases, model development cycle across industry, important development directions across, linear growth trends, overall carbon footprint</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper explores the environmental impact of the super-linear growthtrends for AI from a holistic perspective, spanning Data, Algorithms, andSystem Hardware. We characterize the carbon footprint of AI computing byexamining the model development cycle across industry-scale machine learninguse cases and, at the same time, considering the life cycle of system hardware.Taking a step further, we capture the operational and manufacturing carbonfootprint of AI computing and present an end-to-end analysis for what and howhardware-software design and at-scale optimization can help reduce the overallcarbon footprint of AI. Based on the industry experience and lessons learned,we share the key challenges and chart out important development directionsacross the many dimensions of AI. We hope the key messages and insightspresented in this paper can inspire the community to advance the field of AI inan environmentally-responsible manner.</p>  </details></details><details>  <summary>102. <b>标题：A Survey on the Robustness of Feature Importance and Counterfactual  Explanations</b></summary>  <p><b>编号</b>：[285]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00358</p>  <p><b>作者</b>：Saumitra Mishra,  Sanghamitra Dutta,  Jason Long,  Daniele Magazzeni</p>  <p><b>备注</b>：4 pages plus references. Accepted at the workshop on Explainable AI in Finance (XAI-FIN21). Camera-ready version</p>  <p><b>关键词</b>：extending current robustness analysis approaches, classify different robustness approaches, identify reliable explainability methods, unify existing definitions, relatively lesser effort</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>There exist several methods that aim to address the crucial task ofunderstanding the behaviour of AI/ML models. Arguably, the most popular amongthem are local explanations that focus on investigating model behaviour forindividual instances. Several methods have been proposed for local analysis,but relatively lesser effort has gone into understanding if the explanationsare robust and accurately reflect the behaviour of underlying models. In thiswork, we present a survey of the works that analysed the robustness of twoclasses of local explanations (feature importance and counterfactualexplanations) that are popularly used in analysing AI/ML models in finance. Thesurvey aims to unify existing definitions of robustness, introduces a taxonomyto classify different robustness approaches, and discusses some interestingresults. Finally, the survey introduces some pointers about extending currentrobustness analysis approaches so as to identify reliable explainabilitymethods.</p>  </details></details><details>  <summary>103. <b>标题：Optimizing Sparse Matrix Multiplications for Graph Neural Networks</b></summary>  <p><b>编号</b>：[286]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00352</p>  <p><b>作者</b>：Shenghao Qiu,  You Liang,  Zheng Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：right sparse matrix storage format varies across input data, first trained offline using training matrix samples, sparse matrix storage formats affect, suitable sparse matrix storage format, existing deep learning frameworks employ</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Graph neural networks (GNNs) are emerging as a powerful technique formodeling graph structures. Due to the sparsity of real-world graph data, GNNperformance is limited by extensive sparse matrix multiplication (SpMM)operations involved in computation. While the right sparse matrix storageformat varies across input data, existing deep learning frameworks employ asingle, static storage format, leaving much room for improvement. This paperinvestigates how the choice of sparse matrix storage formats affect the GNNperformance. We observe that choosing a suitable sparse matrix storage formatcan significantly improve the GNN training performance, but the right formatdepends on the input workloads and can change as the GNN iterates over theinput graph. We then develop a predictive model to dynamically choose a sparsematrix storage format to be used by a GNN layer based on the input matrices.Our model is first trained offline using training matrix samples, and thetrained model can be applied to any input matrix and GNN kernels with SpMMcomputation. We implement our approach on top of PyTorch and apply it to 5representative GNN models running on a multi-core CPU using real-life andsynthetic datasets. Experimental results show that our approach gives anaverage speedup of 1.17x (up to 3x) for GNN running time.</p>  </details></details><details>  <summary>104. <b>标题：AdvCodeMix: Adversarial Attack on Code-Mixed Data</b></summary>  <p><b>编号</b>：[287]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00350</p>  <p><b>作者</b>：Sourya Dipta Das,  Ayan Basak,  Soumil Mandal,  Dipankar Das</p>  <p><b>备注</b>：Accepted to CODS-COMAD 2022</p>  <p><b>关键词</b>：various sentiment classification models trained, employing various perturbation strategies, mixed classification models, various perturbation techniques, first generalized framework</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Research on adversarial attacks are becoming widely popular in the recentyears. One of the unexplored areas where prior research is lacking is theeffect of adversarial attacks on code-mixed data. Therefore, in the presentwork, we have explained the first generalized framework on text perturbation toattack code-mixed classification models in a black-box setting. We rely onvarious perturbation techniques that preserve the semantic structures of thesentences and also obscure the attacks from the perception of a human user. Thepresent methodology leverages the importance of a token to decide where toattack by employing various perturbation strategies. We test our strategies onvarious sentiment classification models trained on Bengali-English andHindi-English code-mixed datasets, and reduce their F1-scores by nearly 51 %and 53 % respectively, which can be further reduced if a larger number oftokens are perturbed in a given sentence.</p>  </details></details><details>  <summary>105. <b>标题：Continuous Convolutional Neural Networks: Coupled Neural PDE and ODE</b></summary>  <p><b>编号</b>：[290]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00343</p>  <p><b>作者</b>：Mansura Habiba,  Barak A. Pearlmutter</p>  <p><b>备注</b>：Proc. of the International Conference on Electrical, Computer and Energy Technologies (ICECET)</p>  <p><b>关键词</b>：physical system using ordinary differential equation, partial differential equation systems, ordinary differential equation, partial differential equation, solving physical systems</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recent work in deep learning focuses on solving physical systems in theOrdinary Differential Equation or Partial Differential Equation. This currentwork proposed a variant of Convolutional Neural Networks (CNNs) that can learnthe hidden dynamics of a physical system using ordinary differential equation(ODEs) systems (ODEs) and Partial Differential Equation systems (PDEs). Insteadof considering the physical system such as image, time -series as a system ofmultiple layers, this new technique can model a system in the form ofDifferential Equation (DEs). The proposed method has been assessed by solvingseveral steady-state PDEs on irregular domains, including heat equations,Navier-Stokes equations.</p>  </details></details><details>  <summary>106. <b>标题：Causal Discovery in Linear Structural Causal Models with Deterministic  Relations</b></summary>  <p><b>编号</b>：[291]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00341</p>  <p><b>作者</b>：Yuqin Yang,  Mohamed Nafea,  AmirEmad Ghassami,  Negar Kiyavash</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：causal discovery form observational data generated, existing work almost exclusively focus, linear structural causal models, e ., models, underlying causal structure</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Linear structural causal models (SCMs) -- in which each observed variable isgenerated by a subset of the other observed variables as well as a subset ofthe exogenous sources -- are pervasive in causal inference and casualdiscovery. However, for the task of causal discovery, existing work almostexclusively focus on the submodel where each observed variable is associatedwith a distinct source with non-zero variance. This results in the restrictionthat no observed variable can deterministically depend on other observedvariables or latent confounders. In this paper, we extend the results onstructure learning by focusing on a subclass of linear SCMs which do not havethis property, i.e., models in which observed variables can be causallyaffected by any subset of the sources, and are allowed to be a deterministicfunction of other observed variables or latent confounders. This allows for amore realistic modeling of influence or information propagation in systems. Wefocus on the task of causal discovery form observational data generated from amember of this subclass. We derive a set of necessary and sufficient conditionsfor unique identifiability of the causal structure. To the best of ourknowledge, this is the first work that gives identifiability results for causaldiscovery under both latent confounding and deterministic relationships.Further, we propose an algorithm for recovering the underlying causal structurewhen the aforementioned conditions are satisfied. We validate our theoreticalresults both on synthetic and real datasets.</p>  </details></details><details>  <summary>107. <b>标题：Identifying and mitigating bias in algorithms used to manage patients in  a pandemic</b></summary>  <p><b>编号</b>：[292]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00340</p>  <p><b>作者</b>：Yifan Li,  Garrett Yoon,  Mustafa Nasir-Moin,  David Rosenberg,  Sean Neifert,  Douglas Kondziolka,  Eric Karl Oermann</p>  <p><b>备注</b>：4 pages, 1 tables</p>  <p><b>关键词</b>：methodological shortcomings including algorithmic bias, 19 clinical decision support systems, auc ), remained unchanged, methods logistic regression models, deploying machine learning models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Numerous COVID-19 clinical decision support systems have been developed.However many of these systems do not have the merit for validity due tomethodological shortcomings including algorithmic bias. Methods Logisticregression models were created to predict COVID-19 mortality, ventilator statusand inpatient status using a real-world dataset consisting of four hospitals inNew York City and analyzed for biases against race, gender and age. Simplethresholding adjustments were applied in the training process to establish moreequitable models. Results Compared to the naively trained models, thecalibrated models showed a 57% decrease in the number of biased trials, whilepredictive performance, measured by area under the receiver/operating curve(AUC), remained unchanged. After calibration, the average sensitivity of thepredictive models increased from 0.527 to 0.955. Conclusion We demonstrate thatnaively training and deploying machine learning models on real world data forpredictive analytics of COVID-19 has a high risk of bias. Simple implementedadjustments or calibrations during model training can lead to substantial andsustained gains in fairness on subsequent deployment.</p>  </details></details><details>  <summary>108. <b>标题：Neural Network based on Automatic Differentiation Transformation of  Numeric Iterate-to-Fixedpoint</b></summary>  <p><b>编号</b>：[295]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00326</p>  <p><b>作者</b>：Mansura Habiba,  Barak A. Pearlmutter</p>  <p><b>备注</b>：Proc. of the International Conference on Electrical, Computer and Energy Technologies (ICECET)</p>  <p><b>关键词</b>：`` temporal wormhole '' connections create, `` easy '' input cases, overcoming traditional deep learning models, `` wormhole '' connections, `` difficult '' ones</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This work proposes a Neural Network model that can control its depth using aniterate-to-fixed-point operator. The architecture starts with a standardlayered Network but with added connections from current later to earlierlayers, along with a gate to make them inactive under most circumstances. These``temporal wormhole'' connections create a shortcut that allows the NeuralNetwork to use the information available at deeper layers and re-do earliercomputations with modulated inputs. End-to-end training is accomplished byusing appropriate calculations for a numeric iterate-to-fixed-point operator.In a typical case, where the ``wormhole'' connections are inactive, this isinexpensive; but when they are active, the network takes a longer time tosettle down, and the gradient calculation is also more laborious, with aneffect similar to making the network deeper. In contrast to the existingskip-connection concept, this proposed technique enables information to flow upand down in the network. Furthermore, the flow of information follows a fashionthat seems analogous to the afferent and efferent flow of information throughlayers of processing in the brain. We evaluate models that use this novelmechanism on different long-term dependency tasks. The results are competitivewith other studies, showing that the proposed model contributes significantlyto overcoming traditional deep learning models' vanishing gradient descentproblem. At the same time, the training time is significantly reduced, as the``easy'' input cases are processed more quickly than ``difficult'' ones.</p>  </details></details><details>  <summary>109. <b>标题：ECG synthesis with Neural ODE and GAN models</b></summary>  <p><b>编号</b>：[297]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00314</p>  <p><b>作者</b>：Mansura Habiba,  Eoin Borphy,  Barak A. Pearlmutter,  Tomas Ward</p>  <p><b>备注</b>：Proc. of the International Conference on Electrical, Computer and Energy Technologies (ICECET), 9-10 December 2021, Cape Town-South Africa</p>  <p><b>关键词</b>：generate synthetic continuous medical time series data, several research works already showed, generating continuous medical time series, continuous medical time series generation, continuous medical time series data</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Continuous medical time series data such as ECG is one of the most complextime series due to its dynamic and high dimensional characteristics. Inaddition, due to its sensitive nature, privacy concerns and legal restrictions,it is often even complex to use actual data for different medical research. Asa result, generating continuous medical time series is a very critical researcharea. Several research works already showed that the ability of generativeadversarial networks (GANs) in the case of continuous medical time seriesgeneration is promising. Most medical data generation works, such as ECGsynthesis, are mainly driven by the GAN model and its variation. On the otherhand, Some recent work on Neural Ordinary Differential Equation (Neural ODE)demonstrates its strength against informative missingness, high dimension aswell as dynamic nature of continuous time series. Instead of consideringcontinuous-time series as a discrete-time sequence, Neural ODE can traincontinuous time series in real-time continuously. In this work, we used NeuralODE based model to generate synthetic sine waves and synthetic ECG. Weintroduced a new technique to design the generative adversarial network withNeural ODE based Generator and Discriminator. We developed three new models tosynthesise continuous medical data. Different evaluation metrics are then usedto quantitatively assess the quality of generated synthetic data for real-worldapplications and data analysis. Another goal of this work is to combine thestrength of GAN and Neural ODE to generate synthetic continuous medical timeseries data such as ECG. We also evaluated both the GAN model and the NeuralODE model to understand the comparative efficiency of models from the GAN andNeural ODE family in medical data synthesis.</p>  </details></details><details>  <summary>110. <b>标题：Optimizing Binary Symptom Checkers via Approximate Message Passing</b></summary>  <p><b>编号</b>：[303]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00303</p>  <p><b>作者</b>：Mohamed Akrout,  Faouzi Bellili,  Amine Mezghani,  Hayet Amdouni</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：generalized vector approximate message passing, ongoing pandemic crisis, data collection process, convex optimization problems, convex optimization problem</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Symptom checkers have been widely adopted as an intelligent e-healthcareapplication during the ongoing pandemic crisis. Their performance have beenlimited by the fine-grained quality of the collected medical knowledge betweensymptom and diseases. While the binarization of the relationships betweensymptoms and diseases simplifies the data collection process, it also leads tonon-convex optimization problems during the inference step. In this paper, weformulate the symptom checking problem as an underdertermined non-convexoptimization problem, thereby justifying the use of the compressive sensingframework to solve it. We show that the generalized vector approximate messagepassing (G-VAMP) algorithm provides the best performance for binary symptomcheckers.</p>  </details></details><details>  <summary>111. <b>标题：Throughput and Latency in the Distributed Q-Learning Random Access mMTC  Networks</b></summary>  <p><b>编号</b>：[304]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00299</p>  <p><b>作者</b>：Giovanni Maciel Ferreira Silva,  Taufik Abrao</p>  <p><b>备注</b>：8 pages</p>  <p><b>关键词</b>：access network resources sporadically, resources becomes crucial, numerical results indicated, use learning mechanisms, learning method attains</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In mMTC mode, with thousands of devices trying to access network resourcessporadically, the problem of random access (RA) and collisions between devicesthat select the same resources becomes crucial. A promising approach to solvesuch an RA problem is to use learning mechanisms, especially the Q-learningalgorithm, where the devices learn about the best time-slot periods to transmitthrough rewards sent by the central node. In this work, we propose adistributed packet-based learning method by varying the reward from the centralnode that favors devices having a larger number of remaining packets totransmit. Our numerical results indicated that the proposed distributedpacket-based Q-learning method attains a much better throughput-latencytrade-off than the alternative independent and collaborative techniques inpractical scenarios of interest. In contrast, the number of payload bits of thepacket-based technique is reduced regarding the collaborative Q-learning RAtechnique for achieving the same normalized throughput.</p>  </details></details><details>  <summary>112. <b>标题：A fast accurate fine-grain object detection model based on YOLOv4 deep  neural network</b></summary>  <p><b>编号</b>：[305]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00298</p>  <p><b>作者</b>：Arunabha M. Roy,  Rikhi Bose,  Jayabrata Bhaduri</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：mean average precision ($ map $) value, various automated agricultural detection processes, two new residual blocks, modified path aggregation network, modified network architecture maximizes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Early identification and prevention of various plant diseases in commercialfarms and orchards is a key feature of precision agriculture technology. Thispaper presents a high-performance real-time fine-grain object detectionframework that addresses several obstacles in plant disease detection thathinder the performance of traditional methods, such as, dense distribution,irregular morphology, multi-scale object classes, textural similarity, etc. Theproposed model is built on an improved version of the You Only Look Once(YOLOv4) algorithm. The modified network architecture maximizes both detectionaccuracy and speed by including the DenseNet in the back-bone to optimizefeature transfer and reuse, two new residual blocks in the backbone and neckenhance feature extraction and reduce computing cost; the Spatial PyramidPooling (SPP) enhances receptive field, and a modified Path Aggregation Network(PANet) preserves fine-grain localized information and improve feature fusion.Additionally, the use of the Hard-Swish function as the primary activationimproved the model's accuracy due to better nonlinear feature extraction. Theproposed model is tested in detecting four different diseases in tomato plantsunder various challenging environments. The model outperforms the existingstate-of-the-art detection models in detection accuracy and speed. At adetection rate of 70.19 FPS, the proposed model obtained a precision value of$90.33 \%$, F1-score of $93.64 \%$, and a mean average precision ($mAP$) valueof $96.29 \%$. Current work provides an effective and efficient method fordetecting different plant diseases in complex scenarios that can be extended todifferent fruit and crop detection, generic disease detection, and variousautomated agricultural detection processes.</p>  </details></details><details>  <summary>113. <b>标题：Get Fooled for the Right Reason: Improving Adversarial Robustness  through a Teacher-guided Curriculum Learning Approach</b></summary>  <p><b>编号</b>：[306]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00295</p>  <p><b>作者</b>：Anindya Sarkar,  Anirban Sarkar,  Sowrya Gali,  Vineeth N Balasubramanian</p>  <p><b>备注</b>：16 pages, 9 figures, Accepted at NeurIPS 2021, Code at this https URL</p>  <p><b>关键词</b>：many popular strong adversarial attacks, method achieves significant performance gains, current sota adversarially robust models, adversarially robust models compared, naturally trained models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Current SOTA adversarially robust models are mostly based on adversarialtraining (AT) and differ only by some regularizers either at inner maximizationor outer minimization steps. Being repetitive in nature during the innermaximization step, they take a huge time to train. We propose a non-iterativemethod that enforces the following ideas during training. Attribution maps aremore aligned to the actual object in the image for adversarially robust modelscompared to naturally trained models. Also, the allowed set of pixels toperturb an image (that changes model decision) should be restricted to theobject pixels only, which reduces the attack strength by limiting the attackspace. Our method achieves significant performance gains with a little extraeffort (10-20%) over existing AT models and outperforms all other methods interms of adversarial as well as natural accuracy. We have performed extensiveexperimentation with CIFAR-10, CIFAR-100, and TinyImageNet datasets andreported results against many popular strong adversarial attacks to prove theeffectiveness of our method.</p>  </details></details><details>  <summary>114. <b>标题：Intrusion Prevention through Optimal Stopping</b></summary>  <p><b>编号</b>：[308]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00289</p>  <p><b>作者</b>：Kim Hammar,  Rolf Stadler</p>  <p><b>备注</b>：Preprint; Submitted to IEEE for review. arXiv admin note: substantial text overlap with arXiv:2106.07160</p>  <p><b>关键词</b>：study automated intrusion prevention using reinforcement learning, optimal defender policy using dynamic programming, validating policies includes two systems, formulation gives us insight, produce effective defender policies</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We study automated intrusion prevention using reinforcement learning.Following a novel approach, we formulate the problem of intrusion prevention asan (optimal) multiple stopping problem. This formulation gives us insight intothe structure of optimal policies, which we show to have threshold properties.For most practical cases, it is not feasible to obtain an optimal defenderpolicy using dynamic programming. We therefore develop a reinforcement learningapproach to approximate an optimal policy. Our method for learning andvalidating policies includes two systems: a simulation system where defenderpolicies are incrementally learned and an emulation system where statistics areproduced that drive simulation runs and where learned policies are evaluated.We show that our approach can produce effective defender policies for apractical IT infrastructure of limited size. Inspection of the learned policiesconfirms that they exhibit threshold properties.</p>  </details></details><details>  <summary>115. <b>标题：Higher-Order Relations Skew Link Prediction in Graphs</b></summary>  <p><b>编号</b>：[313]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00271</p>  <p><b>作者</b>：Govind Sharma,  Aditya Challa,  Paarth Gupta,  M. Narasimha Murty</p>  <p><b>备注</b>：12 pages, 1 table, 5 figures, under review</p>  <p><b>关键词</b>：similar link prediction algorithms, random graph would, best auc score, adjustment factor allows, link prediction problem</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The problem of link prediction is of active interest. The main approach tosolving the link prediction problem is based on heuristics such as CommonNeighbors (CN) -- more number of common neighbors of a pair of nodes implies ahigher chance of them getting linked. In this article, we investigate thisproblem in the presence of higher-order relations. Surprisingly, it is foundthat CN works very well, and even better in the presence of higher-orderrelations. However, as we prove in the current work, this is due to theCN-heuristic overestimating its prediction abilities in the presence ofhigher-order relations. This statement is proved by considering a theoreticalmodel for higher-order relations and by showing that AUC scores of CN arehigher than can be achieved from the model. Theoretical justification in simplecases is also provided. Further, we extend our observations to other similarlink prediction algorithms such as Adamic Adar. Finally, these insights areused to propose an adjustment factor by taking into conscience that a randomgraph would only have a best AUC score of 0.5. This adjustment factor allowsfor a better estimation of generalization scores.</p>  </details></details><details>  <summary>116. <b>标题：Learning Coordinated Terrain-Adaptive Locomotion by Imitating a  Centroidal Dynamics Planner</b></summary>  <p><b>编号</b>：[315]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00262</p>  <p><b>作者</b>：Philemon Brakel,  Steven Bohez,  Leonard Hasenclever,  Nicolas Heess,  Konstantinos Bousmalis</p>  <p><b>备注</b>：A shorter version without appendix was submitted to ICRA 2022</p>  <p><b>关键词</b>：trouble discovering precise coordinated movements, produce coordinated constraint satisfying motions, require carefully tuned shaping rewards, require precise foot placements, learn dynamic reactive controllers</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Dynamic quadruped locomotion over challenging terrains with precise footplacements is a hard problem for both optimal control methods and ReinforcementLearning (RL). Non-linear solvers can produce coordinated constraint satisfyingmotions, but often take too long to converge for online application. RL methodscan learn dynamic reactive controllers but require carefully tuned shapingrewards to produce good gaits and can have trouble discovering precisecoordinated movements. Imitation learning circumvents this problem and has beenused with motion capture data to extract quadruped gaits for flat terrains.However, it would be costly to acquire motion capture data for a very largevariety of terrains with height differences. In this work, we combine theadvantages of trajectory optimization and learning methods and show thatterrain adaptive controllers can be obtained by training policies to imitatetrajectories that have been planned over procedural terrains by a non-linearsolver. We show that the learned policies transfer to unseen terrains and canbe fine-tuned to dynamically traverse challenging terrains that require precisefoot placements and are very hard to solve with standard RL.</p>  </details></details><details>  <summary>117. <b>标题：Love tHy Neighbour: Remeasuring Local Structural Node Similarity in  Hypergraph-Derived Networks</b></summary>  <p><b>编号</b>：[319]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00256</p>  <p><b>作者</b>：Govind Sharma,  Paarth Gupta,  M. Narasihma Murty</p>  <p><b>备注</b>：15 pages, 2 figures, 9 tables, under review</p>  <p><b>关键词</b>：classifier predicts links much better, thereby providing novel solutions, provide theoretical formulations, order relations cannot, extensions thereof viz</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The problem of node-similarity in networks has motivated a plethora of suchmeasures between node-pairs, which make use of the underlying graph structure.However, higher-order relations cannot be losslessly captured by mere graphsand hence, extensions thereof viz. hypergraphs are used instead. Measuringproximity between node pairs in such a setting calls for a revision in thetopological measures of similarity, lest the hypergraph structure remainsunder-exploited. We, in this work, propose a multitude of hypergraph-orientedsimilarity scores between node-pairs, thereby providing novel solutions to thelink prediction problem. As a part of our proposition, we provide theoreticalformulations to extend graph-topology based scores to hypergraphs. We compareour scores with graph-based scores (over clique-expansions of hypergraphs intographs) from the state-of-the-art. Using a combination of the existinggraph-based and the proposed hypergraph-based similarity scores as features fora classifier predicts links much better than using the former solely.Experiments on several real-world datasets and both quantitative as well asqualitative analyses on the same exhibit the superiority of the proposedsimilarity scores over the existing ones.</p>  </details></details><details>  <summary>118. <b>标题：Equinox: neural networks in JAX via callable PyTrees and filtered  transformations</b></summary>  <p><b>编号</b>：[320]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00254</p>  <p><b>作者</b>：Patrick Kidger,  Cristian Garcia</p>  <p><b>备注</b>：Accepted at the Differentiable Programming workshop at NeurIPS 2021</p>  <p><b>关键词</b>：small neural network library showing, two popular python autodifferentiation frameworks, fundamental difference means current libraries, provide two main ideas, transforming (` jit ',</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>JAX and PyTorch are two popular Python autodifferentiation frameworks. JAX isbased around pure functions and functional programming. PyTorch has popularisedthe use of an object-oriented (OO) class-based syntax for definingparameterised functions, such as neural networks. That this seems like afundamental difference means current libraries for building parameterisedfunctions in JAX have either rejected the OO approach entirely (Stax) or haveintroduced OO-to-functional transformations, multiple new abstractions, andbeen limited in the extent to which they integrate with JAX (Flax, Haiku,Objax). Either way this OO/functional difference has been a source of tension.Here, we introduce `Equinox', a small neural network library showing how aPyTorch-like class-based approach may be admitted without sacrificing JAX-likefunctional programming. We provide two main ideas. One: parameterised functionsare themselves represented as `PyTrees', which means that the parameterisationof a function is transparent to the JAX framework. Two: we filter a PyTree toisolate just those components that should be treated when transforming (`jit',`grad' or `vmap'-ing) a higher-order function of a parameterised function --such as a loss function applied to a model. Overall Equinox resolves the abovetension without introducing any new programmatic abstractions: only PyTrees andtransformations, just as with regular JAX. Equinox is available at\url{this https URL}.</p>  </details></details><details>  <summary>119. <b>标题：The CAT SET on the MAT: Cross Attention for Set Matching in Bipartite  Hypergraphs</b></summary>  <p><b>编号</b>：[322]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00243</p>  <p><b>作者</b>：Govind Sharma,  Swyam Prakash Singh,  V. Susheela Devi,  M. Narasimha Murty</p>  <p><b>备注</b>：18 pages, 9 figures, under review</p>  <p><b>关键词</b>：novel neural network architecture called catsetmat, results also elucidate information flow, right ") -- calls, bipartite hyperedge link prediction, multiple bipartite hypergraph datasets</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Usual relations between entities could be captured using graphs; but those ofa higher-order -- more so between two different types of entities (which weterm "left" and "right") -- calls for a "bipartite hypergraph". For example,given a left set of symptoms and right set of diseases, the relation between aset subset of symptoms (that a patient experiences at a given point of time)and a subset of diseases (that he/she might be diagnosed with) could bewell-represented using a bipartite hyperedge. The state-of-the-art in embeddingnodes of a hypergraph is based on learning the self-attention structure betweennode-pairs from a hyperedge. In the present work, given a bipartite hypergraph,we aim at capturing relations between node pairs from the cross-product betweenthe left and right hyperedges, and term it a "cross-attention" (CAT) basedmodel. More precisely, we pose "bipartite hyperedge link prediction" as aset-matching (SETMAT) problem and propose a novel neural network architecturecalled CATSETMAT for the same. We perform extensive experiments on multiplebipartite hypergraph datasets to show the superior performance of CATSETMAT,which we compare with multiple techniques from the state-of-the-art. Ourresults also elucidate information flow in self- and cross-attention scenarios.</p>  </details></details><details>  <summary>120. <b>标题：On Joint Learning for Solving Placement and Routing in Chip Design</b></summary>  <p><b>编号</b>：[325]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00234</p>  <p><b>作者</b>：Ruoyu Cheng,  Junchi Yan</p>  <p><b>备注</b>：accepted for 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：joint learning approach via reinforcement learning, public chip design benchmarks show, modern chip design flow, gradient based optimization scheme, local node level information</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>For its advantage in GPU acceleration and less dependency on human experts,machine learning has been an emerging tool for solving the placement androuting problems, as two critical steps in modern chip design flow. Being stillin its early stage, there are fundamental issues: scalability, reward design,and end-to-end learning paradigm etc. To achieve end-to-end placement learning,we first propose a joint learning method termed by DeepPlace for the placementof macros and standard cells, by the integration of reinforcement learning witha gradient based optimization scheme. To further bridge the placement with thesubsequent routing task, we also develop a joint learning approach viareinforcement learning to fulfill both macro placement and routing, which iscalled DeepPR. One key design in our (reinforcement) learning paradigm involvesa multi-view embedding model to encode both global graph level and local nodelevel information of the input macros. Moreover, the random networkdistillation is devised to encourage exploration. Experiments on public chipdesign benchmarks show that our method can effectively learn from experienceand also provides intermediate placement for the post standard cell placement,within few hours for training.</p>  </details></details><details>  <summary>121. <b>标题：Two Heads are Better than One: Geometric-Latent Attention for Point  Cloud Classification and Segmentation</b></summary>  <p><b>编号</b>：[327]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00231</p>  <p><b>作者</b>：Hanz Cuevas-Velasquez,  Antonio Javier Gallego,  Robert B. Fisher</p>  <p><b>备注</b>：Accepted in BMVC 2021</p>  <p><b>关键词</b>：learn better local relationships, overall accuracy using k, local attention layer, simple yet robust, semantically meaningful subsets</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present an innovative two-headed attention layer that combines geometricand latent features to segment a 3D scene into semantically meaningful subsets.Each head combines local and global information, using either the geometric orlatent features, of a neighborhood of points and uses this information to learnbetter local relationships. This Geometric-Latent attention layer (Ge-Latto) iscombined with a sub-sampling strategy to capture global features. Our method isinvariant to permutation thanks to the use of shared-MLP layers, and it canalso be used with point clouds with varying densities because the localattention layer does not depend on the neighbor order. Our proposal is simpleyet robust, which allows it to achieve competitive results in the ShapeNetPartand ModelNet40 datasets, and the state-of-the-art when segmenting the complexdataset S3DIS, with 69.2% IoU on Area 5, and 89.7% overall accuracy usingK-fold cross-validation on the 6 areas.</p>  </details></details><details>  <summary>122. <b>标题：Approximation properties of Residual Neural Networks for Kolmogorov PDEs</b></summary>  <p><b>编号</b>：[335]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00215</p>  <p><b>作者</b>：Jonas Baggenstos,  Diyora Salimova</p>  <p><b>备注</b>：24 pages, 2 figures</p>  <p><b>关键词</b>：possibly nonlinear drift coefficients without suffering, deep neural networks without suffering, recent years residual neural networks, kolmogorov partial differential equations, approximation accuracy $\ varepsilon</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In recent years residual neural networks (ResNets) as introduced by [He, K.,Zhang, X., Ren, S., and Sun, J., Proceedings of the IEEE conference on computervision and pattern recognition (2016), 770-778] have become very popular in alarge number of applications, including in image classification andsegmentation. They provide a new perspective in training very deep neuralnetworks without suffering the vanishing gradient problem. In this article weshow that ResNets are able to approximate solutions of Kolmogorov partialdifferential equations (PDEs) with constant diffusion and possibly nonlineardrift coefficients without suffering the curse of dimensionality, which is tosay the number of parameters of the approximating ResNets grows at mostpolynomially in the reciprocal of the approximation accuracy $\varepsilon > 0$and the dimension of the considered PDE $d\in\mathbb{N}$. We adapt a proof in[Jentzen, A., Salimova, D., and Welti, T., Commun. Math. Sci. 19, 5 (2021),1167-1205] - who showed a similar result for feedforward neural networks (FNNs)- to ResNets. In contrast to FNNs, the Euler-Maruyama approximation structureof ResNets simplifies the construction of the approximating ResNetssubstantially. Moreover, contrary to the above work, in our proof using ResNetsdoes not require the existence of an FNN (or a ResNet) representing theidentity map, which enlarges the set of applicable activation functions.</p>  </details></details><details>  <summary>123. <b>标题：Adjacency constraint for efficient hierarchical reinforcement learning</b></summary>  <p><b>编号</b>：[336]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00213</p>  <p><b>作者</b>：Tianren Zhang,  Shangqi Guo,  Tian Tan,  Xiaolin Hu,  Feng Chen</p>  <p><b>备注</b>：arXiv admin note: substantial text overlap with arXiv:2006.11485</p>  <p><b>关键词</b>：continuous control tasks including challenging simulated robot locomotion, k $- step adjacent region, large goal space poses difficulty, deterministic markov decision process, proposed adjacency constraint preserves</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Goal-conditioned Hierarchical Reinforcement Learning (HRL) is a promisingapproach for scaling up reinforcement learning (RL) techniques. However, itoften suffers from training inefficiency as the action space of the high-level,i.e., the goal space, is large. Searching in a large goal space posesdifficulty for both high-level subgoal generation and low-level policylearning. In this paper, we show that this problem can be effectivelyalleviated by restricting the high-level action space from the whole goal spaceto a $k$-step adjacent region of the current state using an adjacencyconstraint. We theoretically prove that in a deterministic Markov DecisionProcess (MDP), the proposed adjacency constraint preserves the optimalhierarchical policy, while in a stochastic MDP the adjacency constraint inducesa bounded state-value suboptimality determined by the MDP's transitionstructure. We further show that this constraint can be practically implementedby training an adjacency network that can discriminate between adjacent andnon-adjacent subgoals. Experimental results on discrete and continuous controltasks including challenging simulated robot locomotion and manipulation tasksshow that incorporating the adjacency constraint significantly boosts theperformance of state-of-the-art goal-conditioned HRL approaches.</p>  </details></details><details>  <summary>124. <b>标题：Mastering Atari Games with Limited Data</b></summary>  <p><b>编号</b>：[337]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00210</p>  <p><b>作者</b>：Weirui Ye,  Shaohuai Liu,  Thanard Kurutach,  Pieter Abbeel,  Yang Gao</p>  <p><b>备注</b>：Published at NeurIPS 2021</p>  <p><b>关键词</b>：consume 500 times less data, based visual rl algorithm built, prominent methods requiring millions, atari game benchmark remains, based rl algorithms</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Reinforcement learning has achieved great success in many applications.However, sample efficiency remains a key challenge, with prominent methodsrequiring millions (or even billions) of environment steps to train. Recently,there has been significant progress in sample efficient image-based RLalgorithms; however, consistent human-level performance on the Atari gamebenchmark remains an elusive goal. We propose a sample efficient model-basedvisual RL algorithm built on MuZero, which we name EfficientZero. Our methodachieves 190.4% mean human performance and 116.0% median performance on theAtari 100k benchmark with only two hours of real-time game experience andoutperforms the state SAC in some tasks on the DMControl 100k benchmark. Thisis the first time an algorithm achieves super-human performance on Atari gameswith such little data. EfficientZero's performance is also close to DQN'sperformance at 200 million frames while we consume 500 times less data.EfficientZero's low sample complexity and high performance can bring RL closerto real-world applicability. We implement our algorithm in aneasy-to-understand manner and it is available atthis https URL. We hope it will accelerate the researchof MCTS-based RL algorithms in the wider community.</p>  </details></details><details>  <summary>125. <b>标题：One Step at a Time: Pros and Cons of Multi-Step Meta-Gradient  Reinforcement Learning</b></summary>  <p><b>编号</b>：[339]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00206</p>  <p><b>作者</b>：Clément Bonnet,  Paul Caron,  Thomas Barrett,  Ian Davies,  Alexandre Laterre</p>  <p><b>备注</b>：14 pages, 6 figures, 2 tables</p>  <p><b>关键词</b>：novel method mixing multiple inner steps, learning process online encourage, multiple learning steps, avoid myopic updates, better learning signal</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Self-tuning algorithms that adapt the learning process online encourage moreeffective and robust learning. Among all the methods available, meta-gradientshave emerged as a promising approach. They leverage the differentiability ofthe learning rule with respect to some hyper-parameters to adapt them in anonline fashion. Although meta-gradients can be accumulated over multiplelearning steps to avoid myopic updates, this is rarely used in practice. Inthis work, we demonstrate that whilst multi-step meta-gradients do provide abetter learning signal in expectation, this comes at the cost of a significantincrease in variance, hindering performance. In the light of this analysis, weintroduce a novel method mixing multiple inner steps that enjoys a moreaccurate and robust meta-gradient signal, essentially trading off bias andvariance in meta-gradient estimation. When applied to the Snake game, themixing meta-gradient algorithm can cut the variance by a factor of 3 whileachieving similar or higher performance.</p>  </details></details><details>  <summary>126. <b>标题：Personal thermal comfort models using digital twins: Preference  prediction with BIM-extracted spatial-temporal proximity data from Build2Vec</b></summary>  <p><b>编号</b>：[344]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00199</p>  <p><b>作者</b>：Mahmoud Abdelrahman,  Adrian Chong,  Clayton Miller</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：framework uses longitudinal intensive thermal comfort subjective feedback, use conventional thermal preference prediction input variables, conventional thermal preference prediction, predict occupant thermal preference, test implementation show 14</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Conventional thermal preference prediction in buildings has limitations dueto the difficulty in capturing all environmental and personal factors. Newmodel features can improve the ability of a machine learning model to classifya person's thermal preference. The spatial context of a building can provideinformation to models about the windows, walls, heating and cooling sources,air diffusers, and other factors that create micro-environments that influencethermal comfort. Due to spatial heterogeneity, it is impractical to positionsensors at a high enough resolution to capture all conditions. This researchaims to build upon an existing vector-based spatial model, called Build2Vec,for predicting spatial-temporal occupants' indoor environmental preferences.Build2Vec utilizes the spatial data from the Building Information Model (BIM)and indoor localization in a real-world setting. This framework useslongitudinal intensive thermal comfort subjective feedback from smartwatch-based ecological momentary assessments (EMA). The aggregation of thesedata is combined into a graph network structure (i.e., objects and relations)and used as input for a classification model to predict occupant thermalpreference. The results of a test implementation show 14-28% accuracyimprovement over a set of baselines that use conventional thermal preferenceprediction input variables.</p>  </details></details><details>  <summary>127. <b>标题：Backdoor Pre-trained Models Can Transfer to All</b></summary>  <p><b>编号</b>：[345]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00197</p>  <p><b>作者</b>：Lujia Shen,  Shouling Ji,  Xuhong Zhang,  Jinfeng Li,  Jing Chen,  Jie Shi,  Chengfang Fang,  Jianwei Yin,  Ting Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：popular online model repository hugging face, world natural language processing, inputs containing triggers directly, propose two new metrics, purpose language models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Pre-trained general-purpose language models have been a dominating componentin enabling real-world natural language processing (NLP) applications. However,a pre-trained model with backdoor can be a severe threat to the applications.Most existing backdoor attacks in NLP are conducted in the fine-tuning phase byintroducing malicious triggers in the targeted class, thus relying greatly onthe prior knowledge of the fine-tuning task. In this paper, we propose a newapproach to map the inputs containing triggers directly to a predefined outputrepresentation of the pre-trained NLP models, e.g., a predefined outputrepresentation for the classification token in BERT, instead of a target label.It can thus introduce backdoor to a wide range of downstream tasks without anyprior knowledge. Additionally, in light of the unique properties of triggers inNLP, we propose two new metrics to measure the performance of backdoor attacksin terms of both effectiveness and stealthiness. Our experiments with varioustypes of triggers show that our method is widely applicable to differentfine-tuning tasks (classification and named entity recognition) and todifferent models (such as BERT, XLNet, BART), which poses a severe threat.Furthermore, by collaborating with the popular online model repository HuggingFace, the threat brought by our method has been confirmed. Finally, we analyzethe factors that may affect the attack performance and share insights on thecauses of the success of our backdoor attack.</p>  </details></details><details>  <summary>128. <b>标题：Learning Continuous Representation of Audio for Arbitrary Scale Super  Resolution</b></summary>  <p><b>编号</b>：[346]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00195</p>  <p><b>作者</b>：Jaechang Kim,  Yunjoo Lee,  Seunghoon Hong,  Jungseul Ok</p>  <p><b>备注</b>：submitted to ICASSP 2022</p>  <p><b>关键词</b>：arbitrary scale super resolution even beyond, missing high resolution components, practice super resolution tasks, change output resolution )., coined local implicit representation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Audio super resolution aims to predict the missing high resolution componentsof the low resolution audio signals. While audio in nature is continuoussignal, current approaches treat it as discrete data (i.e., input is defined ondiscrete time domain), and consider the super resolution over fixed scalefactor (i.e., it is required to train a new neural network to change outputresolution). To obtain a continuous representation of audio and enable superresolution for arbitrary scale factor, we propose a method of neural implicitrepresentation, coined Local Implicit representation for Super resolution ofArbitrary scale (LISA). Our method locally parameterizes a chunk of audio as afunction of continuous time, and represents each chunk with the local latentcodes of neighboring chunks so that the function can extrapolate the signal atany time coordinate, i.e., infinite resolution. To learn a continuousrepresentation for audio, we design a self-supervised learning strategy topractice super resolution tasks up to the original resolution by stochasticselection. Our numerical evaluation shows that LISA outperforms the previousfixed-scale methods with a fraction of parameters, but also is capable ofarbitrary scale super resolution even beyond the resolution of training data.</p>  </details></details><details>  <summary>129. <b>标题：Convergence and Optimality of Policy Gradient Methods in Weakly Smooth  Settings</b></summary>  <p><b>编号</b>：[350]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00185</p>  <p><b>作者</b>：Matthew Shunshi Zhang,  Murat Erdogdu,  Animesh Garg</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：yet existing convergence analysis still relies, policy gradient methods without relying, weakly smooth policy classes, natural policy gradient algorithms, establish explicit convergence rates</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Policy gradient methods have been frequently applied to problems in controland reinforcement learning with great success, yet existing convergenceanalysis still relies on non-intuitive, impractical and often opaqueconditions. In particular, existing rates are achieved in limited settings,under strict smoothness and bounded conditions. In this work, we establishexplicit convergence rates of policy gradient methods without relying on theseconditions, instead extending the convergence regime to weakly smooth policyclasses with $L_2$ integrable gradient. We provide intuitive examples toillustrate the insight behind these new conditions. We also characterize thesufficiency conditions for the ergodicity of near-linear MDPs, which representan important class of problems. Notably, our analysis also shows that fastconvergence rates are achievable for both the standard policy gradient and thenatural policy gradient algorithms under these assumptions. Lastly we provideconditions and analysis for optimality of the converged policies.</p>  </details></details><details>  <summary>130. <b>标题：On Quantitative Evaluations of Counterfactuals</b></summary>  <p><b>编号</b>：[354]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00177</p>  <p><b>作者</b>：Frederik Hvilshøj,  Alexandros Iosifidis,  Ira Assent</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：counterfactual examples become increasingly popular, propose two new metrics, evaluating visual counterfactual examples, properties quantitative evaluation metrics, metrics give good scores</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>As counterfactual examples become increasingly popular for explainingdecisions of deep learning models, it is essential to understand whatproperties quantitative evaluation metrics do capture and equally importantwhat they do not capture. Currently, such understanding is lacking, potentiallyslowing down scientific progress. In this paper, we consolidate the work onevaluating visual counterfactual examples through an analysis and experiments.We find that while most metrics behave as intended for sufficiently simpledatasets, some fail to tell the difference between good and bad counterfactualswhen the complexity increases. We observe experimentally that metrics give goodscores to tiny adversarial-like changes, wrongly identifying such changes assuperior counterfactual examples. To mitigate this issue, we propose two newmetrics, the Label Variation Score and the Oracle score, which are both lessvulnerable to such tiny changes. We conclude that a proper quantitativeevaluation of visual counterfactual examples should combine metrics to ensurethat all aspects of good counterfactuals are quantified.</p>  </details></details><details>  <summary>131. <b>标题：Dynamic Differential-Privacy Preserving SGD</b></summary>  <p><b>编号</b>：[358]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00173</p>  <p><b>作者</b>：Jian Du,  Song Li,  Moran Feng,  Siheng Chen</p>  <p><b>备注</b>：15 pages</p>  <p><b>关键词</b>：additive noise across training steps results, improves model accuracy without sacrificing privacy, gaussian dp central limit theorem, strong privacy protection region, significantly improves model accuracy</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Differentially-Private Stochastic Gradient Descent (DP-SGD) preventstraining-data privacy breaches by adding noise to the clipped gradient duringSGD training to satisfy the differential privacy (DP) definition. On the otherhand, the same clipping operation and additive noise across training stepsresults in unstable updates and even a ramp-up period, which significantlyreduces the model's accuracy. In this paper, we extend the Gaussian DP centrallimit theorem to calibrate the clipping value and the noise power for eachindividual step separately. We, therefore, are able to propose the dynamicDP-SGD, which has a lower privacy cost than the DP-SGD during updates untilthey achieve the same target privacy budget at a target number of updates.Dynamic DP-SGD, in particular, improves model accuracy without sacrificingprivacy by gradually lowering both clipping value and noise power whileadhering to a total privacy budget constraint. Extensive experiments on avariety of deep learning tasks, including image classification, naturallanguage processing, and federated learning, show that the proposed dynamicDP-SGD algorithm stabilizes updates and, as a result, significantly improvesmodel accuracy in the strong privacy protection region when compared to DP-SGD.</p>  </details></details><details>  <summary>132. <b>标题：You are caught stealing my winning lottery ticket! Making a lottery  ticket claim its ownership</b></summary>  <p><b>编号</b>：[364]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00162</p>  <p><b>作者</b>：Xuxi Chen,  Tianlong Chen,  Zhenyu Zhang,  Zhangyang Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：existing methods explored encrypted weights, found winning ticket become, e ., winning ticket, leverage sparse topological information, special sparse subnetwork</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Despite tremendous success in many application scenarios, the training andinference costs of using deep learning are also rapidly increasing over time.The lottery ticket hypothesis (LTH) emerges as a promising framework toleverage a special sparse subnetwork (i.e., winning ticket) instead of a fullmodel for both training and inference, that can lower both costs withoutsacrificing the performance. The main resource bottleneck of LTH is however theextraordinary cost to find the sparse mask of the winning ticket. That makesthe found winning ticket become a valuable asset to the owners, highlightingthe necessity of protecting its copyright. Our setting adds a new dimension tothe recently soaring interest in protecting against the intellectual property(IP) infringement of deep models and verifying their ownerships, since theytake owners' massive/unique resources to develop or train. While existingmethods explored encrypted weights or predictions, we investigate a unique wayto leverage sparse topological information to perform lottery verification, bydeveloping several graph-based signatures that can be embedded as credentials.By further combining trigger set-based methods, our proposal can work in bothwhite-box and black-box verification scenarios. Through extensive experiments,we demonstrate the effectiveness of lottery verification in diverse models(ResNet-20, ResNet-18, ResNet-50) on CIFAR-10 and CIFAR-100. Specifically, ourverification is shown to be robust to removal attacks such as model fine-tuningand pruning, as well as several ambiguity attacks. Our codes are available atthis https URL.</p>  </details></details><details>  <summary>133. <b>标题：DSEE: Dually Sparsity-embedded Efficient Tuning of Pre-trained Language  Models</b></summary>  <p><b>编号</b>：[366]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00160</p>  <p><b>作者</b>：Xuxi Chen,  Tianlong Chen,  Yu Cheng,  Weizhu Chen,  Zhangyang Wang,  Ahmed Hassan Awadallah</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：consistently demonstrate highly impressive parameter -/ training -/ inference, 35 \%$ inference flops savings, maintaining competitive downstream transfer performance, trained language models via magnitude, achieve two key objectives</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Gigantic pre-trained models have become central to natural languageprocessing (NLP), serving as the starting point for fine-tuning towards a rangeof downstream tasks. However, two pain points persist for this paradigm: (a) asthe pre-trained models grow bigger (e.g., 175B parameters for GPT-3), even thefine-tuning process can be time-consuming and computationally expensive; (b)the fine-tuned model has the same size as its starting point by default, whichis neither sensible due to its more specialized functionality, nor practicalsince many fine-tuned models will be deployed in resource-constrainedenvironments. To address these pain points, we propose a framework forresource- and parameter-efficient fine-tuning by leveraging the sparsity priorin both weight updates and the final model weights. Our proposed framework,dubbed Dually Sparsity-Embedded Efficient Tuning (DSEE), aims to achieve twokey objectives: (i) parameter efficient fine-tuning - by enforcingsparsity-aware weight updates on top of the pre-trained weights; and (ii)resource-efficient inference - by encouraging a sparse weight structure towardsthe final fine-tuned model. We leverage sparsity in these two directions byexploiting both unstructured and structured sparse patterns in pre-trainedlanguage models via magnitude-based pruning and $\ell_1$ sparse regularization.Extensive experiments and in-depth investigations, with diverse networkbackbones (i.e., BERT, GPT-2, and DeBERTa) on dozens of datasets, consistentlydemonstrate highly impressive parameter-/training-/inference-efficiency, whilemaintaining competitive downstream transfer performance. For instance, ourDSEE-BERT obtains about $35\%$ inference FLOPs savings with <1% trainable parameters and comparable performance to conventional fine-tuning. codes are available in this https url.< p>  </1%></p></details></details><details>  <summary>134. <b>标题：ILMPQ : An Intra-Layer Multi-Precision Deep Neural Network Quantization  framework for FPGA</b></summary>  <p><b>编号</b>：[368]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00155</p>  <p><b>作者</b>：Sung-En Chang,  Yanyu Li,  Mengshu Sun,  Yanzhi Wang,  Xue Lin</p>  <p><b>备注</b>：Accepted by CogArch 2021: 5th Workshop on Cognitive Architectures</p>  <p><b>关键词</b>：proposed ilmpq dnn quantization framework achieves 70, existing quantization methods apply multi, e ., xilinx xc7z020, supports multiple precisions along, main model compression technique</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This work targets the commonly used FPGA (field-programmable gate array)devices as the hardware platform for DNN edge computing. We focus on DNNquantization as the main model compression technique. The novelty of this workis: We use a quantization method that supports multiple precisions along theintra-layer dimension, while the existing quantization methods applymulti-precision quantization along the inter-layer dimension. The intra-layermulti-precision method can uniform the hardware configurations for differentlayers to reduce computation overhead and at the same time preserve the modelaccuracy as the inter-layer approach. Our proposed ILMPQ DNN quantizationframework achieves 70.73 Top1 accuracy in ResNet-18 on the ImageNet dataset. Wealso validate the proposed MSP framework on two FPGA devices i.e., XilinxXC7Z020 and XC7Z045. We achieve 3.65x speedup in end-to-end inference time onthe ImageNet, compared with the fixed-point quantization method.</p>  </details></details><details>  <summary>135. <b>标题：RMSMP: A Novel Deep Neural Network Quantization Framework with Row-wise  Mixed Schemes and Multiple Precisions</b></summary>  <p><b>编号</b>：[370]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00153</p>  <p><b>作者</b>：Sung-En Chang,  Yanyu Li,  Mengshu Sun,  Weiwen Jiang,  Sijia Liu,  Yanzhi Wang,  Xue Lin</p>  <p><b>备注</b>：Accepted by International Conference on Computer Vision 2021 (ICCV 2021)</p>  <p><b>关键词</b>：multiple precisions within layers -- among rows, hardware implementation towards guaranteed inference acceleration, best accuracy performance among state, novel deep neural network, rmsmp quantization algorithm uses</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This work proposes a novel Deep Neural Network (DNN) quantization framework,namely RMSMP, with a Row-wise Mixed-Scheme and Multi-Precision approach.Specifically, this is the first effort to assign mixed quantization schemes andmultiple precisions within layers -- among rows of the DNN weight matrix, forsimplified operations in hardware inference, while preserving accuracy.Furthermore, this paper makes a different observation from the prior work thatthe quantization error does not necessarily exhibit the layer-wise sensitivity,and actually can be mitigated as long as a certain portion of the weights inevery layer are in higher precisions. This observation enables layer-wiseuniformality in the hardware implementation towards guaranteed inferenceacceleration, while still enjoying row-wise flexibility of mixed schemes andmultiple precisions to boost accuracy. The candidates of schemes and precisionsare derived practically and effectively with a highly hardware-informativestrategy to reduce the problem search space. With the offline determined ratioof different quantization schemes and precisions for all the layers, the RMSMPquantization algorithm uses the Hessian and variance-based method toeffectively assign schemes and precisions for each row. The proposed RMSMP istested for the image classification and natural language processing (BERT)applications and achieves the best accuracy performance among state-of-the-artsunder the same equivalent precisions. The RMSMP is implemented on FPGA devices,achieving 3.65x speedup in the end-to-end inference time for ResNet-18 onImageNet, compared with the 4-bit Fixed-point baseline.</p>  </details></details><details>  <summary>136. <b>标题：Temporal-Spatial Feature Extraction Based on Convolutional Neural  Networks for Travel Time Prediction</b></summary>  <p><b>编号</b>：[371]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00149</p>  <p><b>作者</b>：Chi-Hua Chen</p>  <p><b>备注</b>：22 pages, 15 figures, and 3 tables</p>  <p><b>关键词</b>：travel time prediction method based, mean absolute percentage error, traffic information prediction methods, travel time prediction, traffic information prediction</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In recent years, some traffic information prediction methods have beenproposed to provide the precise information of travel time, vehicle speed, andtraffic flow for highways. However, big errors may be obtained by these methodsfor urban roads or the alternative roads of highways. Therefore, this studyproposes a travel time prediction method based on convolutional neural networksto extract important factors for the improvement of traffic informationprediction. In practical experimental environments, the travel time records ofNo. 5 Highway and the alternative roads of its were collected and used toevaluate the proposed method. The results showed that the mean absolutepercentage error of the proposed method was about 5.69%. Therefore, theproposed method based on deep learning techniques can improve the accuracy oftravel time prediction.</p>  </details></details><details>  <summary>137. <b>标题：Uncovering IP Address Hosting Types Behind Malicious Websites</b></summary>  <p><b>编号</b>：[373]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00142</p>  <p><b>作者</b>：Nimesha Wickramasinghe,  Mohamed Nabeel,  Kenneth Thilakaratne,  Chamath Keppitiyagama,  Kasun De Zoysa</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：single entity ), one may blacklist, attackers utilize bullet proof hosting services, hosting providers may take measures, moving towards utilizing ips, regular hosting providers</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Hundreds of thousands of malicious domains are created everyday. Thesemalicious domains are hosted on a wide variety of network infrastructures.Traditionally, attackers utilize bullet proof hosting services (e.g. MaxiDed,Cyber Bunker) to take advantage of relatively lenient policies on what contentthey can host. However, these IP ranges are increasingly being blocked or theservices are taken down by law enforcement. Hence, attackers are moving towardsutilizing IPs from regular hosting providers while staying under the radar ofthese hosting providers. There are several practical advantages of accuratelyknowing the type of IP used to host malicious domains. If the IP is a dedicatedIP (i.e. it is leased to a single entity), one may blacklist the IP to blockdomains hosted on those IPs as welll as use as a way to identify othermalicious domains hosted the same IP. If the IP is a shared hosting IP, hostingproviders may take measures to clean up such domains and maintain a highreputation for their users.</p>  </details></details><details>  <summary>138. <b>标题：Context Meta-Reinforcement Learning via Neuromodulation</b></summary>  <p><b>编号</b>：[375]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00134</p>  <p><b>作者</b>：Eseoghene Ben-Iwhiwhu,  Jeffery Dick,  Nicholas A. Ketz,  Praveen K. Pilly,  Andrea Soltoggio</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：fast adaptation beyond simple benchmark problems, neuromodulation produces significantly better result, evaluated across multiple discrete, produce efficient dynamic representations, obtaining rich dynamic representations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Meta-reinforcement learning (meta-RL) algorithms enable agents to adaptquickly to tasks from few samples in dynamic environments. Such a feat isachieved through dynamic representations in an agent's policy network (obtainedvia reasoning about task context, model parameter updates, or both). However,obtaining rich dynamic representations for fast adaptation beyond simplebenchmark problems is challenging due to the burden placed on the policynetwork to accommodate different policies. This paper addresses the challengeby introducing neuromodulation as a modular component to augment a standardpolicy network that regulates neuronal activities in order to produce efficientdynamic representations for task adaptation. The proposed extension to thepolicy network is evaluated across multiple discrete and continuous controlenvironments of increasing complexity. To prove the generality and benefits ofthe extension in meta-RL, the neuromodulated network was applied to twostate-of-the-art meta-RL algorithms (CAVIA and PEARL). The result demonstratesthat meta-RL augmented with neuromodulation produces significantly betterresult and richer dynamic representations in comparison to the baselines.</p>  </details></details><details>  <summary>139. <b>标题：Three approaches to facilitate DNN generalization to objects in  out-of-distribution orientations and illuminations: late-stopping, tuning  batch normalization and invariance loss</b></summary>  <p><b>编号</b>：[376]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00131</p>  <p><b>作者</b>：Akira Sakai,  Taro Sunagawa,  Spandan Madan,  Kanata Suzuki,  Takashi Katoh,  Hiromichi Kobashi,  Hanspeter Pfister,  Pawan Sinha,  Xavier Boix,  Tomotake Sasaki</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：enable ood accuracy gains -- individual neurons, often biased towards objects, investigate three different approaches, three approaches focus, approaches substantially improves</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The training data distribution is often biased towards objects in certainorientations and illumination conditions. While humans have a remarkablecapability of recognizing objects in out-of-distribution (OoD) orientations andilluminations, Deep Neural Networks (DNNs) severely suffer in this case, evenwhen large amounts of training examples are available. In this paper, weinvestigate three different approaches to improve DNNs in recognizing objectsin OoD orientations and illuminations. Namely, these are (i) training muchlonger after convergence of the in-distribution (InD) validation accuracy,i.e., late-stopping, (ii) tuning the momentum parameter of the batchnormalization layers, and (iii) enforcing invariance of the neural activity inan intermediate layer to orientation and illumination conditions. Each of theseapproaches substantially improves the DNN's OoD accuracy (more than 20% in somecases). We report results in four datasets: two datasets are modified from theMNIST and iLab datasets, and the other two are novel (one of 3D rendered carsand another of objects taken from various controlled orientations andillumination conditions). These datasets allow to study the effects ofdifferent amounts of bias and are challenging as DNNs perform poorly in OoDconditions. Finally, we demonstrate that even though the three approaches focuson different aspects of DNNs, they all tend to lead to the same underlyingneural mechanism to enable OoD accuracy gains -- individual neurons in theintermediate layers become more selective to a category and also invariant toOoD orientations and illuminations.</p>  </details></details><details>  <summary>140. <b>标题：Predicting Critical Biogeochemistry of the Southern Ocean for Climate  Monitoring</b></summary>  <p><b>编号</b>：[378]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00126</p>  <p><b>作者</b>：Ellen Park,  Jae Deok Kim,  Nadege Aoki,  Yumeng Melody Cao,  Yamin Arefeen,  Matthew Beveridge,  David Nicholson,  Iddo Drori</p>  <p><b>备注</b>：6 pages, 4 figures</p>  <p><b>关键词</b>：neural network significantly improves upon linear regression, calculate uncertainty bounds around estimates advance, provide uncertainty bounds around, equipped robotic profiling floats, based hydrographic investigations program</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The Biogeochemical-Argo (BGC-Argo) program is building a network of globallydistributed, sensor-equipped robotic profiling floats, improving ourunderstanding of the climate system and how it is changing. These floats,however, are limited in the number of variables measured. In this study, wetrain neural networks to predict silicate and phosphate values in the SouthernOcean from temperature, pressure, salinity, oxygen, nitrate, and location andapply these models to earth system model (ESM) and BGC-Argo data to expand theutility of this ocean observation network. We trained our neural networks onobservations from the Global Ocean Ship-Based Hydrographic InvestigationsProgram (GO-SHIP) and use dropout regularization to provide uncertainty boundsaround our predicted values. Our neural network significantly improves uponlinear regression but shows variable levels of uncertainty across the ranges ofpredicted variables. We explore the generalization of our estimators to testdata outside our training distribution from both ESM and BGC-Argo data. Our useof out-of-distribution test data to examine shifts in biogeochemical parametersand calculate uncertainty bounds around estimates advance the state-of-the-artin oceanographic data and climate monitoring. We make our data and codepublicly available.</p>  </details></details><details>  <summary>141. <b>标题：Predicting Atlantic Multidecadal Variability</b></summary>  <p><b>编号</b>：[379]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00124</p>  <p><b>作者</b>：Glenn Liu,  Peidong Wang,  Matthew Beveridge,  Young-Oh Kwon,  Iddo Drori</p>  <p><b>备注</b>：7 pages, 3 figures</p>  <p><b>关键词</b>：community earth system model 1 large ensemble project, work tests multiple machine learning models, amv strongly impacts local climate, north atlantic sea surface temperature, traditional persistence forecast baseline</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Atlantic Multidecadal Variability (AMV) describes variations of NorthAtlantic sea surface temperature with a typical cycle of between 60 and 70years. AMV strongly impacts local climate over North America and Europe,therefore prediction of AMV, especially the extreme values, is of greatsocietal utility for understanding and responding to regional climate change.This work tests multiple machine learning models to improve the state of AMVprediction from maps of sea surface temperature, salinity, and sea levelpressure in the North Atlantic region. We use data from the Community EarthSystem Model 1 Large Ensemble Project, a state-of-the-art climate model with3,440 years of data. Our results demonstrate that all of the models we useoutperform the traditional persistence forecast baseline. Predicting the AMV isimportant for identifying future extreme temperatures and precipitation, aswell as hurricane activity, in Europe and North America up to 25 years inadvance.</p>  </details></details><details>  <summary>142. <b>标题：Visual Explanations for Convolutional Neural Networks via Latent  Traversal of Generative Adversarial Networks</b></summary>  <p><b>编号</b>：[384]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00116</p>  <p><b>作者</b>：Amil Dravid,  Aggelos K. Katsaggelos</p>  <p><b>备注</b>：2 pages, 2 figures, to appear as extended abstract at AAAI-22</p>  <p><b>关键词</b>：gan framework disentangles lung structure, weighted class activation mapping, utilizing generative adversarial networks, specifically deep neural networks, convolutional neural network</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Lack of explainability in artificial intelligence, specifically deep neuralnetworks, remains a bottleneck for implementing models in practice. Populartechniques such as Gradient-weighted Class Activation Mapping (Grad-CAM)provide a coarse map of salient features in an image, which rarely tells thewhole story of what a convolutional neural network (CNN) learned. UsingCOVID-19 chest X-rays, we present a method for interpreting what a CNN haslearned by utilizing Generative Adversarial Networks (GANs). Our GAN frameworkdisentangles lung structure from COVID-19 features. Using this GAN, we canvisualize the transition of a pair of COVID negative lungs in a chestradiograph to a COVID positive pair by interpolating in the latent space of theGAN, which provides fine-grained visualization of how the CNN responds tovarying features within the lungs.</p>  </details></details><details>  <summary>143. <b>标题：Combining Public and Private Data</b></summary>  <p><b>编号</b>：[385]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00115</p>  <p><b>作者</b>：Cecilia Ferrando,  Jennifer Gillenwater,  Alex Kulesza</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experiments provide empirical evidence, provide provable privacy guarantees, mixed median estimator based, jorgensen et al, estimating aggregate statistics</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Differential privacy is widely adopted to provide provable privacy guaranteesin data analysis. We consider the problem of combining public and private data(and, more generally, data with heterogeneous privacy needs) for estimatingaggregate statistics. We introduce a mixed estimator of the mean optimized tominimize the variance. We argue that our mechanism is preferable to techniquesthat preserve the privacy of individuals by subsampling data proportionally tothe privacy needs of users. Similarly, we present a mixed median estimatorbased on the exponential mechanism. We compare our mechanisms to the methodsproposed in Jorgensen et al. [2015]. Our experiments provide empirical evidencethat our mechanisms often outperform the baseline methods.</p>  </details></details><details>  <summary>144. <b>标题：FC2T2: The Fast Continuous Convolutional Taylor Transform with  Applications in Vision and Graphics</b></summary>  <p><b>编号</b>：[388]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00110</p>  <p><b>作者</b>：Henning Lange,  J. Nathan Kutz</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：fast continuous convolutional taylor transform, low dimensional convolutional operators, require repeated function evaluations, unlike regular neural networks, modern machine learning perspective</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Series expansions have been a cornerstone of applied mathematics andengineering for centuries. In this paper, we revisit the Taylor seriesexpansion from a modern Machine Learning perspective. Specifically, weintroduce the Fast Continuous Convolutional Taylor Transform (FC2T2), a variantof the Fast Multipole Method (FMM), that allows for the efficient approximationof low dimensional convolutional operators in continuous space. We build uponthe FMM which is an approximate algorithm that reduces the computationalcomplexity of N-body problems from O(NM) to O(N+M) and finds application ine.g. particle simulations. As an intermediary step, the FMM produces a seriesexpansion for every cell on a grid and we introduce algorithms that actdirectly upon this representation. These algorithms analytically butapproximately compute the quantities required for the forward and backward passof the backpropagation algorithm and can therefore be employed as (implicit)layers in Neural Networks. Specifically, we introduce a root-implicit layerthat outputs surface normals and object distances as well as anintegral-implicit layer that outputs a rendering of a radiance field given a 3Dpose. In the context of Machine Learning, $N$ and $M$ can be understood as thenumber of model parameters and model evaluations respectively which entailsthat, for applications that require repeated function evaluations which areprevalent in Computer Vision and Graphics, unlike regular Neural Networks, thetechniques introduce in this paper scale gracefully with parameters. For someapplications, this results in a 200x reduction in FLOPs compared tostate-of-the-art approaches at a reasonable or non-existent loss in accuracy.</p>  </details></details><details>  <summary>145. <b>标题：Evaluation of an Anomaly Detector for Routers using Parameterizable  Malware in an IoT Ecosystem</b></summary>  <p><b>编号</b>：[392]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00097</p>  <p><b>作者</b>：John Carter,  Spiros Mancoridis</p>  <p><b>备注</b>：To appear in Proceedings of the 17th International Conference on Ubiquitous Security (UbiSec 2021)</p>  <p><b>关键词</b>：anomaly detector uses feature sets crafted, machine learning anomaly detector using custom, malware samples multiple degrees, based anomaly detector, support vector machine</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This work explores the evaluation of a machine learning anomaly detectorusing custom-made parameterizable malware in an Internet of Things (IoT)Ecosystem. It is assumed that the malware has infected, and resides on, theLinux router that serves other devices on the network, as depicted in Figure 1.This IoT Ecosystem was developed as a testbed to evaluate the efficacy of abehavior-based anomaly detector. The malware consists of three types ofcustom-made malware: ransomware, cryptominer, and keylogger, which all haveexfiltration capabilities to the network. The parameterization of the malwaregives the malware samples multiple degrees of freedom, specifically relating tothe rate and size of data exfiltration. The anomaly detector uses feature setscrafted from system calls and network traffic, and uses a Support VectorMachine (SVM) for behavioral-based anomaly detection. The custom-made malwareis used to evaluate the situations where the SVM is effective, as well as thesituations where it is not effective.</p>  </details></details><details>  <summary>146. <b>标题：Online Optimization with Feedback Delay and Nonlinear Switching Cost</b></summary>  <p><b>编号</b>：[393]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00095</p>  <p><b>作者</b>：Weici Pan,  Guanya Shi,  Yiheng Lin,  Adam Wierman</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：novel iterative regularized online balanced descent, k $- round $\ textit, e ., costs depend, l ^{ 2k })$,, irobd directly offers constant</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We study a variant of online optimization in which the learner receives$k$-round $\textit{delayed feedback}$ about hitting cost and there is amulti-step nonlinear switching cost, i.e., costs depend on multiple previousactions in a nonlinear manner. Our main result shows that a novel IterativeRegularized Online Balanced Descent (iROBD) algorithm has a constant,dimension-free competitive ratio that is $O(L^{2k})$, where $L$ is theLipschitz constant of the switching cost. Additionally, we provide lower boundsthat illustrate the Lipschitz condition is required and the dependencies on $k$and $L$ are tight. Finally, via reductions, we show that this setting isclosely related to online control problems with delay, nonlinear dynamics, andadversarial disturbances, where iROBD directly offers constant-competitiveonline policies.</p>  </details></details><details>  <summary>147. <b>标题：Optimal Compression of Locally Differentially Private Mechanisms</b></summary>  <p><b>编号</b>：[395]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00092</p>  <p><b>作者</b>：Abhin Shah,  Wei-Ning Chen,  Johannes Balle,  Peter Kairouz,  Lucas Theis</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：ye et al ., 2018 ),, bhowmick et al ., 2018, havasi et al ., 2019, data using shared randomness, best known ldp algorithms</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Compressing the output of \epsilon-locally differentially private (LDP)randomizers naively leads to suboptimal utility. In this work, we demonstratethe benefits of using schemes that jointly compress and privatize the datausing shared randomness. In particular, we investigate a family of schemesbased on Minimal Random Coding (Havasi et al., 2019) and prove that they offeroptimal privacy-accuracy-communication tradeoffs. Our theoretical and empiricalfindings show that our approach can compress PrivUnit (Bhowmick et al., 2018)and Subset Selection (Ye et al., 2018), the best known LDP algorithms for meanand frequency estimation, to to the order of \epsilon-bits of communicationwhile preserving their privacy and accuracy guarantees.</p>  </details></details><details>  <summary>148. <b>标题：A Scalable AutoML Approach Based on Graph Neural Networks</b></summary>  <p><b>编号</b>：[400]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00083</p>  <p><b>作者</b>：Mossad Helali,  Essam Mansour,  Ibrahim Abdelaziz,  Julian Dolby,  Kavitha Srinivas</p>  <p><b>备注</b>：15 pages, 10 figures</p>  <p><b>关键词</b>：corresponding historically used pipelines using effective static analysis instead, automl systems build machine learning models automatically, models automl pipeline creation, ability via integrating kgpip, diverse pipelines seen</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>AutoML systems build machine learning models automatically by performing asearch over valid data transformations and learners, along with hyper-parameteroptimization for each learner. We present a system called KGpip for theselection of transformations and learners, which (1) builds a database ofdatasets and corresponding historically used pipelines using effective staticanalysis instead of the typical use of actual runtime information, (2) usesdataset embeddings to find similar datasets in the database based on itscontent instead of metadata-based features, (3) models AutoML pipeline creationas a graph generation problem, to succinctly characterize the diverse pipelinesseen for a single dataset. KGpip is designed as a sub-component for AutoMLsystems. We demonstrate this ability via integrating KGpip with two AutoMLsystems and show that it does significantly enhance the performance of existingstate-of-the-art systems.</p>  </details></details><details>  <summary>149. <b>标题：Deep Deterministic Uncertainty for Semantic Segmentation</b></summary>  <p><b>编号</b>：[403]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00079</p>  <p><b>作者</b>：Jishnu Mukhoti,  Joost van Amersfoort,  Philip H.S. Torr,  Yarin Gal</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：uncertainty estimation using feature space densities, ddu improves upon mc dropout, apply ddu location independently, extend deep deterministic uncertainty, pixel dependent ddu</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We extend Deep Deterministic Uncertainty (DDU), a method for uncertaintyestimation using feature space densities, to semantic segmentation. DDU enablesquantifying and disentangling epistemic and aleatoric uncertainty in a singleforward pass through the model. We study the similarity of featurerepresentations of pixels at different locations for the same class andconclude that it is feasible to apply DDU location independently, which leadsto a significant reduction in memory consumption compared to pixel dependentDDU. Using the DeepLab-v3+ architecture on Pascal VOC 2012, we show that DDUimproves upon MC Dropout and Deep Ensembles while being significantly faster tocompute.</p>  </details></details><details>  <summary>150. <b>标题：Generalized Proximal Policy Optimization with Sample Reuse</b></summary>  <p><b>编号</b>：[406]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00072</p>  <p><b>作者</b>：James Queeney,  Ioannis Ch. Paschalidis,  Christos G. Cassandras</p>  <p><b>备注</b>：To appear in 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：policy methods typically generate reliable policy improvement throughout training, call generalized proximal policy optimization, develop policy improvement guarantees, driven reinforcement learning methods, world decision making tasks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In real-world decision making tasks, it is critical for data-drivenreinforcement learning methods to be both stable and sample efficient.On-policy methods typically generate reliable policy improvement throughouttraining, while off-policy methods make more efficient use of data throughsample reuse. In this work, we combine the theoretically supported stabilitybenefits of on-policy algorithms with the sample efficiency of off-policyalgorithms. We develop policy improvement guarantees that are suitable for theoff-policy setting, and connect these bounds to the clipping mechanism used inProximal Policy Optimization. This motivates an off-policy version of thepopular algorithm that we call Generalized Proximal Policy Optimization withSample Reuse. We demonstrate both theoretically and empirically that ouralgorithm delivers improved performance by effectively balancing the competinggoals of stability and sample efficiency.</p>  </details></details><details>  <summary>151. <b>标题：Deep inference of latent dynamics with spatio-temporal super-resolution  using selective backpropagation through time</b></summary>  <p><b>编号</b>：[408]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00070</p>  <p><b>作者</b>：Feng Zhu,  Andrew R. Sedler,  Harrison A. Grier,  Nauman Ahad,  Mark A. Davenport,  Matthew T. Kaufman,  Andrea Giovannucci,  Chethan Pandarinath</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：frequency temporal structure underlying neural population activity, novel neural network training strategy, million neurons within brain circuits, modern neural interfaces allow access, exploiting relationships among neurons</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Modern neural interfaces allow access to the activity of up to a millionneurons within brain circuits. However, bandwidth limits often create atrade-off between greater spatial sampling (more channels or pixels) and thetemporal frequency of sampling. Here we demonstrate that it is possible toobtain spatio-temporal super-resolution in neuronal time series by exploitingrelationships among neurons, embedded in latent low-dimensional populationdynamics. Our novel neural network training strategy, selective backpropagationthrough time (SBTT), enables learning of deep generative models of latentdynamics from data in which the set of observed variables changes at each timestep. The resulting models are able to infer activity for missing samples bycombining observations with learned latent dynamics. We test SBTT applied tosequential autoencoders and demonstrate more efficient and higher-fidelitycharacterization of neural population dynamics in electrophysiological andcalcium imaging data. In electrophysiology, SBTT enables accurate inference ofneuronal population dynamics with lower interface bandwidths, providing anavenue to significant power savings for implanted neuroelectronic interfaces.In applications to two-photon calcium imaging, SBTT accurately uncovershigh-frequency temporal structure underlying neural population activity,substantially outperforming the current state-of-the-art. Finally, wedemonstrate that performance could be further improved by using limited,high-bandwidth sampling to pretrain dynamics models, and then using SBTT toadapt these models for sparsely-sampled data.</p>  </details></details><details>  <summary>152. <b>标题：Node Feature Extraction by Self-Supervised Multi-scale Neighborhood  Prediction</b></summary>  <p><b>编号</b>：[410]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00064</p>  <p><b>作者</b>：Eli Chien,  Wei-Cheng Chang,  Cho-Jui Hsieh,  Hsiang-Fu Yu,  Jiong Zhang,  Olgica Milenkovic,  Inderjit S Dhillon</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：graph information aided node feature extraction, agnostic within standard gnn pipelines, fully utilizing potential correlations, take numerical node features, extracting numerical node features</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Learning on graphs has attracted significant attention in the learningcommunity due to numerous real-world applications. In particular, graph neuralnetworks (GNNs), which take numerical node features and graph structure asinputs, have been shown to achieve state-of-the-art performance on variousgraph-related learning tasks. Recent works exploring the correlation betweennumerical node features and graph structure via self-supervised learning havepaved the way for further performance improvements of GNNs. However, methodsused for extracting numerical node features from raw data are stillgraph-agnostic within standard GNN pipelines. This practice is sub-optimal asit prevents one from fully utilizing potential correlations between graphtopology and node attributes. To mitigate this issue, we propose a newself-supervised learning framework, Graph Information Aided Node featureexTraction (GIANT). GIANT makes use of the eXtreme Multi-label Classification(XMC) formalism, which is crucial for fine-tuning the language model based ongraph information, and scales to large datasets. We also provide a theoreticalanalysis that justifies the use of XMC over link prediction and motivatesintegrating XR-Transformers, a powerful method for solving XMC problems, intothe GIANT framework. We demonstrate the superior performance of GIANT over thestandard GNN pipeline on Open Graph Benchmark datasets: For example, we improvethe accuracy of the top-ranked method GAMLP from $68.25\%$ to $69.67\%$, SGCfrom $63.29\%$ to $66.10\%$ and MLP from $47.24\%$ to $61.10\%$ on theogbn-papers100M dataset by leveraging GIANT.</p>  </details></details><details>  <summary>153. <b>标题：Improving Generalization Bounds for VC Classes Using the Hypergeometric  Tail Inversion</b></summary>  <p><b>编号</b>：[412]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00062</p>  <p><b>作者</b>：Jean-Samuel Leboeuf,  Frédéric LeBlanc,  Mario Marchand</p>  <p><b>备注</b>：15 pages (body), 36 pages (appendices), 54 pages (total), 13 figures</p>  <p><b>关键词</b>：using two main ideas, reasonable data set sizes, independent risk upper bound, numerical comparisons show, nearly never vacuous</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We significantly improve the generalization bounds for VC classes by usingtwo main ideas. First, we consider the hypergeometric tail inversion to obtaina very tight non-uniform distribution-independent risk upper bound for VCclasses. Second, we optimize the ghost sample trick to obtain a furthernon-negligible gain. These improvements are then used to derive a relativedeviation bound, a multiclass margin bound, as well as a lower bound. Numericalcomparisons show that the new bound is nearly never vacuous, and is tighterthan other VC bounds for all reasonable data set sizes.</p>  </details></details><details>  <summary>154. <b>标题：Word embeddings for topic modeling: an application to the estimation of  the economic policy uncertainty index</b></summary>  <p><b>编号</b>：[413]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00057</p>  <p><b>作者</b>：Hairo U. Miranda Belmonte,  Victor Muñiz-Sánchez,  Francisco Corona</p>  <p><b>备注</b>：Preprint version</p>  <p><b>关键词</b>：use computationally intensive methods, proper way based solely, proposal allow us, new document assignation, latent dirichlet allocation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Quantification of economic uncertainty is a key concept for the prediction ofmacro economic variables such as gross domestic product (GDP), and it becomesparticularly relevant on real-time or short-time predictions methodologies,such as nowcasting, where it is required a large amount of time series data,commonly with different structures and frequencies. Most of the data comes fromthe official agencies statistics and non-public institutions, however, relyingour estimates in just the traditional data mentioned before, have somedisadvantages. One of them is that economic uncertainty could not berepresented or measured in a proper way based solely in financial ormacroeconomic data, another one, is that they are susceptible to lack ofinformation due to extraordinary events, such as the current COVID-19 pandemic.For these reasons, it is very common nowadays to use some non-traditional datafrom different sources, such as social networks or digital newspapers, inaddition to the traditional data from official sources. The economic policyuncertainty (EPU) index, is the most used newspaper-based indicator to quantifythe uncertainty, and is based on topic modeling of newspapers. In this paper,we propose a methodology to estimate the EPU index, which incorporates a fastand efficient method for topic modeling of digital news based on semanticclustering with word embeddings, allowing to update the index in real-time,which is a drawback with another proposals that use computationally intensivemethods for topic modeling, such as Latent Dirichlet Allocation (LDA). We showthat our proposal allow us to update the index and significantly reduces thetime required for new document assignation into topics.</p>  </details></details><details>  <summary>155. <b>标题：Generalized Data Weighting via Class-level Gradient Manipulation</b></summary>  <p><b>编号</b>：[414]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00056</p>  <p><b>作者</b>：Can Chen,  Shuhao Zheng,  Xi Chen,  Erqun Dong,  Xue Liu,  Hao Liu,  Dejing Dou</p>  <p><b>备注</b>：17 pages, 8 figures, accepted by NeurIPS 2021 for a poster session, camera-ready version, initial submission to arXiv</p>  <p><b>关键词</b>：60 \%$ uniform noise setting, gdw achieves remarkable performance improvement, extra computational cost compared, simultaneously mitigate label noise, propose generalized data weighting</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Label noise and class imbalance are two major issues coexisting in real-worlddatasets. To alleviate the two issues, state-of-the-art methods reweight eachinstance by leveraging a small amount of clean and unbiased data. Yet, thesemethods overlook class-level information within each instance, which can befurther utilized to improve performance. To this end, in this paper, we proposeGeneralized Data Weighting (GDW) to simultaneously mitigate label noise andclass imbalance by manipulating gradients at the class level. To be specific,GDW unrolls the loss gradient to class-level gradients by the chain rule andreweights the flow of each gradient separately. In this way, GDW achievesremarkable performance improvement on both issues. Aside from the performancegain, GDW efficiently obtains class-level weights without introducing any extracomputational cost compared with instance weighting methods. Specifically, GDWperforms a gradient descent step on class-level weights, which only relies onintermediate gradients. Extensive experiments in various settings verify theeffectiveness of GDW. For example, GDW outperforms state-of-the-art methods by$2.56\%$ under the $60\%$ uniform noise setting in CIFAR10. Our code isavailable at this https URL.</p>  </details></details><details>  <summary>156. <b>标题：Symbolic Regression via Neural-Guided Genetic Programming Population  Seeding</b></summary>  <p><b>编号</b>：[415]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00053</p>  <p><b>作者</b>：T. Nathan Mundhenk,  Mikel Landajuela,  Ruben Glatt,  Claudio P. Santiago,  Daniel M. Faissol,  Brenden K. Petersen</p>  <p><b>备注</b>：Accepted at the 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：running many genetic programming generations without interdependence, discrete optimization problem generally believed, random restart genetic programming component, gradually learning better starting populations, 22 symbolic regression benchmark problems</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Symbolic regression is the process of identifying mathematical expressionsthat fit observed output from a black-box process. It is a discreteoptimization problem generally believed to be NP-hard. Prior approaches tosolving the problem include neural-guided search (e.g. using reinforcementlearning) and genetic programming. In this work, we introduce a hybridneural-guided/genetic programming approach to symbolic regression and othercombinatorial optimization problems. We propose a neural-guided component usedto seed the starting population of a random restart genetic programmingcomponent, gradually learning better starting populations. On a number ofcommon benchmark tasks to recover underlying expressions from a dataset, ourmethod recovers 65% more expressions than a recently published top-performingmodel using the same experimental setup. We demonstrate that running manygenetic programming generations without interdependence on the neural-guidedcomponent performs better for symbolic regression than alternative formulationswhere the two are more strongly coupled. Finally, we introduce a new set of 22symbolic regression benchmark problems with increased difficulty over existingbenchmarks. Source code is provided atthis http URL.</p>  </details></details><details>  <summary>157. <b>标题：On the Power of Edge Independent Graph Models</b></summary>  <p><b>编号</b>：[417]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00048</p>  <p><b>作者</b>：Sudhanshu Chanpuriya,  Cameron Musco,  Konstantinos Sotiropoulos,  Charalampos E. Tsourakakis</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：based graph generative models fail, edge independent random graph models, reconstructing many graph statistics, edge independent models, modern generative models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Why do many modern neural-network-based graph generative models fail toreproduce typical real-world network characteristics, such as high triangledensity? In this work we study the limitations of edge independent random graphmodels, in which each edge is added to the graph independently with someprobability. Such models include both the classic Erdös-Rényi andstochastic block models, as well as modern generative models such as NetGAN,variational graph autoencoders, and CELL. We prove that subject to a boundedoverlap condition, which ensures that the model does not simply memorize asingle graph, edge independent models are inherently limited in their abilityto generate graphs with high triangle and other subgraph densities. Notably,such high densities are known to appear in real-world social networks and othergraphs. We complement our negative results with a simple generative model thatbalances overlap and accuracy, performing comparably to more complex models inreconstructing many graph statistics.</p>  </details></details><details>  <summary>158. <b>标题：Skyformer: Remodel Self-Attention with Gaussian Kernel and Nyström  Method</b></summary>  <p><b>编号</b>：[420]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00035</p>  <p><b>作者</b>：Yifan Chen,  Qi Zeng,  Heng Ji,  Yun Yang</p>  <p><b>备注</b>：To appear in NeurIPS 2021</p>  <p><b>关键词</b>：long range arena benchmark show, computational cost without sacrificing, requiring fewer computation resources, although kernel machines suffer, high computational cost</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Transformers are expensive to train due to the quadratic time and spacecomplexity in the self-attention mechanism. On the other hand, although kernelmachines suffer from the same computation bottleneck in pairwise dot products,several approximation schemes have been successfully incorporated toconsiderably reduce their computational cost without sacrificing too muchaccuracy. In this work, we leverage the computation methods for kernel machinesto alleviate the high computational cost and introduce Skyformer, whichreplaces the softmax structure with a Gaussian kernel to stabilize the modeltraining and adapts the Nyström method to a non-positive semidefinite matrixto accelerate the computation. We further conduct theoretical analysis byshowing that the matrix approximation error of our proposed method is small inthe spectral norm. Experiments on Long Range Arena benchmark show that theproposed method is sufficient in getting comparable or even better performancethan the full self-attention while requiring fewer computation resources.</p>  </details></details><details>  <summary>159. <b>标题：Federated Semi-Supervised Learning with Class Distribution Mismatch</b></summary>  <p><b>编号</b>：[421]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00010</p>  <p><b>作者</b>：Zhiguo Wang,  Xintong Wang,  Ruoyu Sun,  Tsung-Hui Chang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：introduce two proper regularization terms, }( 1 /\ sqrt, first formal convergence result, acquire complete data labels, many existing federated learning</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Many existing federated learning (FL) algorithms are designed for supervisedlearning tasks, assuming that the local data owned by the clients are welllabeled. However, in many practical situations, it could be difficult andexpensive to acquire complete data labels. Federated semi-supervised learning(Fed-SSL) is an attractive solution for fully utilizing both labeled andunlabeled data. Similar to that encountered in federated supervised learning,class distribution of labeled/unlabeled data could be non-i.i.d. among clients.Besides, in each client, the class distribution of labeled data may be distinctfrom that of unlabeled data. Unfortunately, both can severely jeopardize the FLperformance. To address such challenging issues, we introduce two properregularization terms that can effectively alleviate the class distributionmismatch problem in Fed-SSL. In addition, to overcome the non-i.i.d. data, weleverage the variance reduction and normalized averaging techniques to developa novel Fed-SSL algorithm. Theoretically, we prove that the proposed method hasa convergence rate of $\mathcal{O}(1/\sqrt{T})$, where $T$ is the number ofcommunication rounds, even when the data distribution are non-i.i.d. amongclients. To the best of our knowledge, it is the first formal convergenceresult for Fed-SSL problems. Numerical experiments based on MNIST data andCIFAR-10 data show that the proposed method can greatly improve theclassification accuracy compared to baselines.</p>  </details></details><details>  <summary>160. <b>标题：Domain Agnostic Few-Shot Learning For Document Intelligence</b></summary>  <p><b>编号</b>：[423]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00007</p>  <p><b>作者</b>：Jaya Krishna Mandivarapu,  Eric bunch,  Glenn fung</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：proposed method shows consistent improvements, shot document image classification, experimental results demonstrate, methods also aim, collecting large samples</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Few-shot learning aims to generalize to novel classes with only a few sampleswith class labels. Research in few-shot learning has borrowed techniques fromtransfer learning, metric learning, meta-learning, and Bayesian methods. Thesemethods also aim to train models from limited training samples, and whileencouraging performance has been achieved, they often fail to generalize tonovel domains. Many of the existing meta-learning methods rely on training datafor which the base classes are sampled from the same domain as the novelclasses used for meta-testing. However, in many applications in the industry,such as document classification, collecting large samples of data formeta-learning is infeasible or impossible. While research in the field of thecross-domain few-shot learning exists, it is mostly limited to computer vision.To our knowledge, no work yet exists that examines the use of few-shot learningfor classification of semi-structured documents (scans of paper documents)generated as part of a business workflow (forms, letters, bills, etc.). Herethe domain shift is significant, going from natural images to thesemi-structured documents of interest. In this work, we address the problem offew-shot document image classification under domain shift. We evaluate our workby extensive comparisons with existing methods. Experimental resultsdemonstrate that the proposed method shows consistent improvements on thefew-shot classification performance under domain shift.</p>  </details></details><details>  <summary>161. <b>标题：Adaptive Hierarchical Similarity Metric Learning with Noisy Labels</b></summary>  <p><b>编号</b>：[424]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00006</p>  <p><b>作者</b>：Jiexi Yan,  Lei Luo,  Cheng Deng,  Heng Huang</p>  <p><b>备注</b>：11 pages, 5 figures</p>  <p><b>关键词</b>：noisy labels often cause severe performance degradation, effectively excavate richer similarity information beyond binary, adaptive hierarchical similarity metric learning method, existing deep metric learning methods, current deep metric learning approaches</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep Metric Learning (DML) plays a critical role in various machine learningtasks. However, most existing deep metric learning methods with binarysimilarity are sensitive to noisy labels, which are widely present inreal-world data. Since these noisy labels often cause severe performancedegradation, it is crucial to enhance the robustness and generalization abilityof DML. In this paper, we propose an Adaptive Hierarchical Similarity MetricLearning method. It considers two noise-insensitive information, \textit{i.e.},class-wise divergence and sample-wise consistency. Specifically, class-wisedivergence can effectively excavate richer similarity information beyond binaryin modeling by taking advantage of Hyperbolic metric learning, whilesample-wise consistency can further improve the generalization ability of themodel using contrastive augmentation. More importantly, we design an adaptivestrategy to integrate this information in a unified view. It is noteworthy thatthe new method can be extended to any pair-based metric loss. Extensiveexperimental results on benchmark datasets demonstrate that our method achievesstate-of-the-art performance compared with current deep metric learningapproaches.</p>  </details></details><details>  <summary>162. <b>标题：Earning Sans Learning: Noisy Decision-Making and Labor Supply on Gig  Economy Platforms</b></summary>  <p><b>编号</b>：[428]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00002</p>  <p><b>作者</b>：Daniel Freund,  Chamsi Hssaine</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：complex stochastic optimization problem whose natural fluid relaxation, consider captures two key, finding optimal compensation schemes, driven observations suggest may, asymptotically optimal amongst</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We study a gig economy platform's problem of finding optimal compensationschemes when faced with workers who myopically base their participationdecisions on limited information with respect to their earnings. The stylizedmodel we consider captures two key, related features absent from prior work onthe operations of on-demand service platforms: (i) workers' lack of informationregarding the distribution from which their earnings are drawn and (ii) workerdecisions that are sensitive to variability in earnings. Despite its stylizednature, our model induces a complex stochastic optimization problem whosenatural fluid relaxation is also a priori intractable. Nevertheless, we uncovera surprising structural property of the relaxation that allows us to design atractable, fast-converging heuristic policy that is asymptotically optimalamongst the space of all policies that fulfill a fairness property. In doingso, via both theory and extensive simulations, we uncover phenomena that mayarise when earnings are volatile and hard to predict, as both the empiricalliterature and our own data-driven observations suggest may be prevalent on gigeconomy platforms.</p>  </details></details><details>  <summary>163. <b>标题：NOTMAD: Estimating Bayesian Networks with Sample-Specific Structures and  Parameters</b></summary>  <p><b>编号</b>：[429]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01104</p>  <p><b>作者</b>：Ben Lengerich,  Caleb Ellington,  Bryon Aragam,  Eric P. Xing,  Manolis Kellis</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：graph generator functions )., specific gene expression networks, mix archetypal networks according, smooth regularization loss, limiting statistical power</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Context-specific Bayesian networks (i.e. directed acyclic graphs, DAGs)identify context-dependent relationships between variables, but thenon-convexity induced by the acyclicity requirement makes it difficult to shareinformation between context-specific estimators (e.g. with graph generatorfunctions). For this reason, existing methods for inferring context-specificBayesian networks have favored breaking datasets into subsamples, limitingstatistical power and resolution, and preventing the use of multidimensionaland latent contexts. To overcome this challenge, we propose NOTEARS-optimizedMixtures of Archetypal DAGs (NOTMAD). NOTMAD models context-specific Bayesiannetworks as the output of a function which learns to mix archetypal networksaccording to sample context. The archetypal networks are estimated jointly withthe context-specific networks and do not require any prior knowledge. We encodethe acyclicity constraint as a smooth regularization loss which isback-propagated to the mixing function; in this way, NOTMAD shares informationbetween context-specific acyclic graphs, enabling the estimation of Bayesiannetwork structures and parameters at even single-sample resolution. Wedemonstrate the utility of NOTMAD and sample-specific network inference throughanalysis and experiments, including patient-specific gene expression networkswhich correspond to morphological variation in cancer.</p>  </details></details><details>  <summary>164. <b>标题：STORM+: Fully Adaptive SGD with Momentum for Nonconvex Optimization</b></summary>  <p><b>编号</b>：[433]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01040</p>  <p><b>作者</b>：Kfir Y. Levy,  Ali Kavis,  Volkan Cevher</p>  <p><b>备注</b>：25 pages, 1 figure, accepted to NeurIPS 2021</p>  <p><b>关键词</b>：method called storm crucially relies, challenging hyperparameter tuning problem, obtain tight convergence rates, propose storm +,, smooth loss functions</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this work we investigate stochastic non-convex optimization problems wherethe objective is an expectation over smooth loss functions, and the goal is tofind an approximate stationary point. The most popular approach to handlingsuch problems is variance reduction techniques, which are also known to obtaintight convergence rates, matching the lower bounds in this case. Nevertheless,these techniques require a careful maintenance of anchor points in conjunctionwith appropriately selected "mega-batchsizes". This leads to a challenginghyperparameter tuning problem, that weakens their practicality. Recently,[Cutkosky and Orabona, 2019] have shown that one can employ recursive momentumin order to avoid the use of anchor points and large batchsizes, and stillobtain the optimal rate for this setting. Yet, their method called STORMcrucially relies on the knowledge of the smoothness, as well a bound on thegradient norms. In this work we propose STORM+, a new method that is completelyparameter-free, does not require large batch-sizes, and obtains the optimal$O(1/T^{1/3})$ rate for finding an approximate stationary point. Our workbuilds on the STORM algorithm, in conjunction with a novel approach toadaptively set the learning rate and momentum parameters.</p>  </details></details><details>  <summary>165. <b>标题：Interpretable and Explainable Machine Learning for Materials Science and  Chemistry</b></summary>  <p><b>编号</b>：[434]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01037</p>  <p><b>作者</b>：Felipe Oviedo,  Juan Lavista Ferres,  Tonio Buonassisi,  Keith Butler</p>  <p><b>备注</b>：Under review Accounts of Material Research</p>  <p><b>关键词</b>：qualities beyond purely predictive power, unveiling unexpected correlations, successful scientific discovery, potential model issues, machine learning models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>While the uptake of data-driven approaches for materials science is at anexciting, early stage, to realise the true potential of machine learning modelsfor successful scientific discovery, they must have qualities beyond purelypredictive power. The predictions and inner workings of models should provide acertain degree of explainability by human experts, permitting theidentification of potential model issues or limitations, building trust onmodel predictions and unveiling unexpected correlations that may lead toscientific insights. In this work, we summarize applications ofinterpretability and explainability techniques for materials science andchemistry and discuss how these techniques can improve the outcome ofscientific studies.</p>  </details></details><details>  <summary>166. <b>标题：Fragment-based Sequential Translation for Molecular Optimization</b></summary>  <p><b>编号</b>：[436]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01009</p>  <p><b>作者</b>：Benson Chen,  Xiang Fu,  Regina Barzilay,  Tommi Jaakkola</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：generates molecules using learned molecular fragments -- meaningful substructures, many existing frameworks generate molecules one atom, objective molecular optimization tasks, complex chemical property space, encode molecular fragments</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Searching for novel molecular compounds with desired properties is animportant problem in drug discovery. Many existing frameworks generatemolecules one atom at a time. We instead propose a flexible editing paradigmthat generates molecules using learned molecular fragments--meaningfulsubstructures of molecules. To do so, we train a variational autoencoder (VAE)to encode molecular fragments in a coherent latent space, which we then utilizeas a vocabulary for editing molecules to explore the complex chemical propertyspace. Equipped with the learned fragment vocabulary, we propose Fragment-basedSequential Translation (FaST), which learns a reinforcement learning (RL)policy to iteratively translate model-discovered molecules into increasinglynovel molecules while satisfying desired properties. Empirical evaluation showsthat FaST significantly improves over state-of-the-art methods on benchmarksingle/multi-objective molecular optimization tasks.</p>  </details></details><details>  <summary>167. <b>标题：Modelling the transition to a low-carbon energy supply</b></summary>  <p><b>编号</b>：[438]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00987</p>  <p><b>作者</b>：Alexander Kell</p>  <p><b>备注</b>：PhD thesis</p>  <p><b>关键词</b>：reducing carbon emissions could help prevent, runaway emissions could lead, whole electricity market reacts, different factors using state, reliable energy supply</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>A transition to a low-carbon electricity supply is crucial to limit theimpacts of climate change. Reducing carbon emissions could help prevent theworld from reaching a tipping point, where runaway emissions are likely.Runaway emissions could lead to extremes in weather conditions around the world-- especially in problematic regions unable to cope with these conditions.However, the movement to a low-carbon energy supply can not happeninstantaneously due to the existing fossil-fuel infrastructure and therequirement to maintain a reliable energy supply. Therefore, a low-carbontransition is required, however, the decisions various stakeholders should makeover the coming decades to reduce these carbon emissions are not obvious. Thisis due to many long-term uncertainties, such as electricity, fuel andgeneration costs, human behaviour and the size of electricity demand. A wellchoreographed low-carbon transition is, therefore, required between all of theheterogenous actors in the system, as opposed to changing the behaviour of asingle, centralised actor. The objective of this thesis is to create a novel,open-source agent-based model to better understand the manner in which thewhole electricity market reacts to different factors using state-of-the-artmachine learning and artificial intelligence methods. In contrast to otherworks, this thesis looks at both the long-term and short-term impact thatdifferent behaviours have on the electricity market by using thesestate-of-the-art methods.</p>  </details></details><details>  <summary>168. <b>标题：Robustness of deep learning algorithms in astronomy -- galaxy morphology  studies</b></summary>  <p><b>编号</b>：[440]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00961</p>  <p><b>作者</b>：A. Ćiprijanović,  D. Kafkes,  G. N. Perdue,  K. Pedro,  G. Snyder,  F. J. Sánchez,  S. Madireddy,  S. M. Wild,  B. Nord</p>  <p><b>备注</b>：Accepted in: Fourth Workshop on Machine Learning and the Physical Sciences (35th Conference on Neural Information Processing Systems; NeurIPS2021); final version</p>  <p><b>关键词</b>：help improve model robustness, help scientists build, naturally occurring attacks, domain adaptation techniques, common image processing</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep learning models are being increasingly adopted in wide array ofscientific domains, especially to handle high-dimensionality and volume of thescientific data. However, these models tend to be brittle due to theircomplexity and overparametrization, especially to the inadvertent adversarialperturbations that can appear due to common image processing such ascompression or blurring that are often seen with real scientific data. It iscrucial to understand this brittleness and develop models robust to theseadversarial perturbations. To this end, we study the effect of observationalnoise from the exposure time, as well as the worst case scenario of a one-pixelattack as a proxy for compression or telescope errors on performance ofResNet18 trained to distinguish between galaxies of different morphologies inLSST mock data. We also explore how domain adaptation techniques can helpimprove model robustness in case of this type of naturally occurring attacksand help scientists build more trustworthy and stable models.</p>  </details></details><details>  <summary>169. <b>标题：PCA-based Multi Task Learning: a Random Matrix Approach</b></summary>  <p><b>编号</b>：[442]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00924</p>  <p><b>作者</b>：Malik Tiomoko,  Romain Couillet,  Frédéric Pascal</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：pca )- based supervised learning schemes, proposed method achieves comparable performance, default learning may dramatically fail, significantly reduced computational cost }., data labels avert negative transfer</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The article proposes and theoretically analyses a \emph{computationallyefficient} multi-task learning (MTL) extension of popular principal componentanalysis (PCA)-based supervised learning schemes\cite{barshan2011supervised,bair2006prediction}. The analysis reveals that (i)by default learning may dramatically fail by suffering from \emph{negativetransfer}, but that (ii) simple counter-measures on data labels avert negativetransfer and necessarily result in improved performances.Supporting experiments on synthetic and real data benchmarks show that theproposed method achieves comparable performance with state-of-the-art MTLmethods but at a \emph{significantly reduced computational cost}.</p>  </details></details><details>  <summary>170. <b>标题：A multi-task learning-based optimization approach for finding diverse  sets of material microstructures with desired properties and its application  to texture optimization</b></summary>  <p><b>编号</b>：[443]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00916</p>  <p><b>作者</b>：Tarek Iraki,  Lukas Morand,  Johannes Dornheim,  Norbert Link,  Dirk Helm</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：rolled steel sheets given desired properties, lower dimensional latent feature space, distance preserving microstructure feature extraction, crystallographic texture optimization problem, given desired properties</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The optimization along the chain processing-structure-properties-performanceis one of the core objectives in data-driven materials science. In this sense,processes are supposed to manufacture workpieces with targeted materialmicrostructures. These microstructures are defined by the material propertiesof interest and identifying them is a question of materials design. In thepresent paper, we addresse this issue and introduce a generic multi-tasklearning-based optimization approach. The approach enables the identificationof sets of highly diverse microstructures for given desired properties andcorresponding tolerances. Basically, the approach consists of an optimizationalgorithm that interacts with a machine learning model that combines multi-tasklearning with siamese neural networks. The resulting model (1) relatesmicrostructures and properties, (2) estimates the likelihood of amicrostructure of being producible, and (3) performs a distance preservingmicrostructure feature extraction in order to generate a lower dimensionallatent feature space to enable efficient optimization. The proposed approach isapplied on a crystallographic texture optimization problem for rolled steelsheets given desired properties.</p>  </details></details><details>  <summary>171. <b>标题：Free Probability, Newton lilypads and Jacobians of neural networks</b></summary>  <p><b>编号</b>：[445]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00841</p>  <p><b>作者</b>：Reda Chhaibi,  Tariq Daouda,  Ezechiel Kahn</p>  <p><b>备注</b>：22 pages, 4 figures</p>  <p><b>关键词</b>：newton algorithm finds contiguous lilypad, modeled using free multiplicative convolutions, pennington et al .,, free probability theory, free probability metrics</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Gradient descent during the learning process of a neural network can besubject to many instabilities. The spectral density of the Jacobian is a keycomponent for analyzing robustness. Following the works of Pennington et al.,such Jacobians are modeled using free multiplicative convolutions from FreeProbability Theory. We present a reliable and very fast method for computingthe associated spectral densities. This method has a controlled and provenconvergence.Our technique is based on an adaptative Newton-Raphson scheme, by finding andchaining basins of attraction: the Newton algorithm finds contiguouslilypad-like basins and steps from one to the next, heading towards theobjective.We demonstrate the applicability of our method by using it to assess how thelearning process is affected by network depth, layer widths and initializationchoices: empirically, final test losses are very correlated to our FreeProbability metrics.</p>  </details></details><details>  <summary>172. <b>标题：Swift sky localization of gravitational waves using deep learning seeded  importance sampling</b></summary>  <p><b>编号</b>：[447]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00833</p>  <p><b>作者</b>：Alex Kolmus,  Grégory Baltus,  Justin Janquart,  Twan van Laarhoven,  Sarah Caudill,  Tom Heskes</p>  <p><b>备注</b>：12 pages, 9 figures, 1 table</p>  <p><b>关键词</b>：highly resemble predictions generated using bayesian inference, gravitational waves would enable real, given simulated gravitational wave injections, neural network parametrizes von mises, current bayesian inference methodologies</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Fast, highly accurate, and reliable inference of the sky origin ofgravitational waves would enable real-time multi-messenger astronomy. CurrentBayesian inference methodologies, although highly accurate and reliable, areslow. Deep learning models have shown themselves to be accurate and extremelyfast for inference tasks on gravitational waves, but their output is inherentlyquestionable due to the blackbox nature of neural networks. In this work, wejoin Bayesian inference and deep learning by applying importance sampling on anapproximate posterior generated by a multi-headed convolutional neural network.The neural network parametrizes Von Mises-Fisher and Gaussian distributions forthe sky coordinates and two masses for given simulated gravitational waveinjections in the LIGO and Virgo detectors. We generate skymaps for unseengravitational-wave events that highly resemble predictions generated usingBayesian inference in a few minutes. Furthermore, we can detect poorpredictions from the neural network, and quickly flag them.</p>  </details></details><details>  <summary>173. <b>标题：Dynamic Pricing and Demand Learning on a Large Network of Products: A  PAC-Bayesian Approach</b></summary>  <p><b>编号</b>：[449]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00790</p>  <p><b>作者</b>：Bora Keskin,  David Simchi-Levi,  Prem Talwai</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：policy achieves asymptotically optimal performance, study three different sparsity frameworks, expected revenue loss relative, characterize various connectivity properties, dynamically adjust product prices</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We consider a seller offering a large network of $N$ products over a timehorizon of $T$ periods. The seller does not know the parameters of theproducts' linear demand model, and can dynamically adjust product prices tolearn the demand model based on sales observations. The seller aims to minimizeits pseudo-regret, i.e., the expected revenue loss relative to a clairvoyantwho knows the underlying demand model. We consider a sparse set of demandrelationships between products to characterize various connectivity propertiesof the product network. In particular, we study three different sparsityframeworks: (1) $L_0$ sparsity, which constrains the number of connections inthe network, and (2) off-diagonal sparsity, which constrains the magnitude ofcross-product price sensitivities, and (3) a new notion of spectral sparsity,which constrains the asymptotic decay of a similarity metric on network nodes.We propose a dynamic pricing-and-learning policy that combines theoptimism-in-the-face-of-uncertainty and PAC-Bayesian approaches, and show thatthis policy achieves asymptotically optimal performance in terms of $N$ and$T$. We also show that in the case of spectral and off-diagonal sparsity, theseller can have a pseudo-regret linear in $N$, even when the network is dense.</p>  </details></details><details>  <summary>174. <b>标题：Uncertainty quantification for ptychography using normalizing flows</b></summary>  <p><b>编号</b>：[452]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00745</p>  <p><b>作者</b>：Agnimitra Dasgupta,  Zichao Wendy Di</p>  <p><b>备注</b>：Accepted at the Fourth Workshop on Machine Learning for Physical Sciences, NeurIPS 2021</p>  <p><b>关键词</b>：intrinsic photon statistics create clear opportunities, various physical experimental settings, guiding future experiments using, based deep learning approaches, spotting spurious artifacts</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Ptychography, as an essential tool for high-resolution and nondestructivematerial characterization, presents a challenging large-scale nonlinear andnon-convex inverse problem; however, its intrinsic photon statistics createclear opportunities for statistical-based deep learning approaches to tacklethese challenges, which has been underexplored. In this work, we explorenormalizing flows to obtain a surrogate for the high-dimensional posterior,which also enables the characterization of the uncertainty associated with thereconstruction: an extremely desirable capability when judging thereconstruction quality in the absence of ground truth, spotting spuriousartifacts and guiding future experiments using the returned uncertaintypatterns. We demonstrate the performance of the proposed method on a syntheticsample with added noise and in various physical experimental settings.</p>  </details></details><details>  <summary>175. <b>标题：Learning linear non-Gaussian directed acyclic graph with diverging  number of nodes</b></summary>  <p><b>编号</b>：[454]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00740</p>  <p><b>作者</b>：Ruixuan Zhao,  Xin He,  Junhui Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：represent directional causal relations among collected nodes, existing dag learning methods assuming gaussian noise, child relations among nodes, attain exact dag recovery, various simulated examples</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Acyclic model, often depicted as a directed acyclic graph (DAG), has beenwidely employed to represent directional causal relations among collectednodes. In this article, we propose an efficient method to learn linearnon-Gaussian DAG in high dimensional cases, where the noises can be of anycontinuous non-Gaussian distribution. This is in sharp contrast to mostexisting DAG learning methods assuming Gaussian noise with additional varianceassumptions to attain exact DAG recovery. The proposed method leverages a novelconcept of topological layer to facilitate the DAG learning. Particularly, weshow that the topological layers can be exactly reconstructed in a bottom-upfashion, and the parent-child relations among nodes in each layer can also beconsistently established. More importantly, the proposed method does notrequire the faithfulness or parental faithfulness assumption which has beenwidely assumed in the literature of DAG learning. Its advantage is alsosupported by the numerical comparison against some popular competitors invarious simulated examples as well as a real application on the global spreadof COVID-19.</p>  </details></details><details>  <summary>176. <b>标题：Influential Prototypical Networks for Few Shot Learning: A  Dermatological Case Study</b></summary>  <p><b>编号</b>：[455]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00698</p>  <p><b>作者</b>：Ranjana Roy Chowdhury,  Deepti R. Bathula</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：three different benchmark dermatological datasets, conventional pn attributes equal importance, support sample embeddings belonging, support sample distribution, simple yet effective</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Prototypical network (PN) is a simple yet effective few shot learningstrategy. It is a metric-based meta-learning technique where classification isperformed by computing Euclidean distances to prototypical representations ofeach class. Conventional PN attributes equal importance to all samples andgenerates prototypes by simply averaging the support sample embeddingsbelonging to each class. In this work, we propose a novel version of PN thatattributes weights to support samples corresponding to their influence on thesupport sample distribution. Influence weights of samples are calculated basedon maximum mean discrepancy (MMD) between the mean embeddings of sampledistributions including and excluding the sample. Comprehensive evaluation ofour proposed influential PN (IPNet) is performed by comparing its performancewith other baseline PNs on three different benchmark dermatological datasets.IPNet outperforms all baseline models with compelling results across all threedatasets and various N-way, K-shot classification tasks. Findings fromcross-domain adaptation experiments further establish the robustness andgeneralizability of IPNet.</p>  </details></details><details>  <summary>177. <b>标题：End-to-End Learning of Deep Kernel Acquisition Functions for Bayesian  Optimization</b></summary>  <p><b>编号</b>：[457]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00639</p>  <p><b>作者</b>：Tomoharu Iwata</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experiments using three text document datasets, proposed method achieves better bo performance, existing methods train neural networks, learn flexible surrogate functions, shared across different tasks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>For Bayesian optimization (BO) on high-dimensional data with complexstructure, neural network-based kernels for Gaussian processes (GPs) have beenused to learn flexible surrogate functions by the high representation power ofdeep learning. However, existing methods train neural networks by maximizingthe marginal likelihood, which do not directly improve the BO performance. Inthis paper, we propose a meta-learning method for BO with neural network-basedkernels that minimizes the expected gap between the true optimum value and thebest value found by BO. We model a policy, which takes the current evaluateddata points as input and outputs the next data point to be evaluated, by aneural network, where neural network-based kernels, GPs, and mutualinformation-based acquisition functions are used as its layers. With our model,the neural network-based kernel is trained to be appropriate for theacquisition function by backpropagating the gap through the acquisitionfunction and GP. Our model is trained by a reinforcement learning frameworkfrom multiple tasks. Since the neural network is shared across different tasks,we can gather knowledge on BO from multiple training tasks, and use theknowledge for unseen test tasks. In experiments using three text documentdatasets, we demonstrate that the proposed method achieves better BOperformance than the existing methods.</p>  </details></details><details>  <summary>178. <b>标题：Laplacian Constrained Precision Matrix Estimation: Existence and High  Dimensional Consistency</b></summary>  <p><b>编号</b>：[460]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00590</p>  <p><b>作者</b>：Eduardo Pavez</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：estimating high dimensional laplacian constrained precision matrices, certain data dependent graph, high dimensional setting, high dimensional consistency, proofs exploit properties</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper considers the problem of estimating high dimensional Laplacianconstrained precision matrices by minimizing Stein's loss. We obtain anecessary and sufficient condition for existence of this estimator, that boilsdown to checking whether a certain data dependent graph is connected. We alsoprove consistency in the high dimensional setting under the symmetryzed Steinloss. We show that the error rate does not depend on the graph sparsity, orother type of structure, and that Laplacian constraints are sufficient for highdimensional consistency. Our proofs exploit properties of graph Laplacians, anda characterization of the proposed estimator based on effective graphresistances. We validate our theoretical claims with numerical experiments.</p>  </details></details><details>  <summary>179. <b>标题：IGCN: Image-to-graph Convolutional Network for 2D/3D Deformable  Registration</b></summary>  <p><b>编号</b>：[468]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00484</p>  <p><b>作者</b>：Megumi Nakao,  Mitsuhiro Nakamura,  Tetsuya Matsuda</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experimental results show shape prediction considering relationships among multiple organs, organ shape reconstruction based, multiple abdominal organs, framework enables simultaneous training, 3d deformable registration performance</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Organ shape reconstruction based on a single-projection image duringtreatment has wide clinical scope, e.g., in image-guided radiotherapy andsurgical guidance. We propose an image-to-graph convolutional network thatachieves deformable registration of a 3D organ mesh for a single-viewpoint 2Dprojection image. This framework enables simultaneous training of two types oftransformation: from the 2D projection image to a displacement map, and fromthe sampled per-vertex feature to a 3D displacement that satisfies thegeometrical constraint of the mesh structure. Assuming application to radiationtherapy, the 2D/3D deformable registration performance is verified for multipleabdominal organs that have not been targeted to date, i.e., the liver, stomach,duodenum, and kidney, and for pancreatic cancer. The experimental results showshape prediction considering relationships among multiple organs can be used topredict respiratory motion and deformation from digitally reconstructedradiographs with clinically acceptable accuracy.</p>  </details></details><details>  <summary>180. <b>标题：Multi-Task Learning based Convolutional Models with Curriculum Learning  for the Anisotropic Reynolds Stress Tensor in Turbulent Duct Flow</b></summary>  <p><b>编号</b>：[474]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00328</p>  <p><b>作者</b>：Haitz Sáez de Ocáriz Borde,  David Sondak,  Pavlos Protopapas</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：build upon recent convolutional neural network architectures used, task learning based fully convolutional neural network, started using machine learning approaches, normalized anisotropic reynolds stress tensor, anisotropic reynolds stress tensor</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The Reynolds-averaged Navier-Stokes (RANS) equations require accuratemodeling of the anisotropic Reynolds stress tensor, for which traditionalclosure models only give good results in certain flow configurations.Researchers have started using machine learning approaches to address thisproblem. In this work we build upon recent convolutional neural networkarchitectures used for turbulence modeling and propose a multi-task learningbased fully convolutional neural network that is able to accurately predict thenormalized anisotropic Reynolds stress tensor for turbulent duct flow.Furthermore, we also explore the application of curriculum learning todata-driven turbulence modeling.</p>  </details></details><details>  <summary>181. <b>标题：Speaker conditioning of acoustic models using affine transformation for  multi-speaker speech recognition</b></summary>  <p><b>编号</b>：[475]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00320</p>  <p><b>作者</b>：Midia Yousefi,  John H.L. Hanse</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：original resnet acoustic model baseline, speaker conditioning process allows, channel automatic speech recognition, fuse speaker auxiliary information, proposed speaker conditioning method</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This study addresses the problem of single-channel Automatic SpeechRecognition of a target speaker within an overlap speech scenario. In theproposed method, the hidden representations in the acoustic model are modulatedby speaker auxiliary information to recognize only the desired speaker. Affinetransformation layers are inserted into the acoustic model network to integratespeaker information with the acoustic features. The speaker conditioningprocess allows the acoustic model to perform computation in the context oftarget-speaker auxiliary information. The proposed speaker conditioning methodis a general approach and can be applied to any acoustic model architecture.Here, we employ speaker conditioning on a ResNet acoustic model. Experiments onthe WSJ corpus show that the proposed speaker conditioning method is aneffective solution to fuse speaker auxiliary information with acoustic featuresfor multi-speaker speech recognition, achieving +9% and +20% relative WERreduction for clean and overlap speech scenarios, respectively, compared to theoriginal ResNet acoustic model baseline.</p>  </details></details><details>  <summary>182. <b>标题：Real-time Speaker counting in a cocktail party scenario using  Attention-guided Convolutional Neural Network</b></summary>  <p><b>编号</b>：[476]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00316</p>  <p><b>作者</b>：Midia Yousefi,  John H.L. Hansen</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：compact feature vector without losing critical information, simulated overlapping speech using wsj corpus show, e ., 200 ms )., e ., 1s )., speech spectral content using</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Most current speech technology systems are designed to operate well even inthe presence of multiple active speakers. However, most solutions assume thatthe number of co-current speakers is known. Unfortunately, this informationmight not always be available in real-world applications. In this study, wepropose a real-time, single-channel attention-guided Convolutional NeuralNetwork (CNN) to estimate the number of active speakers in overlapping speech.The proposed system extracts higher-level information from the speech spectralcontent using a CNN model. Next, the attention mechanism summarizes theextracted information into a compact feature vector without losing criticalinformation. Finally, the active speakers are classified using a fullyconnected network. Experiments on simulated overlapping speech using WSJ corpusshow that the attention solution is shown to improve the performance by almost3% absolute over conventional temporal average pooling. The proposedAttention-guided CNN achieves 76.15% for both Weighted Accuracy and averageRecall, and 75.80% Precision on speech segments as short as 20 frames (i.e.,200 ms). All the classification metrics exceed 92% for the attention-guidedmodel in offline scenarios where the input signal is more than 100 frames long(i.e., 1s).</p>  </details></details><details>  <summary>183. <b>标题：Unpaired Learning for High Dynamic Range Image Tone Mapping</b></summary>  <p><b>编号</b>：[480]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00219</p>  <p><b>作者</b>：Yael Vinker,  Inbar Huberman-Spiegelglas,  Raanan Fattal</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：level attributes native ldr possess, unpaired adversarial training based, different image fidelity indices, producing low dynamic range, producing training data</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>High dynamic range (HDR) photography is becoming increasingly popular andavailable by DSLR and mobile-phone cameras. While deep neural networks (DNN)have greatly impacted other domains of image manipulation, their use for HDRtone-mapping is limited due to the lack of a definite notion of ground-truthsolution, which is needed for producing training data.In this paper we describe a new tone-mapping approach guided by the distinctgoal of producing low dynamic range (LDR) renditions that best reproduce thevisual characteristics of native LDR images. This goal enables the use of anunpaired adversarial training based on unrelated sets of HDR and LDR images,both of which are widely available and easy to acquire.In order to achieve an effective training under this minimal requirements, weintroduce the following new steps and components: (i) a range-normalizingpre-process which estimates and applies a different level of curve-basedcompression, (ii) a loss that preserves the input content while allowing thenetwork to achieve its goal, and (iii) the use of a more concise discriminatornetwork, designed to promote the reproduction of low-level attributes nativeLDR possess.Evaluation of the resulting network demonstrates its ability to producephoto-realistic artifact-free tone-mapped images, and state-of-the-artperformance on different image fidelity indices and visual distances.</p>  </details></details><details>  <summary>184. <b>标题：Efficient Inference Without Trading-off Regret in Bandits: An Allocation  Probability Test for Thompson Sampling</b></summary>  <p><b>编号</b>：[483]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00137</p>  <p><b>作者</b>：Nina Deliu,  Joseph J. Williams,  Sofia S. Villar</p>  <p><b>备注</b>：32 pages including supplementary material</p>  <p><b>关键词</b>：g ., biased estimators, large experiments generally follow, require large sample sizes, challenges typically impose restrictions, conduct adaptive randomised experiments</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Using bandit algorithms to conduct adaptive randomised experiments canminimise regret, but it poses major challenges for statistical inference (e.g.,biased estimators, inflated type-I error and reduced power). Recent attempts toaddress these challenges typically impose restrictions on the exploitativenature of the bandit algorithm$-$trading off regret$-$and require large samplesizes to ensure asymptotic guarantees. However, large experiments generallyfollow a successful pilot study, which is tightly constrained in its size orduration. Increasing power in such small pilot experiments, without limitingthe adaptive nature of the algorithm, can allow promising interventions toreach a larger experimental phase. In this work we introduce a novel hypothesistest, uniquely based on the allocation probabilities of the bandit algorithm,and without constraining its exploitative nature or requiring a minimumexperimental size. We characterise our $Allocation\ Probability\ Test$ whenapplied to $Thompson\ Sampling$, presenting its asymptotic theoreticalproperties, and illustrating its finite-sample performances compared tostate-of-the-art approaches. We demonstrate the regret and inferentialadvantages of our approach, particularly in small samples, in both extensivesimulations and in a real-world experiment on mental health aspects.</p>  </details></details><details>  <summary>185. <b>标题：High-dimensional multi-trait GWAS by reverse prediction of genotypes</b></summary>  <p><b>编号</b>：[485]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00108</p>  <p><b>作者</b>：Muhammad Ammar Malik,  Adriaan-Alexander Ludl,  Tom Michoel</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：analyzed different machine learning methods, root mean squared error, model feature coefficients correlated, truth transcriptional regulatory networks, complementary findings across methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Multi-trait genome-wide association studies (GWAS) use multi-variatestatistical methods to identify associations between genetic variants andmultiple correlated traits simultaneously, and have higher statistical powerthan independent univariate analysis of traits. Reverse regression, wheregenotypes of genetic variants are regressed on multiple traits simultaneously,has emerged as a promising approach to perform multi-trait GWAS inhigh-dimensional settings where the number of traits exceeds the number ofsamples. We extended this approach and analyzed different machine learningmethods (ridge regression, random forests and support vector machines)forreverse regression in multi-trait GWAS, using genotypes, gene expression dataand ground-truth transcriptional regulatory networks from the DREAM5 SysGenChallenge and from a cross between two yeast strains to evaluate methods. Wefound that genotype prediction performance, in terms of root mean squared error(RMSE), allowed to distinguish between genomic regions with high and lowtranscriptional activity. Moreover, model feature coefficients correlated withthe strength of association between variants and individual traits, and werepredictive of true trans-eQTL target genes, with complementary findings acrossmethods.</p>  </details></details><details>  <summary>186. <b>标题：DeepDoseNet: A Deep Learning model for 3D Dose Prediction in Radiation  Therapy</b></summary>  <p><b>编号</b>：[487]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00077</p>  <p><b>作者</b>：Mumtaz Hussain Soomro,  Victor Gabriel Leandro Alves,  Hamidreza Nourzadeh,  Jeffrey V. Siebers</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：d99 %, d95 %, d1, d99 %, d95 %, d1, deepdosenet 3d dose prediction model based, predicted 3d dose distributions, 2020 aapm openkbp challenge</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The DeepDoseNet 3D dose prediction model based on ResNet and Dilated DenseNetis proposed. The 340 head-and-neck datasets from the 2020 AAPM OpenKBPchallenge were utilized, with 200 for training, 40 for validation, and 100 fortesting. Structures include 56Gy, 63Gy, 70Gy PTVs, and brainstem, spinal cord,right parotid, left parotid, larynx, esophagus, and mandible OARs. Mean squarederror (MSE) loss, mean absolute error (MAE) loss, and MAE plus dose-volumehistogram (DVH) based loss functions were investigated. Each model'sperformance was compared using a 3D dose score, $\bar{S_{D}}$, (mean absolutedifference between ground truth and predicted 3D dose distributions) and a DVHscore, $\bar{S_{DVH}}$ (mean absolute difference between ground truth andpredicted dose-volume metrics).Furthermore, DVH metrics Mean[Gy] and D0.1cc[Gy] for OARs and D99%, D95%, D1% for PTVs were computed. DeepDoseNet with theMAE plus DVH-based loss function had the best dose score performance of theOpenKBP entries. MAE+DVH model had the lowest prediction error (P<0.0001, wilcoxon test) on validation and test datasets (validation: $\bar{s_{d}}$="2.3Gy," $\bar{s_{dvh}}$="1.9Gy;" test: followed by the mae model mse had highest prediction error no significant difference was found among models in terms of mean [gy], but mae+dvh significantly outperformed d0.1cc[gy], particularly for mandible parotids both (p<0.01) (p<0.0001) datasets. d99%, d95%, d1% targets. reduced ~60% ~70%.< p>  </0.0001,></p></details></details><details>  <summary>187. <b>标题：Robust and efficient change point detection using novel multivariate  rank-energy GoF test</b></summary>  <p><b>编号</b>：[488]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00047</p>  <p><b>作者</b>：Shoaib Bin Masud,  Shuchin Aeron</p>  <p><b>备注</b>：6 pages, 1 figure</p>  <p><b>关键词</b>：new gof test statistic called, proposed sre based cpd outperforms, unsupervised change point detection, requires large sample complexity, multivariate time series data</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this paper, we use and further develop upon a recently proposedmultivariate, distribution-free Goodness-of-Fit (GoF) test based on the theoryof Optimal Transport (OT) called the Rank Energy (RE) [1], for non-parametricand unsupervised Change Point Detection (CPD) in multivariate time series data.We show that directly using RE leads to high sensitivity to very small changesin distributions (causing high false alarms) and it requires large samplecomplexity and huge computational cost. To alleviate these drawbacks, wepropose a new GoF test statistic called as soft-Rank Energy (sRE) that is basedon entropy regularized OT and employ it towards CPD. We discuss the advantagesof using sRE over RE and demonstrate that the proposed sRE based CPDoutperforms all the existing methods in terms of Area Under the Curve (AUC) andF1-score on real and synthetic data sets.</p>  </details></details><details>  <summary>188. <b>标题：Learning generative models for valid knockoffs using novel  multivariate-rank based statistics</b></summary>  <p><b>编号</b>：[489]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00043</p>  <p><b>作者</b>：Shoaib Bin Masud,  Shuchin Aeron</p>  <p><b>备注</b>：23 pages, 9 figures</p>  <p><b>关键词</b>：provides provable false discovery rate guarantees, detection power vs false discoveries, derived using theoretical results characterizing, soft rank maximum mean discrepancy, show via extensive evaluation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We consider the problem of generating valid knockoffs for knockoff filteringwhich is a statistical method that provides provable false discovery rateguarantees for any model selection procedure. To this end, we are motivated byrecent advances in multivariate distribution-free goodness-of-fit tests namely,the rank energy (RE), that is derived using theoretical results characterizingthe optimal maps in the Monge's Optimal Transport (OT) problem. However, directuse of use RE for learning generative models is not feasible because of itshigh computational and sample complexity, saturation under large supportdiscrepancy between distributions, and non-differentiability in generativeparameters. To alleviate these, we begin by proposing a variant of the RE,dubbed as soft rank energy (sRE), and its kernel variant called as soft rankmaximum mean discrepancy (sRMMD) using entropic regularization of Monge's OTproblem. We then use sRMMD to generate deep knockoffs and show via extensiveevaluation that it is a novel and effective method to produce valid knockoffs,achieving comparable, or in some cases improved tradeoffs between detectionpower Vs false discoveries.</p>  </details></details><details>  <summary>189. <b>标题：Real-time detection of anomalies in large-scale transient surveys</b></summary>  <p><b>编号</b>：[490]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00036</p>  <p><b>作者</b>：Daniel Muthukrishna,  Kaisey S. Mandel,  Michelle Lochner,  Sara Webb,  Gautham Narayan</p>  <p><b>备注</b>：25 pages, 21 figures, submitted to MNRAS</p>  <p><b>关键词</b>：probabilistic neural network built using temporal convolutional networks, high true anomaly rates achieving area, automatically detecting anomalous transient light curves, low false anomaly rates, rubin observatory legacy survey</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>New time-domain surveys, such as the Rubin Observatory Legacy Survey of Spaceand Time (LSST), will observe millions of transient alerts each night, makingstandard approaches of visually identifying new and interesting transientsinfeasible. We present two novel methods of automatically detecting anomaloustransient light curves in real-time. Both methods are based on the simple ideathat if the light curves from a known population of transients can beaccurately modelled, any deviations from model predictions are likelyanomalies. The first modelling approach is a probabilistic neural network builtusing Temporal Convolutional Networks (TCNs) and the second is an interpretableBayesian parametric model of a transient. We demonstrate our methods' abilityto provide anomaly scores as a function of time on light curves from the ZwickyTransient Facility. We show that the flexibility of neural networks, theattribute that makes them such a powerful tool for many regression tasks, iswhat makes them less suitable for anomaly detection when compared with ourparametric model. The parametric model is able to identify anomalies withrespect to common supernova classes with low false anomaly rates and high trueanomaly rates achieving Area Under the Receive Operating Characteristic (ROC)Curve (AUC) scores above 0.8 for most rare classes such as kilonovae, tidaldisruption events, intermediate luminosity transients, and pair-instabilitysupernovae. Our ability to identify anomalies improves over the lifetime of thelight curves. Our framework, used in conjunction with transient classifiers,will enable fast and prioritised follow-up of unusual transients from newlarge-scale surveys.</p>  </details></details><details>  <summary>190. <b>标题：Neural Networks as Kernel Learners: The Silent Alignment Effect</b></summary>  <p><b>编号</b>：[491]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00034</p>  <p><b>作者</b>：Alexander Atanasov,  Blake Bordelon,  Cengiz Pehlevan</p>  <p><b>备注</b>：24 pages, 13 figures</p>  <p><b>关键词</b>：rich feature learning regime learn, lazy training regime converge, relative learning rates, early spectral learning, term silent alignment</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Neural networks in the lazy training regime converge to kernel machines. Canneural networks in the rich feature learning regime learn a kernel machine witha data-dependent kernel? We demonstrate that this can indeed happen due to aphenomenon we term silent alignment, which requires that the tangent kernel ofa network evolves in eigenstructure while small and before the loss appreciablydecreases, and grows only in overall scale afterwards. We show that such aneffect takes place in homogenous neural networks with small initialization andwhitened data. We provide an analytical treatment of this effect in the linearnetwork case. In general, we find that the kernel develops a low-rankcontribution in the early phase of training, and then evolves in overall scale,yielding a function equivalent to a kernel regression solution with the finalnetwork's tangent kernel. The early spectral learning of the kernel depends onboth depth and on relative learning rates in each layer. We also demonstratethat non-whitened data can weaken the silent alignment effect.</p>  </details></details><details>  <summary>191. <b>标题：Revisiting joint decoding based multi-talker speech recognition with DNN  acoustic model</b></summary>  <p><b>编号</b>：[493]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00009</p>  <p><b>作者</b>：Martin Kocour,  Kateřina Žmolíková,  Lucas Ondel,  Ján Švec,  Marc Delcroix,  Tsubasa Ochiai,  Lukáš Burget,  Jan Černocký</p>  <p><b>备注</b>：submitted to ICASSP 2022</p>  <p><b>关键词</b>：based acoustic model predicts senone state posteriors, predict joint state posteriors, specific output stream separately, provides greater modeling power, talker speech recognition systems</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In typical multi-talker speech recognition systems, a neural network-basedacoustic model predicts senone state posteriors for each speaker. These arelater used by a single-talker decoder which is applied on each speaker-specificoutput stream separately. In this work, we argue that such a scheme issub-optimal and propose a principled solution that decodes all speakersjointly. We modify the acoustic model to predict joint state posteriors for allspeakers, enabling the network to express uncertainty about the attribution ofparts of the speech signal to the speakers. We employ a joint decoder that canmake use of this uncertainty together with higher-level language information.For this, we revisit decoding algorithms used in factorial generative models inearly multi-talker speech recognition systems. In contrast with these earlyworks, we replace the GMM acoustic model with DNN, which provides greatermodeling power and simplifies part of the inference. We demonstrate theadvantage of joint decoding in proof of concept experiments on a mixed-TIDIGITSdataset.</p>  </details></details><h1>人工智能</h1><details>  <summary>1. <b>标题：When Does Contrastive Learning Preserve Adversarial Robustness from  Pretraining to Finetuning?</b></summary>  <p><b>编号</b>：[1]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01124</p>  <p><b>作者</b>：Lijie Fan,  Sijia Liu,  Pin-Yu Chen,  Gaoyuan Zhang,  Chuang Gan</p>  <p><b>备注</b>：NeurIPS 2021. Code is available at this https URL</p>  <p><b>关键词</b>：supervised robust learning methods across multiple datasets, task robustness transferability without loss, helps preserve robustness without forgetting, novel adversarial contrastive pretraining framework, task robustness transferability '.</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Contrastive learning (CL) can learn generalizable feature representations andachieve the state-of-the-art performance of downstream tasks by finetuning alinear classifier on top of it. However, as adversarial robustness becomesvital in image classification, it remains unclear whether or not CL is able topreserve robustness to downstream tasks. The main challenge is that in theself-supervised pretraining + supervised finetuning paradigm, adversarialrobustness is easily forgotten due to a learning task mismatch from pretrainingto finetuning. We call such a challenge 'cross-task robustnesstransferability'. To address the above problem, in this paper we revisit andadvance CL principles through the lens of robustness enhancement. We show that(1) the design of contrastive views matters: High-frequency components ofimages are beneficial to improving model robustness; (2) Augmenting CL withpseudo-supervision stimulus (e.g., resorting to feature clustering) helpspreserve robustness without forgetting. Equipped with our new designs, wepropose AdvCL, a novel adversarial contrastive pretraining framework. We showthat AdvCL is able to enhance cross-task robustness transferability withoutloss of model accuracy and finetuning efficiency. With a thorough experimentalstudy, we demonstrate that AdvCL outperforms the state-of-the-artself-supervised robust learning methods across multiple datasets (CIFAR-10,CIFAR-100, and STL-10) and finetuning schemes (linear evaluation and full modelfinetuning).</p>  </details></details><details>  <summary>2. <b>标题：Stakeholder Participation in AI: Beyond "Add Diverse Stakeholders and  Stir"</b></summary>  <p><b>编号</b>：[2]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01122</p>  <p><b>作者</b>：Fernando Delgado,  Stephen Yang,  Michael Madaio,  Qian Yang</p>  <p><b>备注</b>：Pre-print of an accepted paper at the Human-Centered AI workshop at NeurIPS 2021</p>  <p><b>关键词</b>：move forward across ai, current practices via, workshop paper aims, synthesizing existing literature, analyzing participatory approaches</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>There is a growing consensus in HCI and AI research that the design of AIsystems needs to engage and empower stakeholders who will be affected by AI.However, the manner in which stakeholders should participate in AI design isunclear. This workshop paper aims to ground what we dub a 'participatory turn'in AI design by synthesizing existing literature on participation and throughempirical analysis of its current practices via a survey of recent publishedresearch and a dozen semi-structured interviews with AI researchers andpractitioners. Based on our literature synthesis and empirical research, thispaper presents a conceptual framework for analyzing participatory approaches toAI design and articulates a set of empirical findings that in ensemble detailout the contemporary landscape of participatory practice in AI design. Thesefindings can help bootstrap a more principled discussion on how PD of AI shouldmove forward across AI, HCI, and other research communities.</p>  </details></details><details>  <summary>3. <b>标题：Rebooting ACGAN: Auxiliary Classifier GANs with Stable Training</b></summary>  <p><b>编号</b>：[3]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01118</p>  <p><b>作者</b>：Minguk Kang,  Woohyeon Shim,  Minsu Cho,  Jaesik Park</p>  <p><b>备注</b>：34 pages, 26 figures, 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：rebooted auxiliary classifier generative adversarial network, conditional generative adversarial networks, projecting input vectors onto, generate easily classifiable samples, auxiliary classifier gan</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Conditional Generative Adversarial Networks (cGAN) generate realistic imagesby incorporating class information into GAN. While one of the most popularcGANs is an auxiliary classifier GAN with softmax cross-entropy loss (ACGAN),it is widely known that training ACGAN is challenging as the number of classesin the dataset increases. ACGAN also tends to generate easily classifiablesamples with a lack of diversity. In this paper, we introduce two cures forACGAN. First, we identify that gradient exploding in the classifier can causean undesirable collapse in early training, and projecting input vectors onto aunit hypersphere can resolve the problem. Second, we propose the Data-to-DataCross-Entropy loss (D2D-CE) to exploit relational information in theclass-labeled dataset. On this foundation, we propose the Rebooted AuxiliaryClassifier Generative Adversarial Network (ReACGAN). The experimental resultsshow that ReACGAN achieves state-of-the-art generation results on CIFAR10,Tiny-ImageNet, CUB200, and ImageNet datasets. We also verify that ReACGANbenefits from differentiable augmentations and that D2D-CE harmonizes withStyleGAN2 architecture. Model weights and a software package that providesimplementations of representative cGANs and all experiments in our paper areavailable at this https URL.</p>  </details></details><details>  <summary>4. <b>标题：Investigation of Independent Reinforcement Learning Algorithms in  Multi-Agent Environments</b></summary>  <p><b>编号</b>：[7]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01100</p>  <p><b>作者</b>：Ken Ming Lee,  Sriram Ganapathi Subramanian,  Mark Crowley</p>  <p><b>备注</b>：15 pages, 7 figures, Accepted for NeurIPS 2021 Deep Reinforcement Learning Workshop</p>  <p><b>关键词</b>：agents trained via independent algorithms learn, cooperative partially observable environments, independent reinforcement learning algorithms, three main categories, adding recurrence improves</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Independent reinforcement learning algorithms have no theoretical guaranteesfor finding the best policy in multi-agent settings. However, in practice,prior works have reported good performance with independent algorithms in somedomains and bad performance in others. Moreover, a comprehensive study of thestrengths and weaknesses of independent algorithms is lacking in theliterature. In this paper, we carry out an empirical comparison of theperformance of independent algorithms on four PettingZoo environments that spanthe three main categories of multi-agent environments, i.e., cooperative,competitive, and mixed. We show that in fully-observable environments,independent algorithms can perform on par with multi-agent algorithms incooperative and competitive settings. For the mixed environments, we show thatagents trained via independent algorithms learn to perform well individually,but fail to learn to cooperate with allies and compete with enemies. We alsoshow that adding recurrence improves the learning of independent algorithms incooperative partially observable environments.</p>  </details></details><details>  <summary>5. <b>标题：MOST-GAN: 3D Morphable StyleGAN for Disentangled Face Image Manipulation</b></summary>  <p><b>编号</b>：[22]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01048</p>  <p><b>作者</b>：Safa C. Medin,  Bernhard Egger,  Anoop Cherian,  Ye Wang,  Joshua B. Tenenbaum,  Xiaoming Liu,  Tim K. Marks</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：art 2d hair manipulation network, generate strikingly photorealistic face images, nonlinear 3d morphable models, gan achieves photorealistic manipulation, priori models physical attributes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recent advances in generative adversarial networks (GANs) have led toremarkable achievements in face image synthesis. While methods that usestyle-based GANs can generate strikingly photorealistic face images, it isoften difficult to control the characteristics of the generated faces in ameaningful and disentangled way. Prior approaches aim to achieve such semanticcontrol and disentanglement within the latent space of a previously trainedGAN. In contrast, we propose a framework that a priori models physicalattributes of the face such as 3D shape, albedo, pose, and lighting explicitly,thus providing disentanglement by design. Our method, MOST-GAN, integrates theexpressive power and photorealism of style-based GANs with the physicaldisentanglement and flexibility of nonlinear 3D morphable models, which wecouple with a state-of-the-art 2D hair manipulation network. MOST-GAN achievesphotorealistic manipulation of portrait images with fully disentangled 3Dcontrol over their physical attributes, enabling extreme manipulation oflighting, facial expression, and pose variations up to full profile view.</p>  </details></details><details>  <summary>6. <b>标题：Logic Rules Meet Deep Learning: A Novel Approach for Ship Type  Classification</b></summary>  <p><b>编号</b>：[23]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01042</p>  <p><b>作者</b>：Manolis Pitsikalis,  Thanh-Toan Do,  Alexei Lisitsa,  Shan Luo</p>  <p><b>备注</b>：Accepted and presented in RuleML+RR 2021</p>  <p><b>关键词</b>：novel ship type classification model, model using real world data, common black box approaches, cnn deep neural network, combines vessel transmitted data</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The shipping industry is an important component of the global trade andeconomy, however in order to ensure law compliance and safety it needs to bemonitored. In this paper, we present a novel Ship Type classification modelthat combines vessel transmitted data from the Automatic Identification System,with vessel imagery. The main components of our approach are the Faster R-CNNDeep Neural Network and a Neuro-Fuzzy system with IF-THEN rules. We evaluateour model using real world data and showcase the advantages of this combinationwhile also compare it with other methods. Results show that our model canincrease prediction scores by up to 15.4\% when compared with the next bestmodel we considered, while also maintaining a level of explainability asopposed to common black box approaches.</p>  </details></details><details>  <summary>7. <b>标题：Introspective Distillation for Robust Question Answering</b></summary>  <p><b>编号</b>：[28]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01026</p>  <p><b>作者</b>：Yulei Niu,  Hanwang Zhang</p>  <p><b>备注</b>：Accepted by NeurIPS 2021</p>  <p><b>关键词</b>：novel debiasing method called introspective distillation, even achieving better id performance compared, recent debiasing methods achieve good, reading comprehension dataset squad demonstrate, visual qa datasets vqa v2</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Question answering (QA) models are well-known to exploit data bias, e.g., thelanguage prior in visual QA and the position bias in reading comprehension.Recent debiasing methods achieve good out-of-distribution (OOD)generalizability with a considerable sacrifice of the in-distribution (ID)performance. Therefore, they are only applicable in domains where the testdistribution is known in advance. In this paper, we present a novel debiasingmethod called Introspective Distillation (IntroD) to make the best of bothworlds for QA. Our key technical contribution is to blend the inductive bias ofOOD and ID by introspecting whether a training sample fits in the factual IDworld or the counterfactual OOD one. Experiments on visual QA datasets VQA v2,VQA-CP, and reading comprehension dataset SQuAD demonstrate that our proposedIntroD maintains the competitive OOD performance compared to other debiasingmethods, while sacrificing little or even achieving better ID performancecompared to the non-debiasing ones.</p>  </details></details><details>  <summary>8. <b>标题：Gomoku: analysis of the game and of the player Wine</b></summary>  <p><b>编号</b>：[33]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01016</p>  <p><b>作者</b>：Lorenzo Piazzo,  Michele Scarpiniti,  Enzo Baccarelli</p>  <p><b>备注</b>：32 pages, 1 figure</p>  <p><b>关键词</b>：quickly testing novel artificial intelligence, main game concepts, classical board game, strong gomoku player, new gomoku player</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Gomoku, also known as five in a row, is a classical board game, ideallysuited for quickly testing novel Artificial Intelligence (AI) techniques. Withthe aim of facilitating a developer willing to write a new Gomoku player, inthis report we present an analysis of the main game concepts and strategies,which is wider and deeper than existing ones. Moreover, after discussing thegeneral structure of an artificial player, we present and analyse a strongGomoku player, named Wine, the code of which is freely available on theInternet and which is an excelent example of how a modern player is organised.</p>  </details></details><details>  <summary>9. <b>标题：Transfer Learning Approach to Bicycle-sharing Systems' Station Location  Planning using OpenStreetMap Data</b></summary>  <p><b>编号</b>：[41]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00990</p>  <p><b>作者</b>：Kamil Raczycki,  Piotr Szymański</p>  <p><b>备注</b>：Accepted to 4th ACM SIGSPATIAL International Workshop on Advances in Resilient and Intelligent Cities</p>  <p><b>关键词</b>：sharing stations usually requires expensive data gathering, uber h3 discrete global grid system, include citizens leaving public transport, different cities using transfer learning, bike sharing system quickly</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Bicycle-sharing systems (BSS) have become a daily reality for many citizensof larger, wealthier cities in developed regions. However, planning the layoutof bicycle-sharing stations usually requires expensive data gathering,surveying travel behavior and trip modelling followed by station layoutoptimization. Many smaller cities and towns, especially in developing areas,may have difficulty financing such projects. Planning a BSS also takes aconsiderable amount of time. Yet as the pandemic has shown us, municipalitieswill face the need to adapt rapidly to mobility shifts, which include citizensleaving public transport for bicycles. Laying out a bike sharing system quicklywill become critical in addressing the increase in bike demand. This paperaddresses the problem of cost and time in BSS layout design and proposes a newsolution to streamline and facilitate the process of such planning by usingspatial embedding methods. Based only on publicly available data fromOpenStreetMap, and station layouts from 34 cities in Europe, a method has beendeveloped to divide cities into micro-regions using the Uber H3 discrete globalgrid system and to indicate regions where it is worth placing a station basedon existing systems in different cities using transfer learning. The result ofthe work is a mechanism to support planners in their decision making whenplanning a station layout with a choice of reference cities.</p>  </details></details><details>  <summary>10. <b>标题：Fast Convolution based on Winograd Minimum Filtering: Introduction and  Development</b></summary>  <p><b>编号</b>：[46]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00977</p>  <p><b>作者</b>：Gan Tong,  Libo Huang</p>  <p><b>备注</b>：15 pages, 1 figure</p>  <p><b>关键词</b>：proposed several fast convolution algorithms including fft, fast convolution implementation within, winograd convolution significantly reduces, provide detailed references, possible future directions</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Convolutional Neural Network (CNN) has been widely used in various fields andplayed an important role. Convolution operators are the fundamental componentof convolutional neural networks, and it is also the most time-consuming partof network training and inference. In recent years, researchers have proposedseveral fast convolution algorithms including FFT and Winograd. Among them,Winograd convolution significantly reduces the multiplication operations inconvolution, and it also takes up less memory space than FFT convolution.Therefore, Winograd convolution has quickly become the first choice for fastconvolution implementation within a few years. At present, there is nosystematic summary of the convolution algorithm. This article aims to fill thisgap and provide detailed references for follow-up researchers. This articlesummarizes the development of Winograd convolution from the three aspects ofalgorithm expansion, algorithm optimization, implementation, and application,and finally makes a simple outlook on the possible future directions.</p>  </details></details><details>  <summary>11. <b>标题：Hex2vec -- Context-Aware Embedding H3 Hexagons with OpenStreetMap Tags</b></summary>  <p><b>编号</b>：[49]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00970</p>  <p><b>作者</b>：Szymon Woźniak,  Piotr Szymański</p>  <p><b>备注</b>：Accepted at 4th ACM SIGSPATIAL International Workshop on AI for Geographic Knowledge Discovery (GEOAI '21)</p>  <p><b>关键词</b>：quality inference using deep neural networks, resulting vector representations showcase semantic structures, satellite photos ), mobility data, past approaches however concentrated, learning vector representations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Representation learning of spatial and geographic data is a rapidlydeveloping field which allows for similarity detection between areas andhigh-quality inference using deep neural networks. Past approaches howeverconcentrated on embedding raster imagery (maps, street or satellite photos),mobility data or road networks. In this paper we propose the first approach tolearning vector representations of OpenStreetMap regions with respect to urbanfunctions and land-use in a micro-region grid. We identify a subset of OSM tagsrelated to major characteristics of land-use, building and urban regionfunctions, types of water, green or other natural areas. Through manualverification of tagging quality, we selected 36 cities were for training regionrepresentations. Uber's H3 index was used to divide the cities into hexagons,and OSM tags were aggregated for each hexagon. We propose the hex2vec methodbased on the Skip-gram model with negative sampling. The resulting vectorrepresentations showcase semantic structures of the map characteristics,similar to ones found in vector-based language models. We also present insightsfrom region similarity detection in six Polish cities and propose a regiontypology obtained through agglomerative clustering.</p>  </details></details><details>  <summary>12. <b>标题：Generative Occupancy Fields for 3D Surface-Aware Image Synthesis</b></summary>  <p><b>编号</b>：[50]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00969</p>  <p><b>作者</b>：Xudong Xu,  Xingang Pan,  Dahua Lin,  Bo Dai</p>  <p><b>备注</b>：Accepted to NeurIPS2021. We propose Generative Occupancy Fields(GOF), a 3D-aware generative model which could synthesize realistic images with 3D consistency and simultaneously learn compact object surfaces</p>  <p><b>关键词</b>：radiance fields occupancy representations could inherently ensure deterministic surfaces, generative models much easier since gradients, learn compact object surfaces without impeding, receive sparse gradients located, directly apply occupancy representations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The advent of generative radiance fields has significantly promoted thedevelopment of 3D-aware image synthesis. The cumulative rendering process inradiance fields makes training these generative models much easier sincegradients are distributed over the entire volume, but leads to diffused objectsurfaces. In the meantime, compared to radiance fields occupancyrepresentations could inherently ensure deterministic surfaces. However, if wedirectly apply occupancy representations to generative models, during trainingthey will only receive sparse gradients located on object surfaces andeventually suffer from the convergence problem. In this paper, we proposeGenerative Occupancy Fields (GOF), a novel model based on generative radiancefields that can learn compact object surfaces without impeding its trainingconvergence. The key insight of GOF is a dedicated transition from thecumulative rendering in radiance fields to rendering with only the surfacepoints as the learned surface gets more and more accurate. In this way, GOFcombines the merits of two representations in a unified framework. In practice,the training-time transition of start from radiance fields and march tooccupancy representations is achieved in GOF by gradually shrinking thesampling region in its rendering process from the entire volume to a minimalneighboring region around the surface. Through comprehensive experiments onmultiple datasets, we demonstrate that GOF can synthesize high-quality imageswith 3D consistency and simultaneously learn compact and smooth objectsurfaces. Code, models, and demo videos are available atthis https URL</p>  </details></details><details>  <summary>13. <b>标题：VPFNet: Voxel-Pixel Fusion Network for Multi-class 3D Object Detection</b></summary>  <p><b>编号</b>：[52]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00966</p>  <p><b>作者</b>：Chia-Hung Wang,  Hsueh-Wei Chen,  Li-Chen Fu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：class 3d object detection task, class 3d object detection network, camera sensor data streams, dl )- embedded fusion, class object detection</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Many LiDAR-based methods for detecting large objects, single-class objectdetection, or under easy situations were claimed to perform quite well.However, their performances of detecting small objects or under hard situationsdid not surpass those of the fusion-based ones due to failure to leverage theimage semantics. In order to elevate the detection performance in a complicatedenvironment, this paper proposes a deep learning (DL)-embedded fusion-basedmulti-class 3D object detection network which admits both LiDAR and camerasensor data streams, named Voxel-Pixel Fusion Network (VPFNet). Inside thisnetwork, a key novel component is called Voxel-Pixel Fusion (VPF) layer, whichtakes advantage of the geometric relation of a voxel-pixel pair and fuses thevoxel features and the pixel features with proper mechanisms. Moreover, severalparameters are particularly designed to guide and enhance the fusion effectafter considering the characteristics of a voxel-pixel pair. Finally, theproposed method is evaluated on the KITTI benchmark for multi-class 3D objectdetection task under multilevel difficulty, and is shown to outperform allstate-of-the-art methods in mean average precision (mAP). It is also noteworthythat our approach here ranks the first on the KITTI leaderboard for thechallenging pedestrian class.</p>  </details></details><details>  <summary>14. <b>标题：RefineGAN: Universally Generating Waveform Better than Ground Truth with  Highly Accurate Pitch and Intensity Responses</b></summary>  <p><b>编号</b>：[55]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00962</p>  <p><b>作者</b>：Shengyuan Xu,  Wenxiao Zhao,  Jing Guo</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：generative adversarial network )- based approaches towards high, gan method introduces much uncertainty, fidelity waveform generation heavily rely, unseen speaker identically well, based loss function</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Most GAN(Generative Adversarial Network)-based approaches towardshigh-fidelity waveform generation heavily rely on discriminators to improvetheir performance. However, the over-use of this GAN method introduces muchuncertainty into the generation process and often result in mismatches of pitchand intensity, which is fatal when it comes to sensitive using cases such assinging voice synthesis(SVS). To address this problem, we propose RefineGAN, ahigh-fidelity neural vocoder with faster-than-real-time generation capability,and focused on the robustness, pitch and intensity accuracy, and full-bandaudio generation. We employed a pitch-guided refine architecture with amulti-scale spectrogram-based loss function to help stabilize the trainingprocess and maintain the robustness of the neural vocoder while using theGAN-based training method. Audio generated using this method shows a betterperformance in subjective tests when compared with the ground-truth audio. Thisresult shows that the fidelity is even improved during the waveformreconstruction by eliminating defects produced by the speaker and the recordingprocedure. Moreover, a further study shows that models trained on a specifiedtype of data can perform on totally unseen language and unseen speakeridentically well. Generated sample pairs are provided onthis https URL.</p>  </details></details><details>  <summary>15. <b>标题：gtfs2vec -- Learning GTFS Embeddings for comparing Public Transport  Offer in Microregions</b></summary>  <p><b>编号</b>：[56]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00960</p>  <p><b>作者</b>：Piotr Gramacki,  Szymon Woźniak,  Piotr Szymański</p>  <p><b>备注</b>：Accepted at 4th ACM SIGSPATIAL International Workshop on AI for Geographic Knowledge Discovery GEOAI'21</p>  <p><b>关键词</b>：qualitatively describe public transport availability, similar public transport schedule characteristics, created certain features describing, associative deep neural network, selected 48 european cities</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We selected 48 European cities and gathered their public transport timetablesin the GTFS format. We utilized Uber's H3 spatial index to divide each cityinto hexagonal micro-regions. Based on the timetables data we created certainfeatures describing the quantity and variety of public transport availabilityin each region. Next, we trained an auto-associative deep neural network toembed each of the regions. Having such prepared representations, we then used ahierarchical clustering approach to identify similar regions. To do so, weutilized an agglomerative clustering algorithm with a euclidean distancebetween regions and Ward's method to minimize in-cluster variance. Finally, weanalyzed the obtained clusters at different levels to identify some number ofclusters that qualitatively describe public transport availability. We showedthat our typology matches the characteristics of analyzed cities and allowssuccesful searching for areas with similar public transport schedulecharacteristics.</p>  </details></details><details>  <summary>16. <b>标题：Turning Traffic Monitoring Cameras into Intelligent Sensors for Traffic  Density Estimation</b></summary>  <p><b>编号</b>：[64]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00941</p>  <p><b>作者</b>：Zijian Hu,  William H.K. Lam,  S.C. Wong,  Andy H.F. Chow,  Wei Ma</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：estimating traffic density using uncalibrated traffic monitoring cameras, time traffic information without installing additional sensors, providing useful traffic state information, accurate traffic state information plays, traffic density estimation problem</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Accurate traffic state information plays a pivotal role in the IntelligentTransportation Systems (ITS), and it is an essential input to various smartmobility applications such as signal coordination and traffic flow prediction.The current practice to obtain the traffic state information is throughspecialized sensors such as loop detectors and speed cameras. In mostmetropolitan areas, traffic monitoring cameras have been installed to monitorthe traffic conditions on arterial roads and expressways, and the collectedvideos or images are mainly used for visual inspection by traffic engineers.Unfortunately, the data collected from traffic monitoring cameras are affectedby the 4L characteristics: Low frame rate, Low resolution, Lack of annotateddata, and Located in complex road environments. Therefore, despite the greatpotentials of the traffic monitoring cameras, the 4L characteristics hinderthem from providing useful traffic state information (e.g., speed, flow,density). This paper focuses on the traffic density estimation problem as it iswidely applicable to various traffic surveillance systems. To the best of ourknowledge, there is a lack of the holistic framework for addressing the 4Lcharacteristics and extracting the traffic density information from trafficmonitoring camera data. In view of this, this paper proposes a framework forestimating traffic density using uncalibrated traffic monitoring cameras with4L characteristics. The proposed framework consists of two major components:camera calibration and vehicle detection. The camera calibration methodestimates the actual length between pixels in the images and videos, and thevehicle counts are extracted from the deep-learning-based vehicle detectionmethod. Combining the two components, high-granular traffic density can beestimated. To validate the proposed framework, two case studies were conductedin Hong Kong and Sacramento. The results show that the Mean Absolute Error(MAE) in camera calibration is less than 0.2 meters out of 6 meters, and theaccuracy of vehicle detection under various conditions is approximately 90%.Overall, the MAE for the estimated density is 9.04 veh/km/lane in Hong Kong and1.30 veh/km/lane in Sacramento. The research outcomes can be used to calibratethe speed-density fundamental diagrams, and the proposed framework can provideaccurate and real-time traffic information without installing additionalsensors.</p>  </details></details><details>  <summary>17. <b>标题：Combining expert knowledge and neural networks to model environmental  stresses in agriculture</b></summary>  <p><b>编号</b>：[71]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00918</p>  <p><b>作者</b>：Kostadin Cvejoski,  Jannis Schuecker,  Anne-Katrin Mahlein,  Bogdan Georgiev</p>  <p><b>备注</b>：19 pages, Winners of the 2019 Syngenta Crop Challenge</p>  <p><b>关键词</b>：first design deterministic expert models, combine representation learning capabilities, model environmental heat, sensitivity analysis, resistant ones</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this work we combine representation learning capabilities of neuralnetwork with agricultural knowledge from experts to model environmental heatand drought stresses. We first design deterministic expert models which serveas a benchmark and inform the design of flexible neural-network architectures.Finally, a sensitivity analysis of the latter allows a clustering of hybridsinto susceptible and resistant ones.</p>  </details></details><details>  <summary>18. <b>标题：Smart Fashion: A Review of AI Applications in the Fashion & Apparel  Industry</b></summary>  <p><b>编号</b>：[75]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00905</p>  <p><b>作者</b>：Seyed Omid Mohammadi,  Ahmad Kalhor (University of Tehran, College of Engineering, School of Electrical and Computer Engineering, Tehran, Iran)</p>  <p><b>备注</b>：99 Pages, 79 Figures, 24 Tables, Full length manuscript</p>  <p><b>关键词</b>：86 public fashion datasets accompanied, fashion research articles provides researchers, explicit research directions, 580 related articles, paper provides</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The fashion industry is on the verge of an unprecedented change. Theimplementation of machine learning, computer vision, and artificialintelligence (AI) in fashion applications is opening lots of new opportunitiesfor this industry. This paper provides a comprehensive survey on this matter,categorizing more than 580 related articles into 22 well-definedfashion-related tasks. Such structured task-based multi-label classification offashion research articles provides researchers with explicit researchdirections and facilitates their access to the related studies, improving thevisibility of studies simultaneously. For each task, a time chart is providedto analyze the progress through the years. Furthermore, we provide a list of 86public fashion datasets accompanied by a list of suggested applications andadditional information for each.</p>  </details></details><details>  <summary>19. <b>标题：Intervention Efficient Algorithm for Two-Stage Causal MDPs</b></summary>  <p><b>编号</b>：[84]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00886</p>  <p><b>作者</b>：Rahul Madhavan,  Aurghya Maiti,  Gaurav Sinha,  Siddharth Barman</p>  <p><b>备注</b>：29 pages</p>  <p><b>关键词</b>：study markov decision processes, instance dependent regret bound, utilizes convex optimization, regret minimization guarantees, current work develops</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We study Markov Decision Processes (MDP) wherein states correspond to causalgraphs that stochastically generate rewards. In this setup, the learner's goalis to identify atomic interventions that lead to high rewards by intervening onvariables at each state. Generalizing the recent causal-bandit framework, thecurrent work develops (simple) regret minimization guarantees for two-stagecausal MDPs, with parallel causal graph at each state. We propose an algorithmthat achieves an instance dependent regret bound. A key feature of ouralgorithm is that it utilizes convex optimization to address the explorationproblem. We identify classes of instances wherein our regret guarantee isessentially tight, and experimentally validate our theoretical results.</p>  </details></details><details>  <summary>20. <b>标题：On the Expressivity of Markov Reward</b></summary>  <p><b>编号</b>：[89]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00876</p>  <p><b>作者</b>：David Abel,  Will Dabney,  Anna Harutyunyan,  Mark K. Ho,  Michael L. Littman,  Doina Precup,  Satinder Singh</p>  <p><b>备注</b>：Accepted to NeurIPS 2021</p>  <p><b>关键词</b>：study around three new abstract notions, main results prove, reward function exists, markov reward function, markov reward function</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Reward is the driving force for reinforcement-learning agents. This paper isdedicated to understanding the expressivity of reward as a way to capture tasksthat we would want an agent to perform. We frame this study around three newabstract notions of "task" that might be desirable: (1) a set of acceptablebehaviors, (2) a partial ordering over behaviors, or (3) a partial orderingover trajectories. Our main results prove that while reward can express many ofthese tasks, there exist instances of each task type that no Markov rewardfunction can capture. We then provide a set of polynomial-time algorithms thatconstruct a Markov reward function that allows an agent to optimize tasks ofeach of these three types, and correctly determine when no such reward functionexists. We conclude with an empirical study that corroborates and illustratesour theoretical findings.</p>  </details></details><details>  <summary>21. <b>标题：DetectorNet: Transformer-enhanced Spatial Temporal Graph Neural Network  for Traffic Prediction</b></summary>  <p><b>编号</b>：[94]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00869</p>  <p><b>作者</b>：He Li,  Shiyu Zhang,  Xuejiao Li,  Liangcai Su,  Hongjie Huang,  Duo Jin,  Linghao Chen,  Jianbing Huang,  Jaesoo Yoo</p>  <p><b>备注</b>：The 29th ACM SIGSPATIAL International Conference on Advances in Geographic Information Systems (ACM SIGSPATIAL 2021)</p>  <p><b>关键词</b>：eventually loses much valuable potential information, data presents unique challenges including, four ablation experiments proves, static road network structure, view temporal attention module</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Detectors with high coverage have direct and far-reaching benefits for roadusers in route planning and avoiding traffic congestion, but utilizing thesedata presents unique challenges including: the dynamic temporal correlation,and the dynamic spatial correlation caused by changes in road conditions.Although the existing work considers the significance of modeling withspatial-temporal correlation, what it has learned is still a static roadnetwork structure, which cannot reflect the dynamic changes of roads, andeventually loses much valuable potential information. To address thesechallenges, we propose DetectorNet enhanced by Transformer. Differs fromprevious studies, our model contains a Multi-view Temporal Attention module anda Dynamic Attention module, which focus on the long-distance and short-distancetemporal correlation, and dynamic spatial correlation by dynamically updatingthe learned knowledge respectively, so as to make accurate prediction. Inaddition, the experimental results on two public datasets and the comparisonresults of four ablation experiments proves that the performance of DetectorNetis better than the eleven advanced baselines.</p>  </details></details><details>  <summary>22. <b>标题：Interpretive Blindness</b></summary>  <p><b>编号</b>：[96]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00867</p>  <p><b>作者</b>：Nicholas Asher,  Julie Hunter</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：promote good epistemic practices, particular characteristic contemporary testimony, one acquires information, argumentative completeness },, hierarchical bayesian settings</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We model here an epistemic bias we call \textit{interpretive blindness} (IB).IB is a special problem for learning from testimony, in which one acquiresinformation only from text or conversation. We show that IB follows from aco-dependence between background beliefs and interpretation in a Bayesiansetting and the nature of contemporary testimony. We argue that a particularcharacteristic contemporary testimony, \textit{argumentative completeness}, canpreclude learning in hierarchical Bayesian settings, even in the presence ofconstraints that are designed to promote good epistemic practices.</p>  </details></details><details>  <summary>23. <b>标题：Surreal Decisions</b></summary>  <p><b>编号</b>：[98]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00862</p>  <p><b>作者</b>：Eddy Keming Chen,  Daniel Rubio</p>  <p><b>备注</b>：First published online: 05 June 2018</p>  <p><b>关键词</b>：surreal decision theory respects dominance reasoning even, pascalian decision problem depends, surreal numbers shall provide, pure pascalian strategy beats, although expected utility theory</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Although expected utility theory has proven a fruitful and elegant theory inthe finite realm, attempts to generalize it to infinite values have resulted inmany paradoxes. In this paper, we argue that the use of John Conway's surrealnumbers shall provide a firm mathematical foundation for transfinite decisiontheory. To that end, we prove a surreal representation theorem and show thatour surreal decision theory respects dominance reasoning even in the case ofinfinite values. We then bring our theory to bear on one of the more venerabledecision problems in the literature: Pascal's Wager. Analyzing the wagershowcases our theory's virtues and advantages. To that end, we analyze twoobjections against the wager: Mixed Strategies and Many Gods. After formulatingthe two objections in the framework of surreal utilities and probabilities, ourtheory correctly predicts that (1) the pure Pascalian strategy beats all mixedstrategies, and (2) what one should do in a Pascalian decision problem dependson what one's credence function is like. Our analysis therefore suggests thatalthough Pascal's Wager is mathematically coherent, it does not deliver what itpurports to, a rationally compelling argument that people should lead areligious life regardless of how confident they are in theism and itsalternatives.</p>  </details></details><details>  <summary>24. <b>标题：Deep Learning Transformer Architecture for Named Entity Recognition on  Low Resourced Languages: State of the art results</b></summary>  <p><b>编号</b>：[106]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00830</p>  <p><b>作者</b>：Ridewaan Hanslo</p>  <p><b>备注</b>：8 pages, 6 tables, and 3 figures</p>  <p><b>关键词</b>：conditional random fields ml model, transformer models significantly improve performance, tuning parameters per language, natural language processing tasks, additional research could evaluate</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper reports on the evaluation of Deep Learning (DL) transformerarchitecture models for Named-Entity Recognition (NER) on ten low-resourcedSouth African (SA) languages. In addition, these DL transformer models werecompared to other Neural Network and Machine Learning (ML) NER models. Thefindings show that transformer models significantly improve performance whenapplying discrete fine-tuning parameters per language. Furthermore, fine-tunedtransformer models outperform other neural network and machine learning modelswith NER on the low-resourced SA languages. For example, the transformer modelsgenerated the highest F-scores for six of the ten SA languages, including thehighest average F-score surpassing the Conditional Random Fields ML model.Additional research could evaluate the more recent transformer architecturemodels on other Natural Language Processing tasks and applications, such asPhrase chunking, Machine Translation, and Part-of-Speech tagging.</p>  </details></details><details>  <summary>25. <b>标题：Teaching Fairness, Accountability, Confidentiality, and Transparency in  Artificial Intelligence through the Lens of Reproducibility</b></summary>  <p><b>编号</b>：[107]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00826</p>  <p><b>作者</b>：Ana Lucic,  Maurits Bleeker,  Sami Jullien,  Samarth Bhargav,  Maarten de Rijke</p>  <p><b>备注</b>：Preprint</p>  <p><b>关键词</b>：machine learning reproducibility challenge, two academic years, open source repository, one year coincided, group project based</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this work we explain the setup for a technical, graduate-level course onFairness, Accountability, Confidentiality and Transparency in ArtificialIntelligence (FACT-AI) at the University of Amsterdam, which teaches FACT-AIconcepts through the lens of reproducibility. The focal point of the course isa group project based on reproducing existing FACT-AI algorithms from top AIconferences, and writing a report about their experiences. In the firstiteration of the course, we created an open source repository with the codeimplementations from the group projects. In the second iteration, we encouragedstudents to submit their group projects to the Machine Learning ReproducibilityChallenge, which resulted in 9 reports from our course being accepted to thechallenge. We reflect on our experience teaching the course over two academicyears, where one year coincided with a global pandemic, and propose guidelinesfor teaching FACT-AI through reproducibility in graduate-level AI programs. Wehope this can be a useful resource for instructors to set up similar courses attheir universities in the future.</p>  </details></details><details>  <summary>26. <b>标题：Towards Reformulating Essence Specifications for Robustness</b></summary>  <p><b>编号</b>：[110]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00821</p>  <p><b>作者</b>：Özgür Akgün,  Alan M. Frisch,  Ian P. Gent,  Christopher Jefferson,  Ian Miguel,  Peter Nightingale,  András Z. Salamon</p>  <p><b>备注</b>：12 pages, 6 figures, presented at ModRef 2021</p>  <p><b>关键词</b>：conjure automated modelling tool, user may therefore omit, constraint modelling decisions, transformed specification compared, many equivalent ways</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The Essence language allows a user to specify a constraint problem at a levelof abstraction above that at which constraint modelling decisions are made.Essence specifications are refined into constraint models using the Conjureautomated modelling tool, which employs a suite of refinement rules. However,Essence is a rich language in which there are many equivalent ways to specify agiven problem. A user may therefore omit the use of domain attributes orabstract types, resulting in fewer refinement rules being applicable andtherefore a reduced set of output models from which to select. This paperaddresses the problem of recovering this information automatically to increasethe robustness of the quality of the output constraint models in the face ofvariation in the input Essence specification. We present reformulation rulesthat can change the type of a decision variable or add attributes that shrinkits domain. We demonstrate the efficacy of this approach in terms of thequantity and quality of models Conjure can produce from the transformedspecification compared with the original.</p>  </details></details><details>  <summary>27. <b>标题：Livestock Monitoring with Transformer</b></summary>  <p><b>编号</b>：[114]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00801</p>  <p><b>作者</b>：Bhavesh Tangirala,  Ishan Bhandari,  Daniel Laszlo,  Deepak K. Gupta,  Rajat M. Thomas,  Devanshu Arya</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：carefully curated dataset comprising video sequences, starformer outperforms popular baseline models trained, computer vision algorithms perform poorly, could use standard video cameras, perform simultaneous instance level segmentation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Tracking the behaviour of livestock enables early detection and thusprevention of contagious diseases in modern animal farms. Apart from economicgains, this would reduce the amount of antibiotics used in livestock farmingwhich otherwise enters the human diet exasperating the epidemic of antibioticresistance - a leading cause of death. We could use standard video cameras,available in most modern farms, to monitor livestock. However, most computervision algorithms perform poorly on this task, primarily because, (i) animalsbred in farms look identical, lacking any obvious spatial signature, (ii) noneof the existing trackers are robust for long duration, and (iii) real-worldconditions such as changing illumination, frequent occlusion, varying cameraangles, and sizes of the animals make it hard for models to generalize. Giventhese challenges, we develop an end-to-end behaviour monitoring system forgroup-housed pigs to perform simultaneous instance level segmentation,tracking, action recognition and re-identification (STAR) tasks. We presentstarformer, the first end-to-end multiple-object livestock monitoring frameworkthat learns instance-level embeddings for grouped pigs through the use oftransformer architecture. For benchmarking, we present Pigtrace, a carefullycurated dataset comprising video sequences with instance level bounding box,segmentation, tracking and activity classification of pigs in real indoorfarming environment. Using simultaneous optimization on STAR tasks we show thatstarformer outperforms popular baseline models trained for individual tasks.</p>  </details></details><details>  <summary>28. <b>标题：Knowledge-driven Site Selection via Urban Knowledge Graph</b></summary>  <p><b>编号</b>：[120]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00787</p>  <p><b>作者</b>：Yu Liu,  Jingtao Ding,  Yong Li</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：source urban data makes intelligent site selection promising, site selection determines optimal locations, driven methods heavily rely, knowsite outperforms representative baselines, based attention mechanism developed</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Site selection determines optimal locations for new stores, which is ofcrucial importance to business success. Especially, the wide application ofartificial intelligence with multi-source urban data makes intelligent siteselection promising. However, existing data-driven methods heavily rely onfeature engineering, facing the issues of business generalization and complexrelationship modeling. To get rid of the dilemma, in this work, we borrow ideasfrom knowledge graph (KG), and propose a knowledge-driven model for siteselection, short for KnowSite. Specifically, motivated by distilled knowledgeand rich semantics in KG, we firstly construct an urban KG (UrbanKG) withcities' key elements and semantic relationships captured. Based on UrbanKG, weemploy pre-training techniques for semantic representations, which are fed intoan encoder-decoder structure for site decisions. With multi-relational messagepassing and relation path-based attention mechanism developed, KnowSitesuccessfully reveals the relationship between various businesses and siteselection criteria. Extensive experiments on two datasets demonstrate thatKnowSite outperforms representative baselines with both effectiveness andexplainability achieved.</p>  </details></details><details>  <summary>29. <b>标题：An AI-powered Smart Routing Solution for Payment Systems</b></summary>  <p><b>编号</b>：[121]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00783</p>  <p><b>作者</b>：Ramya Bygari,  Aayush Gupta,  Shashwat Raghuvanshi,  Aakanksha Bapna,  Birendra Sahu</p>  <p><b>备注</b>：9 pages, 10 figures, Accepted at IEEE Big Data Conference - this https URL</p>  <p><b>关键词</b>：adaptive time decay rate algorithm, terminals using static rules, random forest classifier, net banking )., multiple terminals associated</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In the current era of digitization, online payment systems are attractingconsiderable interest. Improving the efficiency of a payment system isimportant since it has a substantial impact on revenues for businesses. Agateway is an integral component of a payment system through which everytransaction is routed. In an online payment system, payment processorsintegrate with these gateways by means of various configurations such aspricing, methods, risk checks, etc. These configurations are called terminals.Each gateway can have multiple terminals associated with it. Routing a paymenttransaction through the best terminal is crucial to increase the probability ofa payment transaction being successful. Machine learning (ML) and artificialintelligence (AI) techniques can be used to accurately predict the bestterminals based on their previous performance and various payment-relatedattributes. We have devised a pipeline consisting of static and dynamicmodules. The static module does the initial filtering of the terminals usingstatic rules and a logistic regression model that predicts gateway downtimes.Subsequently, the dynamic module computes a lot of novel features based onsuccess rate, payment attributes, time lag, etc. to model the terminalbehaviour accurately. These features are updated using an adaptive time decayrate algorithm in real-time using a feedback loop and passed to a random forestclassifier to predict the success probabilities for every terminal. Thispipeline is currently in production at Razorpay routing millions oftransactions through it in real-time and has given a 4-6\% improvement insuccess rate across all payment methods (credit card, debit card, UPI, netbanking). This has made our payment system more resilient to performance drops,which has improved the user experience, instilled more trust in the merchants,and boosted the revenue of the business.</p>  </details></details><details>  <summary>30. <b>标题：Validate on Sim, Detect on Real -- Model Selection for Domain  Randomization</b></summary>  <p><b>编号</b>：[130]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00765</p>  <p><b>作者</b>：Gal Leibovich,  Guy Jacob,  Shadi Endrawis,  Gal Novik,  Aviv Tamar</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：policy ranking without requiring additional real world data, uses significantly less data compared, method achieves significantly better ranking, vsdr improves policy selection across, extensively evaluate different dr parameters</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>A practical approach to learning robot skills, often termed sim2real, is totrain control policies in simulation and then deploy them on a real robot.Popular techniques to improve the sim2real transfer build on domainrandomization (DR): Training the policy on a diverse set of randomly generateddomains with the hope of better generalization to the real world. Due to thelarge number of hyper-parameters in both the policy learning and DR algorithms,one often ends up with a large number of trained models, where choosing thebest model among them demands costly evaluation on the real robot. In this workwe ask: Can we rank the policies without running them in the real world? Ourmain idea is that a predefined set of real world data can be used to evaluateall policies, using out-of-distribution detection (OOD) techniques. In a sense,this approach can be seen as a "unit test" to evaluate policies before any realworld execution. However, we find that by itself, the OOD score can beinaccurate and very sensitive to the particular OOD method. Our maincontribution is a simple-yet-effective policy score that combines OOD with anevaluation in simulation. We show that our score - VSDR - can significantlyimprove the accuracy of policy ranking without requiring additional real worlddata. We evaluate the effectiveness of VSDR on sim2real transfer in a roboticgrasping task with image inputs. We extensively evaluate different DRparameters and OOD methods, and show that VSDR improves policy selection acrossthe board. More importantly, our method achieves significantly better ranking,and uses significantly less data compared to baselines.</p>  </details></details><details>  <summary>31. <b>标题：Towards the Generalization of Contrastive Self-Supervised Learning</b></summary>  <p><b>编号</b>：[138]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00743</p>  <p><b>作者</b>：Weiran Huang,  Mingyang Yi,  Xuyang Zhao</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：attracted great attention since, two canonical contrastive self, trained models generalize, requires unlabeled data, embeds input data</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recently, self-supervised learning has attracted great attention since itonly requires unlabeled data for training. Contrastive learning is a popularapproach for self-supervised learning and empirically performs well inpractice. However, the theoretical understanding of its generalization abilityon downstream tasks is not well studied. To this end, we present a theoreticalexplanation of how contrastive self-supervised pre-trained models generalize todownstream tasks. Concretely, we quantitatively show that the self-supervisedmodel has generalization ability on downstream classification tasks if itembeds input data into a feature space with distinguishing centers of classesand closely clustered intra-class samples. With the above conclusion, wefurther explore SimCLR and Barlow Twins, which are two canonical contrastiveself-supervised methods. We prove that the aforementioned feature space can beobtained via any of the methods, and thus explain their success on thegeneralization on downstream classification tasks. Finally, various experimentsare also conducted to verify our theoretical findings.</p>  </details></details><details>  <summary>32. <b>标题：URIR: Recommendation algorithm of user RNN encoder and item encoder  based on knowledge graph</b></summary>  <p><b>编号</b>：[139]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00739</p>  <p><b>作者</b>：Na zhao,  Zhen Long,  Zhi-Dan Zhao,  Jian Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：thereby obtaining better recommendation results, item encoder recommendation algorithm based, user recurrent neural network, perform inner product operation, obtain better user codes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Due to a large amount of information, it is difficult for users to find whatthey are interested in among the many choices. In order to improve users'experience, recommendation systems have been widely used in musicrecommendations, movie recommendations, online shopping, and other scenarios.Recently, Knowledge Graph (KG) has been proven to be an effective tool toimprove the performance of recommendation systems. However, a huge challenge inapplying knowledge graphs for recommendation is how to use knowledge graphs toobtain better user codes and item codes. In response to this problem, thisresearch proposes a user Recurrent Neural Network (RNN) encoder and itemencoder recommendation algorithm based on Knowledge Graph (URIR). This studyencodes items by capturing high-level neighbor information to generate items'representation vectors and applies an RNN and items' representation vectors toencode users to generate users' representation vectors, and then perform innerproduct operation on users' representation vectors and items' representationvectors to get probabilities of users interaction with items. Numericalexperiments on three real-world datasets demonstrate that URIR is superiorperformance to state-of-the-art algorithms in indicators such as AUC,Precision, Recall, and MRR. This implies that URIR can effectively useknowledge graph to obtain better user codes and item codes, thereby obtainingbetter recommendation results.</p>  </details></details><details>  <summary>33. <b>标题：Robust Deep Learning from Crowds with Belief Propagation</b></summary>  <p><b>编号</b>：[141]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00734</p>  <p><b>作者</b>：Hoyoung Kim,  Seunghyuk Cho,  Dongwoo Kim,  Jungseul Ok</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：em framework alternating variational inference, graphical model representing local dependencies, crowdsourcing systems enable us, based em algorithm, predictive model working</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Crowdsourcing systems enable us to collect noisy labels from crowd workers. Agraphical model representing local dependencies between workers and tasksprovides a principled way of reasoning over the true labels from the noisyanswers. However, one needs a predictive model working on unseen data directlyfrom crowdsourced datasets instead of the true labels in many cases. To infertrue labels and learn a predictive model simultaneously, we propose a newdata-generating process, where a neural network generates the true labels fromtask features. We devise an EM framework alternating variational inference anddeep learning to infer the true labels and to update the neural network,respectively. Experimental results with synthetic and real datasets show abelief-propagation-based EM algorithm is robust to i) corruption in taskfeatures, ii) multi-modal or mismatched worker prior, and iii) few spammerssubmitting noises to many tasks.</p>  </details></details><details>  <summary>34. <b>标题：Outlining and Filling: Hierarchical Query Graph Generation for Answering  Complex Questions over Knowledge Graph</b></summary>  <p><b>编号</b>：[142]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00732</p>  <p><b>作者</b>：Yongrui Chen,  Huiying Li,  Guilin Qi,  Tianxing Wu,  Tenggou Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：graph generation model performs hierarchical generation, complex questions bring three new challenges, although recent approaches perform well, regard common complicated sparql syntax, new unified query graph grammar</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Query graph building aims to build correct executable SPARQL over theknowledge graph for answering natural language questions. Although recentapproaches perform well by NN-based query graph ranking, more complex questionsbring three new challenges: complicated SPARQL syntax, huge search space forranking, and noisy query graphs with local ambiguity. This paper handles thesechallenges. Initially, we regard common complicated SPARQL syntax as thesub-graphs comprising of vertices and edges and propose a new unified querygraph grammar to adapt them. Subsequently, we propose a new two-stage approachto build query graphs. In the first stage, the top-$k$ related instances(entities, relations, etc.) are collected by simple strategies, as thecandidate instances. In the second stage, a graph generation model performshierarchical generation. It first outlines a graph structure whose vertices andedges are empty slots, and then fills the appropriate instances into the slots,thereby completing the query graph. Our approach decomposes the unbearablesearch space of entire query graphs into affordable sub-spaces of operations,meanwhile, leverages the global structural information to eliminate localambiguity. The experimental results demonstrate that our approach greatlyimproves state-of-the-art on the hardest KGQA benchmarks and has an excellentperformance on complex questions.</p>  </details></details><details>  <summary>35. <b>标题：Adaptive Multi-receptive Field Spatial-Temporal Graph Convolutional  Network for Traffic Forecasting</b></summary>  <p><b>编号</b>：[144]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00724</p>  <p><b>作者</b>：Xing Wang (1),  Juan Zhao (1),  Lin Zhu (1),  Xu Zhou (2),  Zhao Li (2),  Junlan Feng (1),  Chao Deng (1),  Yong Zhang (2) ((1) China Mobile Research Institute, Beijing, China, (2) Electronic Engineering, Beijing University of Posts and Telecommunications, Beijing, China)</p>  <p><b>备注</b>：To be published in IEEE GLOBECOM</p>  <p><b>关键词</b>：intrinsic features make mobile network traffic forecasting far, two different domains consistently show amf, novel deep learning network architecture, mobile network traffic forecasting, fully connected deep network</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Mobile network traffic forecasting is one of the key functions in dailynetwork operation. A commercial mobile network is large, heterogeneous, complexand dynamic. These intrinsic features make mobile network traffic forecastingfar from being solved even with recent advanced algorithms such as graphconvolutional network-based prediction approaches and various attentionmechanisms, which have been proved successful in vehicle traffic forecasting.In this paper, we cast the problem as a spatial-temporal sequence predictiontask. We propose a novel deep learning network architecture, AdaptiveMulti-receptive Field Spatial-Temporal Graph Convolutional Networks(AMF-STGCN), to model the traffic dynamics of mobile base stations. AMF-STGCNextends GCN by (1) jointly modeling the complex spatial-temporal dependenciesin mobile networks, (2) applying attention mechanisms to capture variousReceptive Fields of heterogeneous base stations, and (3) introducing an extradecoder based on a fully connected deep network to conquer the errorpropagation challenge with multi-step forecasting. Experiments on fourreal-world datasets from two different domains consistently show AMF-STGCNoutperforms the state-of-the-art methods.</p>  </details></details><details>  <summary>36. <b>标题：Edge-Level Explanations for Graph Neural Networks by Extending  Explainability Methods for Convolutional Neural Networks</b></summary>  <p><b>编号</b>：[145]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00722</p>  <p><b>作者</b>：Tetsu Kasanishi,  Xueting Wang,  Toshihiko Yamasaki</p>  <p><b>备注</b>：4 pages, accepted at 23rd IEEE International Symposium on Multimedia (ISM), short paper, 2021</p>  <p><b>关键词</b>：weighted class activation mapping, take graph data, graph neural networks, experimental results indicate, deep learning models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Graph Neural Networks (GNNs) are deep learning models that take graph data asinputs, and they are applied to various tasks such as traffic prediction andmolecular property prediction. However, owing to the complexity of the GNNs, ithas been difficult to analyze which parts of inputs affect the GNN model'soutputs. In this study, we extend explainability methods for ConvolutionalNeural Networks (CNNs), such as Local Interpretable Model-Agnostic Explanations(LIME), Gradient-Based Saliency Maps, and Gradient-Weighted Class ActivationMapping (Grad-CAM) to GNNs, and predict which edges in the input graphs areimportant for GNN decisions. The experimental results indicate that theLIME-based approach is the most efficient explainability method for multipletasks in the real-world situation, outperforming even the state-of-the-artmethod in GNN explainability.</p>  </details></details><details>  <summary>37. <b>标题：Communication-Compressed Adaptive Gradient Method for Distributed  Nonconvex Optimization</b></summary>  <p><b>编号</b>：[150]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00705</p>  <p><b>作者</b>：Yujia Wang,  Lu Lin,  Jinghui Chen</p>  <p><b>备注</b>：34 pages, 10 figures</p>  <p><b>关键词</b>：efficient distributed adaptive gradient method converges, proposed distributed learning framework features, efficient adaptive gradient methods, distributed nonconvex optimization problem, side model update design</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Due to the explosion in the size of the training datasets, distributedlearning has received growing interest in recent years. One of the majorbottlenecks is the large communication cost between the central server and thelocal workers. While error feedback compression has been proven to besuccessful in reducing communication costs with stochastic gradient descent(SGD), there are much fewer attempts in building communication-efficientadaptive gradient methods with provable guarantees, which are widely used intraining large-scale machine learning models. In this paper, we propose a newcommunication-compressed AMSGrad for distributed nonconvex optimizationproblem, which is provably efficient. Our proposed distributed learningframework features an effective gradient compression strategy and a worker-sidemodel update design. We prove that the proposed communication-efficientdistributed adaptive gradient method converges to the first-order stationarypoint with the same iteration complexity as uncompressed vanilla AMSGrad in thestochastic nonconvex optimization setting. Experiments on various benchmarksback up our theory.</p>  </details></details><details>  <summary>38. <b>标题：Graph Structural Attack by Spectral Distanc</b></summary>  <p><b>编号</b>：[159]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00684</p>  <p><b>作者</b>：Lu Lin,  Ethan Blaser,  Hongning Wang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experiments demonstrate remarkable effectiveness, disrupt graph spectral filters, effective graph structural attack, graph learning tasks, graph convolutional networks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Graph Convolutional Networks (GCNs) have fueled a surge of interest due totheir superior performance on graph learning tasks, but are also shownvulnerability to adversarial attacks. In this paper, an effective graphstructural attack is investigated to disrupt graph spectral filters in theFourier domain. We define the spectral distance based on the eigenvalues ofgraph Laplacian to measure the disruption of spectral filters. We then generateedge perturbations by simultaneously maximizing a task-specific attackobjective and the proposed spectral distance. The experiments demonstrateremarkable effectiveness of the proposed attack in the white-box setting atboth training and test time. Our qualitative analysis shows the connectionbetween the attack behavior and the imposed changes on the spectraldistribution, which provides empirical evidence that maximizing spectraldistance is an effective manner to change the structural property of graphs inthe spatial domain and perturb the frequency components in the Fourier domain.</p>  </details></details><details>  <summary>39. <b>标题：Comparative Explanations of Recommendations</b></summary>  <p><b>编号</b>：[165]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00670</p>  <p><b>作者</b>：Aobo Yang,  Nan Wang,  Renqin Cai,  Hongbo Deng,  Hongning Wang</p>  <p><b>备注</b>：17 pages, 4 figures</p>  <p><b>关键词</b>：two large recommendation benchmark datasets, art explainable recommendation algorithms demonstrate, new explanation quality metric based, first extract one sentence, e ., comparative explanations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>As recommendation is essentially a comparative (or ranking) process, a goodexplanation should illustrate to users why an item is believed to be betterthan another, i.e., comparative explanations about the recommended items.Ideally, after reading the explanations, a user should reach the same rankingof items as the system's. Unfortunately, little research attention has yet beenpaid on such comparative explanations.In this work, we develop an extract-and-refine architecture to explain therelative comparisons among a set of ranked items from a recommender system. Foreach recommended item, we first extract one sentence from its associatedreviews that best suits the desired comparison against a set of referenceitems. Then this extracted sentence is further articulated with respect to thetarget user through a generative model to better explain why the item isrecommended. We design a new explanation quality metric based on BLEU to guidethe end-to-end training of the extraction and refinement components, whichavoids generation of generic content. Extensive offline evaluations on twolarge recommendation benchmark datasets and serious user studies against anarray of state-of-the-art explainable recommendation algorithms demonstrate thenecessity of comparative explanations and the effectiveness of our solution.</p>  </details></details><details>  <summary>40. <b>标题：RMNA: A Neighbor Aggregation-Based Knowledge Graph Representation  Learning Model Using Rule Mining</b></summary>  <p><b>编号</b>：[171]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00658</p>  <p><b>作者</b>：Ling Chen,  Jun Cui,  Xing Tang,  Chaodu Song,  Yuntao Qian,  Yansheng Li,  Yongjun Zhang</p>  <p><b>备注</b>：22 pages, 2 figures</p>  <p><b>关键词</b>：uses selected horn rules, art traditional representation learning, existing narl models either, narl model named rmna, models show competitive performance</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Although the state-of-the-art traditional representation learning (TRL)models show competitive performance on knowledge graph completion, there is noparameter sharing between the embeddings of entities, and the connectionsbetween entities are weak. Therefore, neighbor aggregation-based representationlearning (NARL) models are proposed, which encode the information in theneighbors of an entity into its embeddings. However, existing NARL modelseither only utilize one-hop neighbors, ignoring the information in multi-hopneighbors, or utilize multi-hop neighbors by hierarchical neighbor aggregation,destroying the completeness of multi-hop neighbors. In this paper, we propose aNARL model named RMNA, which obtains and filters horn rules through a rulemining algorithm, and uses selected horn rules to transform valuable multi-hopneighbors into one-hop neighbors, therefore, the information in valuablemulti-hop neighbors can be completely utilized by aggregating these one-hopneighbors. In experiments, we compare RMNA with the state-of-the-art TRL modelsand NARL models. The results show that RMNA has a competitive performance.</p>  </details></details><details>  <summary>41. <b>标题：Collage: Automated Integration of Deep Learning Backends</b></summary>  <p><b>编号</b>：[173]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00655</p>  <p><b>作者</b>：Byungsoo Jeon,  Sunghyun Park,  Peiyuan Liao,  Sheng Xu,  Tianqi Chen,  Zhihao Jia</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：collage automatically integrates multiple backends together without manual intervention, current dl frameworks require significant manual effort, two different nvidia gpus, outperforms existing frameworks, integrating dl backends</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Strong demands for efficient deployment of Deep Learning (DL) applicationsprompt the rapid development of a rich DL ecosystem. To keep up with its fastadvancement, it is crucial for DL frameworks to efficiently integrate a varietyof optimized libraries and runtimes as their backends and generate the fastestpossible executable by using them properly. However, current DL frameworksrequire significant manual effort to integrate diverse backends and often failto deliver high performance. In this paper, we propose Collage, an automaticframework for integrating DL backends. Collage provides a backend registrationinterface that allows users to precisely specify the capability of variousbackends. By leveraging the specifications of available backends, Collagesearches for an optimized backend placement for a given workload and executionenvironment. Our evaluation shows that Collage automatically integratesmultiple backends together without manual intervention, and outperformsexisting frameworks by 1.21x, 1.39x, 1.40x on two different NVIDIA GPUs and anIntel CPU respectively.</p>  </details></details><details>  <summary>42. <b>标题：Settling the Horizon-Dependence of Sample Complexity in Reinforcement  Learning</b></summary>  <p><b>编号</b>：[180]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00633</p>  <p><b>作者</b>：Yuanzhi Li,  Ruosong Wang,  Lin F. Yang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：1 )$- optimal policy using $\ mathrm, polylog }( h )$ episodes, polylog }( h )$ dependence, h $, previous work, horizon markov decision processes</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Recently there is a surge of interest in understanding the horizon-dependenceof the sample complexity in reinforcement learning (RL). Notably, for an RLenvironment with horizon length $H$, previous work have shown that there is aprobably approximately correct (PAC) algorithm that learns an $O(1)$-optimalpolicy using $\mathrm{polylog}(H)$ episodes of environment interactions whenthe number of states and actions is fixed. It is yet unknown whether the$\mathrm{polylog}(H)$ dependence is necessary or not. In this work, we resolvethis question by developing an algorithm that achieves the same PAC guaranteewhile using only $O(1)$ episodes of environment interactions, completelysettling the horizon-dependence of the sample complexity in RL. We achieve thisbound by (i) establishing a connection between value functions in discountedand finite-horizon Markov decision processes (MDPs) and (ii) a novelperturbation analysis in MDPs. We believe our new techniques are of independentinterest and could be applied in related questions in RL.</p>  </details></details><details>  <summary>43. <b>标题：Clinical Evidence Engine: Proof-of-Concept For A  Clinical-Domain-Agnostic Decision Support Infrastructure</b></summary>  <p><b>编号</b>：[185]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00621</p>  <p><b>作者</b>：Bojian Hou,  Hao Zhang,  Gur Ladizhinsky,  Gur Ladizhinsky,  Stephen Yang,  Volodymyr Kuleshov,  Fei Wang,  Qian Yang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：complex datasets increasingly characterize modern clinical decision support systems, effectively identify clinical trial reports based, illustrating two example use scenarios, catheter infection among adult patients, require arterial catheters ), intervention</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Abstruse learning algorithms and complex datasets increasingly characterizemodern clinical decision support systems (CDSS). As a result, clinicians cannoteasily or rapidly scrutinize the CDSS recommendation when facing a difficultdiagnosis or treatment decision in practice. Over-trust or under-trust arefrequent. Prior research has explored supporting such assessments by explainingDST data inputs and algorithmic mechanisms. This paper explores a differentapproach: Providing precisely relevant, scientific evidence from biomedicalliterature. We present a proof-of-concept system, Clinical Evidence Engine, todemonstrate the technical and design feasibility of this approach across threedomains (cardiovascular diseases, autism, cancer). Leveraging Clinical BioBERT,the system can effectively identify clinical trial reports based on lengthyclinical questions (e.g., "risks of catheter infection among adult patients inintensive care unit who require arterial catheters, if treated with povidoneiodine-alcohol"). This capability enables the system to identify clinicaltrials relevant to diagnostic/treatment hypotheses -- a clinician's or aCDSS's. Further, Clinical Evidence Engine can identify key parts of a clinicaltrial abstract, including patient population (e.g., adult patients in intensivecare unit who require arterial catheters), intervention (povidoneiodine-alcohol), and outcome (risks of catheter infection). This capabilityopens up the possibility of enabling clinicians to 1) rapidly determine thematch between a clinical trial and a clinical question, and 2) understand theresult and contexts of the trial without extensive reading. We demonstrate thispotential by illustrating two example use scenarios of the system. We discussthe idea of designing DST explanations not as specific to a DST or analgorithm, but as a domain-agnostic decision support infrastructure.</p>  </details></details><details>  <summary>44. <b>标题：R-BERT-CNN: Drug-target interactions extraction from biomedical  literature</b></summary>  <p><b>编号</b>：[188]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00611</p>  <p><b>作者</b>：Jehad Aldahdooh,  Ziaurrehman Tanoli,  Jing Tang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：biocreative vi chemprot test corpus )., biocreative vii drugprot test corpus, biocreative vii challenge, often manually extracted, micro f1 score</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this research, we present our work participation for the DrugProt task ofBioCreative VII challenge. Drug-target interactions (DTIs) are critical fordrug discovery and repurposing, which are often manually extracted from theexperimental articles. There are >32M biomedical articles on PubMed andmanually extracting DTIs from such a huge knowledge base is challenging. Tosolve this issue, we provide a solution for Track 1, which aims to extract 10types of interactions between drug and protein entities. We applied an EnsembleClassifier model that combines BioMed-RoBERTa, a state of art language model,with Convolutional Neural Networks (CNN) to extract these relations. Despitethe class imbalances in the BioCreative VII DrugProt test corpus, our modelachieves a good performance compared to the average of other submissions in thechallenge, with the micro F1 score of 55.67% (and 63% on BioCreative VIChemProt test corpus). The results show the potential of deep learning inextracting various types of DTIs.</p>  </details></details><details>  <summary>45. <b>标题：Graph Embedding with Hierarchical Attentive Membership</b></summary>  <p><b>编号</b>：[193]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00604</p>  <p><b>作者</b>：Lu Lin,  Ethan Blaser,  Hongning Wang</p>  <p><b>备注</b>：to be published in WSDM 2022</p>  <p><b>关键词</b>：novel hierarchical attentive membership model, enables explainable embedding learning, defined hierarchical grouping structure, learned node embeddings along, art graph embedding solutions</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The exploitation of graph structures is the key to effectively learningrepresentations of nodes that preserve useful information in graphs. Aremarkable property of graph is that a latent hierarchical grouping of nodesexists in a global perspective, where each node manifests its membership to aspecific group based on the context composed by its neighboring nodes. Mostprior works ignore such latent groups and nodes' membership to differentgroups, not to mention the hierarchy, when modeling the neighborhood structure.Thus, they fall short of delivering a comprehensive understanding of the nodesunder different contexts in a graph. In this paper, we propose a novelhierarchical attentive membership model for graph embedding, where the latentmemberships for each node are dynamically discovered based on its neighboringcontext. Both group-level and individual-level attentions are performed whenaggregating neighboring states to generate node embeddings. We introducestructural constraints to explicitly regularize the inferred memberships ofeach node, such that a well-defined hierarchical grouping structure iscaptured. The proposed model outperformed a set of state-of-the-art graphembedding solutions on node classification and link prediction tasks in avariety of graphs including citation networks and social networks. Qualitativeevaluations visualize the learned node embeddings along with the inferredmemberships, which proved the concept of membership hierarchy and enablesexplainable embedding learning in graphs.</p>  </details></details><details>  <summary>46. <b>标题：Unsupervised Learning to Subphenotype Delirium Patients from Electronic  Health Records</b></summary>  <p><b>编号</b>：[201]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00592</p>  <p><b>作者</b>：Yiqing Zhao,  Yuan Luo</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：work could recalibrate existing delirium prediction models, detect delirium using medical information mart, common acute onset brain dysfunction, highly heterogeneous medical conditions, underlying medical condition</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Delirium is a common acute onset brain dysfunction in the emergency settingand is associated with higher mortality. It is difficult to detect and monitorsince its presentations and risk factors can be different depending on theunderlying medical condition of patients. In our study, we aimed to identifysubtypes within the delirium population and build subgroup-specific predictivemodels to detect delirium using Medical Information Mart for Intensive Care IV(MIMIC-IV) data. We showed that clusters exist within the delirium population.Differences in feature importance were also observed for subgroup-specificpredictive models. Our work could recalibrate existing delirium predictionmodels for each delirium subgroup and improve the precision of deliriumdetection and monitoring for ICU or emergency department patients who hadhighly heterogeneous medical conditions.</p>  </details></details><details>  <summary>47. <b>标题：JEDAI Explains Decision-Making AI</b></summary>  <p><b>编号</b>：[205]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00585</p>  <p><b>作者</b>：Trevor Angle,  Naman Shah,  Pulkit Verma,  Siddharth Srivastava</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：also provides users customized explanations, jedai helps users create high, paper presents jedai, educational efforts aimed, ai system designed</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper presents JEDAI, an AI system designed for outreach and educationalefforts aimed at non-AI experts. JEDAI features a novel synthesis of researchideas from integrated task and motion planning and explainable AI. JEDAI helpsusers create high-level, intuitive plans while ensuring that they will beexecutable by the robot. It also provides users customized explanations abouterrors and helps improve their understanding of AI planning as well as thelimits and capabilities of the underlying robot system.</p>  </details></details><details>  <summary>48. <b>标题：What Went Wrong? Explaining Overall Dialogue Quality through  Utterance-Level Impacts</b></summary>  <p><b>编号</b>：[209]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00572</p>  <p><b>作者</b>：James D. Finch,  Sarah E. Finch,  Jinho D. Choi</p>  <p><b>备注</b>：Accepted at the 3rd Workshop on NLP for ConvAI</p>  <p><b>关键词</b>：dialogue system often requires intensive developer effort, overall user rating without utterance, allowing resultant model conclusions, overall dialogue quality, overall dialogue quality</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Improving user experience of a dialogue system often requires intensivedeveloper effort to read conversation logs, run statistical analyses, andintuit the relative importance of system shortcomings. This paper presents anovel approach to automated analysis of conversation logs that learns therelationship between user-system interactions and overall dialogue quality.Unlike prior work on utterance-level quality prediction, our approach learnsthe impact of each interaction from the overall user rating withoututterance-level annotation, allowing resultant model conclusions to be derivedon the basis of empirical evidence and at low cost. Our model identifiesinteractions that have a strong correlation with the overall dialogue qualityin a chatbot setting. Experiments show that the automated analysis from ourmodel agrees with expert judgments, making this work the first to show thatsuch weakly-supervised learning of utterance-level quality prediction is highlyachievable.</p>  </details></details><details>  <summary>49. <b>标题：An Approach to Inference-Driven Dialogue Management within a Social  Chatbot</b></summary>  <p><b>编号</b>：[210]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00570</p>  <p><b>作者</b>：Sarah E. Finch,  James D. Finch,  Daniil Huryn,  William Hutsell,  Xiaoyuan Huang,  Han He,  Jinho D. Choi</p>  <p><b>备注</b>：Published in 4th Proceedings of Alexa Prize (Alexa Prize 2020)</p>  <p><b>关键词</b>：synthesize new predicates using efficient graph matching, novel dialogue management approach based, first stage translates user utterances, synthesize new knowledge, understanding latent semantics</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present a chatbot implementing a novel dialogue management approach basedon logical inference. Instead of framing conversation a sequence of responsegeneration tasks, we model conversation as a collaborative inference process inwhich speakers share information to synthesize new knowledge in real time. Ourchatbot pipeline accomplishes this modelling in three broad stages. The firststage translates user utterances into a symbolic predicate representation. Thesecond stage then uses this structured representation in conjunction with alarger knowledge base to synthesize new predicates using efficient graphmatching. In the third and final stage, our bot selects a small subset ofpredicates and translates them into an English response. This approach lendsitself to understanding latent semantics of user inputs, flexible initiativetaking, and responses that are novel and coherent with the dialogue context.</p>  </details></details><details>  <summary>50. <b>标题：Fast Global Convergence of Policy Optimization for Constrained MDPs</b></summary>  <p><b>编号</b>：[216]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00552</p>  <p><b>作者</b>：Tao Liu,  Ruida Zhou,  Dileep Kalathil,  P. R. Kumar,  Chao Tian</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：horizon constrained markov decision process framework, faster convergence rate $\ mathcal, }( 1 /\ sqrt, })$ global convergence rate, natural policy gradient</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We address the issue of safety in reinforcement learning. We pose the problemin a discounted infinite-horizon constrained Markov decision process framework.Existing results have shown that gradient-based methods are able to achieve an$\mathcal{O}(1/\sqrt{T})$ global convergence rate both for the optimality gapand the constraint violation. We exhibit a natural policy gradient-basedalgorithm that has a faster convergence rate $\mathcal{O}(\log(T)/T)$ for boththe optimality gap and the constraint violation. When Slater's condition issatisfied and known a priori, zero constraint violation can be furtherguaranteed for a sufficiently large $T$ while maintaining the same convergencerate.</p>  </details></details><details>  <summary>51. <b>标题：Cross-Domain Reasoning via Template Filling</b></summary>  <p><b>编号</b>：[218]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00539</p>  <p><b>作者</b>：Dheeraj Rajagopal,  Vivek Khetan,  Bogdan Sacaleanu,  Anatole Gershman,  Andrew Fano,  Eduard Hovy</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experiments across several pretrained encoder, filling enables pretrained sequence, sequence models across domains, depth error analysis, reasoning across domains</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this paper, we explore the ability of sequence to sequence models toperform cross-domain reasoning. Towards this, we present aprompt-template-filling approach to enable sequence to sequence models toperform cross-domain reasoning. We also present a case-study with commonsenseand health and well-being domains, where we study how prompt-template-fillingenables pretrained sequence to sequence models across domains. Our experimentsacross several pretrained encoder-decoder models show that cross-domainreasoning is challenging for current models. We also show an in-depth erroranalysis and avenues for future research for reasoning across domains</p>  </details></details><details>  <summary>52. <b>标题：PnPOOD : Out-Of-Distribution Detection for Text Classification via Plug  andPlay Data Augmentation</b></summary>  <p><b>编号</b>：[231]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00506</p>  <p><b>作者</b>：Mrinal Rawat,  Ramya Hebbalaguppe,  Lovekesh Vig</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：method generates high quality discriminative samples close, dathathri et al ., 2020 )., socheret al ., 2013 )., domain sample generation using, stanford sentiment treebank dataset</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>While Out-of-distribution (OOD) detection has been well explored in computervision, there have been relatively few prior attempts in OOD detection for NLPclassification. In this paper we argue that these prior attempts do not fullyaddress the OOD problem and may suffer from data leakage and poor calibrationof the resulting models. We present PnPOOD, a data augmentation technique toperform OOD detection via out-of-domain sample generation using the recentlyproposed Plug and Play Language Model (Dathathri et al., 2020). Our methodgenerates high quality discriminative samples close to the class boundaries,resulting in accurate OOD detection at test time. We demonstrate that our modeloutperforms prior models on OOD sample detection, and exhibits lowercalibration error on the 20 newsgroup text and Stanford Sentiment Treebankdataset (Lang, 1995; Socheret al., 2013). We further highlight an importantdata leakage issue with datasets used in prior attempts at OOD detection, andshare results on a new dataset for OOD detection that does not suffer from thesame problem.</p>  </details></details><details>  <summary>53. <b>标题：DSC-IITISM at FinCausal 2021: Combining POS tagging with Attention-based  Contextual Representations for Identifying Causal Relationships in Financial  Documents</b></summary>  <p><b>编号</b>：[235]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00490</p>  <p><b>作者</b>：Gunjan Haldar,  Aman Mittal,  Pradyumna Gupta</p>  <p><b>备注</b>：5 pages, 5 tables</p>  <p><b>关键词</b>：financial documents using transformers, causality detection draws plenty, natural language processing, modern transformer models, explore several methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Causality detection draws plenty of attention in the field of NaturalLanguage Processing and linguistics research. It has essential applications ininformation retrieval, event prediction, question answering, financialanalysis, and market research. In this study, we explore several methods toidentify and extract cause-effect pairs in financial documents usingtransformers. For this purpose, we propose an approach that combines POStagging with the BIO scheme, which can be integrated with modern transformermodels to address this challenge of identifying causality in a given text. Ourbest methodology achieves an F1-Score of 0.9551, and an Exact Match Score of0.8777 on the blind test in the FinCausal-2021 Shared Task at the FinCausal2021 Workshop.</p>  </details></details><details>  <summary>54. <b>标题：Graph Tree Neural Networks</b></summary>  <p><b>编号</b>：[261]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00424</p>  <p><b>作者</b>：Seokjun Kim,  Jaeeun Jang,  Hee-seok Jung,  Hyeoncheol Kim</p>  <p><b>备注</b>：This paper was submitted as a simple experiment. It has been slightly modified from the original</p>  <p><b>关键词</b>：supervised learning using graph tree recursive neural network, graph tree recursive attention networks, propose graph tree neural networks, graph tree recursive autoencoders, recently shown good performance</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Graph neural networks (GNNs) have recently shown good performance in variousfields. In this paper, we propose graph tree neural networks (GTNNs) designedto solve the problems of existing networks by analyzing the structure of humanneural networks. In GTNNs, information units are related to the form of a graphand then they become a bigger unit of information again and have a relationshipwith other information units. At this point, the unit of information is a setof neurons, and we can express it as a vector with GTNN. Defining the startingand ending points in a single graph is difficult, and a tree cannot express therelationship among sibling nodes. However, a graph tree can be expressed usingleaf and root nodes as its starting and ending points and the relationshipamong sibling nodes. Depth-first convolution (DFC) encodes the interactionresult from leaf nodes to the root node in a bottom-up approach, anddepth-first deconvolution (DFD) decodes the interaction result from the rootnode to the leaf nodes in a top-down approach. GTNN is data-driven learning inwhich the number of convolutions varies according to the depth of the tree.Moreover, learning features of different types together is possible.Supervised, unsupervised, and semi-supervised learning using graph treerecursive neural network (GTR) , graph tree recursive attention networks(GTRAs), and graph tree recursive autoencoders (GTRAEs) are introduced in thispaper. We experimented with a simple toy test with source code dataset.</p>  </details></details><details>  <summary>55. <b>标题：Interpreting Deep Knowledge Tracing Model on EdNet Dataset</b></summary>  <p><b>编号</b>：[263]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00419</p>  <p><b>作者</b>：Deliang Wang,  Yu Lu,  Qinggang Meng,  Penghe Chen</p>  <p><b>备注</b>：This paper has been accepted and presented in AAAI 2021 Workshop on AI Education</p>  <p><b>关键词</b>：koedinger 2009 ),, whose size, preliminary experiment results show, kt model mainly adopts, lu et al, knowledge tracing models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>With more deep learning techniques being introduced into the knowledgetracing domain, the interpretability issue of the knowledge tracing models hasaroused researchers' attention. Our previous study(Lu et al. 2020) on buildingand interpreting the KT model mainly adopts the ASSISTment dataset(Feng,Heffernan, and Koedinger 2009),, whose size is relatively small. In this work,we perform the similar tasks but on a large and newly available dataset, calledEdNet(Choi et al. 2020). The preliminary experiment results show theeffectiveness of the interpreting techniques, while more questions and tasksare worthy to be further explored and accomplished.</p>  </details></details><details>  <summary>56. <b>标题：A Simple Approach to Image Tilt Correction with Self-Attention MobileNet  for Smartphones</b></summary>  <p><b>编号</b>：[274]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00398</p>  <p><b>作者</b>：Siddhant Garg,  Debi Prasanna Mohanty,  Siva Prasad Thota,  Sukumar Moharana</p>  <p><b>备注</b>：Accepted - British Machine vision Conference 2021</p>  <p><b>关键词</b>：standard convolutional kernels, snapdragon 750 octa, predict multiple angles, least 4 milliseconds, inverted bottleneck blocks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The main contributions of our work are two-fold. First, we present aSelf-Attention MobileNet, called SA-MobileNet Network that can model long-rangedependencies between the image features instead of processing the local regionas done by standard convolutional kernels. SA-MobileNet contains self-attentionmodules integrated with the inverted bottleneck blocks of the MobileNetV3 modelwhich results in modeling of both channel-wise attention and spatial attentionof the image features and at the same time introduce a novel self-attentionarchitecture for low-resource devices. Secondly, we propose a novel trainingpipeline for the task of image tilt detection. We treat this problem in amulti-label scenario where we predict multiple angles for a tilted input imagein a narrow interval of range 1-2 degrees, depending on the dataset used. Thisprocess induces an implicit correlation between labels without anycomputational overhead of the second or higher-order methods in multi-labellearning. With the combination of our novel approach and the architecture, wepresent state-of-the-art results on detecting the image tilt angle on mobiledevices as compared to the MobileNetV3 model. Finally, we establish thatSA-MobileNet is more accurate than MobileNetV3 on SUN397, NYU-V1, and ADE20Kdatasets by 6.42%, 10.51%, and 9.09% points respectively, and faster by atleast 4 milliseconds on Snapdragon 750 Octa-core.</p>  </details></details><details>  <summary>57. <b>标题：Conical Classification For Computationally Efficient One-Class Topic  Determination</b></summary>  <p><b>编号</b>：[282]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00375</p>  <p><b>作者</b>：Sameer Khanna</p>  <p><b>备注</b>：Findings in Empirical Methods in Natural Language Processing 2021</p>  <p><b>关键词</b>：vector space model representing, research regarding efficient approaches, also propose normal exclusion, propose conical classification, computationally efficient manner</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>As the Internet grows in size, so does the amount of text based informationthat exists. For many application spaces it is paramount to isolate andidentify texts that relate to a particular topic. While one-classclassification would be ideal for such analysis, there is a relative lack ofresearch regarding efficient approaches with high predictive power. By notingthat the range of documents we wish to identify can be represented as positivelinear combinations of the Vector Space Model representing our text, we proposeConical classification, an approach that allows us to identify if a document isof a particular topic in a computationally efficient manner. We also proposeNormal Exclusion, a modified version of Bi-Normal Separation that makes it moresuitable within the one-class classification context. We show in our analysisthat our approach not only has higher predictive power on our datasets, but isalso faster to compute.</p>  </details></details><details>  <summary>58. <b>标题：Sustainable AI: Environmental Implications, Challenges and Opportunities</b></summary>  <p><b>编号</b>：[283]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00364</p>  <p><b>作者</b>：Carole-Jean Wu,  Ramya Raghavendra,  Udit Gupta,  Bilge Acun,  Newsha Ardalani,  Kiwan Maeng,  Gloria Chang,  Fiona Aga Behram,  James Huang,  Charles Bai,  Michael Gschwind,  Anurag Gupta,  Myle Ott,  Anastasia Melnikov,  Salvatore Candido,  David Brooks,  Geeta Chauhan,  Benjamin Lee,  Hsien-Hsin S. Lee,  Bugra Akyildiz,  Maximilian Balandat,  Joe Spisak,  Ravi Jain,  Mike Rabbat,  Kim Hazelwood</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：scale machine learning use cases, model development cycle across industry, important development directions across, linear growth trends, overall carbon footprint</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper explores the environmental impact of the super-linear growthtrends for AI from a holistic perspective, spanning Data, Algorithms, andSystem Hardware. We characterize the carbon footprint of AI computing byexamining the model development cycle across industry-scale machine learninguse cases and, at the same time, considering the life cycle of system hardware.Taking a step further, we capture the operational and manufacturing carbonfootprint of AI computing and present an end-to-end analysis for what and howhardware-software design and at-scale optimization can help reduce the overallcarbon footprint of AI. Based on the industry experience and lessons learned,we share the key challenges and chart out important development directionsacross the many dimensions of AI. We hope the key messages and insightspresented in this paper can inspire the community to advance the field of AI inan environmentally-responsible manner.</p>  </details></details><details>  <summary>59. <b>标题：A Survey on the Robustness of Feature Importance and Counterfactual  Explanations</b></summary>  <p><b>编号</b>：[285]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00358</p>  <p><b>作者</b>：Saumitra Mishra,  Sanghamitra Dutta,  Jason Long,  Daniele Magazzeni</p>  <p><b>备注</b>：4 pages plus references. Accepted at the workshop on Explainable AI in Finance (XAI-FIN21). Camera-ready version</p>  <p><b>关键词</b>：extending current robustness analysis approaches, classify different robustness approaches, identify reliable explainability methods, unify existing definitions, relatively lesser effort</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>There exist several methods that aim to address the crucial task ofunderstanding the behaviour of AI/ML models. Arguably, the most popular amongthem are local explanations that focus on investigating model behaviour forindividual instances. Several methods have been proposed for local analysis,but relatively lesser effort has gone into understanding if the explanationsare robust and accurately reflect the behaviour of underlying models. In thiswork, we present a survey of the works that analysed the robustness of twoclasses of local explanations (feature importance and counterfactualexplanations) that are popularly used in analysing AI/ML models in finance. Thesurvey aims to unify existing definitions of robustness, introduces a taxonomyto classify different robustness approaches, and discusses some interestingresults. Finally, the survey introduces some pointers about extending currentrobustness analysis approaches so as to identify reliable explainabilitymethods.</p>  </details></details><details>  <summary>60. <b>标题：Multi-Agent Advisor Q-Learning</b></summary>  <p><b>编号</b>：[288]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00345</p>  <p><b>作者</b>：Sriram Ganapathi Subramanian,  Matthew E. Taylor,  Kate Larson,  Mark Crowley</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：advising multiple intelligent reinforcement agents, present two novel q, sum stochastic game environments, help improve reinforcement learning, sum stochastic games</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In the last decade, there have been significant advances in multi-agentreinforcement learning (MARL) but there are still numerous challenges, such ashigh sample complexity and slow convergence to stable policies, that need to beovercome before wide-spread deployment is possible. However, many real-worldenvironments already, in practice, deploy sub-optimal or heuristic approachesfor generating policies. An interesting question which arises is how to bestuse such approaches as advisors to help improve reinforcement learning inmulti-agent domains. In this paper, we provide a principled framework forincorporating action recommendations from online sub-optimal advisors inmulti-agent settings. We describe the problem of ADvising Multiple IntelligentReinforcement Agents (ADMIRAL) in nonrestrictive general-sum stochastic gameenvironments and present two novel Q-learning based algorithms: ADMIRAL -Decision Making (ADMIRAL-DM) and ADMIRAL - Advisor Evaluation (ADMIRAL-AE),which allow us to improve learning by appropriately incorporating advice froman advisor (ADMIRAL-DM), and evaluate the effectiveness of an advisor(ADMIRAL-AE). We analyze the algorithms theoretically and provide fixed-pointguarantees regarding their learning in general-sum stochastic games.Furthermore, extensive experiments illustrate that these algorithms: can beused in a variety of environments, have performances that compare favourably toother related baselines, can scale to large state-action spaces, and are robustto poor advice from advisors.</p>  </details></details><details>  <summary>61. <b>标题：Causal Discovery in Linear Structural Causal Models with Deterministic  Relations</b></summary>  <p><b>编号</b>：[291]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00341</p>  <p><b>作者</b>：Yuqin Yang,  Mohamed Nafea,  AmirEmad Ghassami,  Negar Kiyavash</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：causal discovery form observational data generated, existing work almost exclusively focus, linear structural causal models, e ., models, underlying causal structure</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Linear structural causal models (SCMs) -- in which each observed variable isgenerated by a subset of the other observed variables as well as a subset ofthe exogenous sources -- are pervasive in causal inference and casualdiscovery. However, for the task of causal discovery, existing work almostexclusively focus on the submodel where each observed variable is associatedwith a distinct source with non-zero variance. This results in the restrictionthat no observed variable can deterministically depend on other observedvariables or latent confounders. In this paper, we extend the results onstructure learning by focusing on a subclass of linear SCMs which do not havethis property, i.e., models in which observed variables can be causallyaffected by any subset of the sources, and are allowed to be a deterministicfunction of other observed variables or latent confounders. This allows for amore realistic modeling of influence or information propagation in systems. Wefocus on the task of causal discovery form observational data generated from amember of this subclass. We derive a set of necessary and sufficient conditionsfor unique identifiability of the causal structure. To the best of ourknowledge, this is the first work that gives identifiability results for causaldiscovery under both latent confounding and deterministic relationships.Further, we propose an algorithm for recovering the underlying causal structurewhen the aforementioned conditions are satisfied. We validate our theoreticalresults both on synthetic and real datasets.</p>  </details></details><details>  <summary>62. <b>标题：3DP3: 3D Scene Perception via Probabilistic Programming</b></summary>  <p><b>编号</b>：[298]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00312</p>  <p><b>作者</b>：Nishad Gothoskar,  Marco Cusumano-Towner,  Ben Zinberg,  Matin Ghavamizadeh,  Falk Pollok,  Austin Garrett,  Joshua B. Tenenbaum,  Dan Gutfreund,  Vikash K. Mansinghka</p>  <p><b>备注</b>：NeurIPS 2021</p>  <p><b>关键词</b>：novel involutive mcmc updates, depth image likelihoods based, underlying latent 3d scene, 6dof object pose estimation, 3dp3 enables scene understanding</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We present 3DP3, a framework for inverse graphics that uses inference in astructured generative model of objects, scenes, and images. 3DP3 uses (i) voxelmodels to represent the 3D shape of objects, (ii) hierarchical scene graphs todecompose scenes into objects and the contacts between them, and (iii) depthimage likelihoods based on real-time graphics. Given an observed RGB-D image,3DP3's inference algorithm infers the underlying latent 3D scene, including theobject poses and a parsimonious joint parametrization of these poses, usingfast bottom-up pose proposals, novel involutive MCMC updates of the scene graphstructure, and, optionally, neural object detectors and pose estimators. Weshow that 3DP3 enables scene understanding that is aware of 3D shape,occlusion, and contact structure. Our results demonstrate that 3DP3 is moreaccurate at 6DoF object pose estimation from real images than deep learningbaselines and shows better generalization to challenging scenes with novelviewpoints, contact, and partial observability.</p>  </details></details><details>  <summary>63. <b>标题：EmpBot: A T5-based Empathetic Chatbot focusing on Sentiments</b></summary>  <p><b>编号</b>：[299]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00310</p>  <p><b>作者</b>：Emmanouil Zaranis,  Georgios Paraskevopoulos,  Athanasios Katsamanis,  Alexandros Potamianos</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：empathy forcing auxiliary losses favor empathetic responses, transformer pretrained language model, human evaluation results indicate, favoring empathetic responses, response language modeling</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In this paper, we introduce EmpBot: an end-to-end empathetic chatbot.Empathetic conversational agents should not only understand what is beingdiscussed, but also acknowledge the implied feelings of the conversationpartner and respond appropriately. To this end, we propose a method based on atransformer pretrained language model (T5). Specifically, during finetuning wepropose to use three objectives: response language modeling, sentimentunderstanding, and empathy forcing. The first objective is crucial forgenerating relevant and coherent responses, while the next ones are significantfor acknowledging the sentimental state of the conversational partner and forfavoring empathetic responses. We evaluate our model on the EmpatheticDialoguesdataset using both automated metrics and human evaluation. The inclusion of thesentiment understanding and empathy forcing auxiliary losses favor empatheticresponses, as human evaluation results indicate, comparing with the currentstate-of-the-art.</p>  </details></details><details>  <summary>64. <b>标题：TargetUM: Targeted High-Utility Itemset Querying</b></summary>  <p><b>编号</b>：[300]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00309</p>  <p><b>作者</b>：Jinbao Miao,  Shicheng Wan,  Wensheng Gan,  Jiayi Sun,  Jiahui Chen</p>  <p><b>备注</b>：Preprint. 7 figures, 9 tables</p>  <p><b>关键词</b>：minimum utility threshold (\ textit, three effective pruning strategies, utility itemset querying using, targeted utility mining task, utility itemset mining</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Traditional high-utility itemset mining (HUIM) aims to determine allhigh-utility itemsets (HUIs) that satisfy the minimum utility threshold(\textit{minUtil}) in transaction databases. However, in most applications, notall HUIs are interesting because only specific parts are required. Thus,targeted mining based on user preferences is more important than traditionalmining tasks. This paper is the first to propose a target-based HUIM problemand to provide a clear formulation of the targeted utility mining task in aquantitative transaction database. A tree-based algorithm known as Target-basedhigh-Utility iteMset querying using (TargetUM) is proposed. The algorithm usesa lexicographic querying tree and three effective pruning strategies to improvethe mining efficiency. We implemented experimental validation on several realand synthetic databases, and the results demonstrate that the performance of\textbf{TargetUM} is satisfactory, complete, and correct. Finally, owing to thelexicographic querying tree, the database no longer needs to be scannedrepeatedly for multiple queries.</p>  </details></details><details>  <summary>65. <b>标题：Long-Range Route-planning for Autonomous Vehicles in the Polar Oceans</b></summary>  <p><b>编号</b>：[307]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00293</p>  <p><b>作者</b>：Maria Fox,  Michael Meredith,  J. Alexander Brearley,  Dan Jones,  Derek Long</p>  <p><b>备注</b>：Submitted to the AMS Journal of Atmospheric and Oceanic Technology</p>  <p><b>关键词</b>：piloted autonomous underwater vehicles, range route planning capability, term autonomous missions, high carbon cost, polar ice conditions</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>There is an increasing demand for piloted autonomous underwater vehicles(AUVs) to operate in polar ice conditions. At present, AUVs are deployed fromships and directly human-piloted in these regions, entailing a high carbon costand limiting the scope of operations. A key requirement for long-termautonomous missions is a long-range route planning capability that is aware ofthe changing ice conditions. In this paper we address the problem of automatinglong-range route-planning for AUVs operating in the Southern Ocean. We presentthe route-planning method and results showing that efficient, ice-avoiding,long-distance traverses can be planned.</p>  </details></details><details>  <summary>66. <b>标题：Intrusion Prevention through Optimal Stopping</b></summary>  <p><b>编号</b>：[308]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00289</p>  <p><b>作者</b>：Kim Hammar,  Rolf Stadler</p>  <p><b>备注</b>：Preprint; Submitted to IEEE for review. arXiv admin note: substantial text overlap with arXiv:2106.07160</p>  <p><b>关键词</b>：study automated intrusion prevention using reinforcement learning, optimal defender policy using dynamic programming, validating policies includes two systems, formulation gives us insight, produce effective defender policies</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>We study automated intrusion prevention using reinforcement learning.Following a novel approach, we formulate the problem of intrusion prevention asan (optimal) multiple stopping problem. This formulation gives us insight intothe structure of optimal policies, which we show to have threshold properties.For most practical cases, it is not feasible to obtain an optimal defenderpolicy using dynamic programming. We therefore develop a reinforcement learningapproach to approximate an optimal policy. Our method for learning andvalidating policies includes two systems: a simulation system where defenderpolicies are incrementally learned and an emulation system where statistics areproduced that drive simulation runs and where learned policies are evaluated.We show that our approach can produce effective defender policies for apractical IT infrastructure of limited size. Inspection of the learned policiesconfirms that they exhibit threshold properties.</p>  </details></details><details>  <summary>67. <b>标题：A Decentralized Reinforcement Learning Framework for Efficient Passage  of Emergency Vehicles</b></summary>  <p><b>编号</b>：[310]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00278</p>  <p><b>作者</b>：Haoran Su,  Yaofeng Desmond Zhong,  Dey Biswadip,  Amit Chakraborty</p>  <p><b>备注</b>：Artificial Intelligence and Humanitarian Assistance and Disaster Recovery (AI + HADR) workshop, NeurIPS 2021. arXiv admin note: substantial text overlap with arXiv:2109.05429</p>  <p><b>关键词</b>：reduce emv travel time employ route optimization, emvlight outperforms benchmark transportation engineering techniques, level cooperative traffic signal phase strategies, planned route often becomes suboptimal, based traffic signal control methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Emergency vehicles (EMVs) play a critical role in a city's response totime-critical events such as medical emergencies and fire outbreaks. Theexisting approaches to reduce EMV travel time employ route optimization andtraffic signal pre-emption without accounting for the coupling between routethese two subproblems. As a result, the planned route often becomes suboptimal.In addition, these approaches also do not focus on minimizing disruption to theoverall traffic flow. To address these issues, we introduce EMVLight in thispaper. This is a decentralized reinforcement learning (RL) framework forsimultaneous dynamic routing and traffic signal control. EMVLight extendsDijkstra's algorithm to efficiently update the optimal route for an EMV inreal-time as it travels through the traffic network. Consequently, thedecentralized RL agents learn network-level cooperative traffic signal phasestrategies that reduce EMV travel time and the average travel time of non-EMVsin the network. We have carried out comprehensive experiments with syntheticand real-world maps to demonstrate this benefit. Our results show that EMVLightoutperforms benchmark transportation engineering techniques as well as existingRL-based traffic signal control methods.</p>  </details></details><details>  <summary>68. <b>标题：On Joint Learning for Solving Placement and Routing in Chip Design</b></summary>  <p><b>编号</b>：[325]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00234</p>  <p><b>作者</b>：Ruoyu Cheng,  Junchi Yan</p>  <p><b>备注</b>：accepted for 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：joint learning approach via reinforcement learning, public chip design benchmarks show, modern chip design flow, gradient based optimization scheme, local node level information</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>For its advantage in GPU acceleration and less dependency on human experts,machine learning has been an emerging tool for solving the placement androuting problems, as two critical steps in modern chip design flow. Being stillin its early stage, there are fundamental issues: scalability, reward design,and end-to-end learning paradigm etc. To achieve end-to-end placement learning,we first propose a joint learning method termed by DeepPlace for the placementof macros and standard cells, by the integration of reinforcement learning witha gradient based optimization scheme. To further bridge the placement with thesubsequent routing task, we also develop a joint learning approach viareinforcement learning to fulfill both macro placement and routing, which iscalled DeepPR. One key design in our (reinforcement) learning paradigm involvesa multi-view embedding model to encode both global graph level and local nodelevel information of the input macros. Moreover, the random networkdistillation is devised to encourage exploration. Experiments on public chipdesign benchmarks show that our method can effectively learn from experienceand also provides intermediate placement for the post standard cell placement,within few hours for training.</p>  </details></details><details>  <summary>69. <b>标题：Fuzzy Conceptual Graphs: a comparative discussion</b></summary>  <p><b>编号</b>：[329]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00229</p>  <p><b>作者</b>：Adam Faci (LFI, TRT),  Marie-Jeanne Lesot (LFI),  Claire Laudy (TRT)</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：discussion revolves around three axes, fuzzy set theory, based knowledge representation, many possible interpretations, fuzzy conceptual graphs</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Conceptual Graphs (CG) are a graph-based knowledge representation andreasoning formalism; fuzzy Conceptual Graphs (fCG) constitute an extension thatenriches their expressiveness, exploiting the fuzzy set theory so as to relaxtheir constraints at various levels. This paper proposes a comparative study ofexisting approaches over their respective advantages and possible limitations.The discussion revolves around three axes: (a) Critical view of each approachand comparison with previous propositions from the state of the art; (b)Presentation of the many possible interpretations of each definition toillustrate its potential and its limits; (c) Clarification of the part of CGimpacted by the definition as well as the relaxed constraint.</p>  </details></details><details>  <summary>70. <b>标题：Mastering Atari Games with Limited Data</b></summary>  <p><b>编号</b>：[337]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00210</p>  <p><b>作者</b>：Weirui Ye,  Shaohuai Liu,  Thanard Kurutach,  Pieter Abbeel,  Yang Gao</p>  <p><b>备注</b>：Published at NeurIPS 2021</p>  <p><b>关键词</b>：consume 500 times less data, based visual rl algorithm built, prominent methods requiring millions, atari game benchmark remains, based rl algorithms</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Reinforcement learning has achieved great success in many applications.However, sample efficiency remains a key challenge, with prominent methodsrequiring millions (or even billions) of environment steps to train. Recently,there has been significant progress in sample efficient image-based RLalgorithms; however, consistent human-level performance on the Atari gamebenchmark remains an elusive goal. We propose a sample efficient model-basedvisual RL algorithm built on MuZero, which we name EfficientZero. Our methodachieves 190.4% mean human performance and 116.0% median performance on theAtari 100k benchmark with only two hours of real-time game experience andoutperforms the state SAC in some tasks on the DMControl 100k benchmark. Thisis the first time an algorithm achieves super-human performance on Atari gameswith such little data. EfficientZero's performance is also close to DQN'sperformance at 200 million frames while we consume 500 times less data.EfficientZero's low sample complexity and high performance can bring RL closerto real-world applicability. We implement our algorithm in aneasy-to-understand manner and it is available atthis https URL. We hope it will accelerate the researchof MCTS-based RL algorithms in the wider community.</p>  </details></details><details>  <summary>71. <b>标题：One Step at a Time: Pros and Cons of Multi-Step Meta-Gradient  Reinforcement Learning</b></summary>  <p><b>编号</b>：[339]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00206</p>  <p><b>作者</b>：Clément Bonnet,  Paul Caron,  Thomas Barrett,  Ian Davies,  Alexandre Laterre</p>  <p><b>备注</b>：14 pages, 6 figures, 2 tables</p>  <p><b>关键词</b>：novel method mixing multiple inner steps, learning process online encourage, multiple learning steps, avoid myopic updates, better learning signal</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Self-tuning algorithms that adapt the learning process online encourage moreeffective and robust learning. Among all the methods available, meta-gradientshave emerged as a promising approach. They leverage the differentiability ofthe learning rule with respect to some hyper-parameters to adapt them in anonline fashion. Although meta-gradients can be accumulated over multiplelearning steps to avoid myopic updates, this is rarely used in practice. Inthis work, we demonstrate that whilst multi-step meta-gradients do provide abetter learning signal in expectation, this comes at the cost of a significantincrease in variance, hindering performance. In the light of this analysis, weintroduce a novel method mixing multiple inner steps that enjoys a moreaccurate and robust meta-gradient signal, essentially trading off bias andvariance in meta-gradient estimation. When applied to the Snake game, themixing meta-gradient algorithm can cut the variance by a factor of 3 whileachieving similar or higher performance.</p>  </details></details><details>  <summary>72. <b>标题：A Comparative Review of Recent Few-Shot Object Detection Algorithms</b></summary>  <p><b>编号</b>：[342]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00201</p>  <p><b>作者</b>：Leng Jiaxu,  Chen Taiyue,  Gao Xinbo,  Yu Yongtao,  Wang Ye,  Gao Feng,  Wang Yue</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：shot detectors refine robust task notions, extra datasets without target, shot object detection, shot object detection, shot object detection</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Few-shot object detection, learning to adapt to the novel classes with a fewlabeled data, is an imperative and long-lasting problem due to the inherentlong-tail distribution of real-world data and the urgent demands to cut costsof data collection and annotation. Recently, some studies have explored how touse implicit cues in extra datasets without target-domain supervision to helpfew-shot detectors refine robust task notions. This survey provides acomprehensive overview from current classic and latest achievements forfew-shot object detection to future research expectations from manifoldperspectives. In particular, we first propose a data-based taxonomy of thetraining data and the form of corresponding supervision which are accessedduring the training stage. Following this taxonomy, we present a significantreview of the formal definition, main challenges, benchmark datasets,evaluation metrics, and learning strategies. In addition, we present a detailedinvestigation of how to interplay the object detection methods to develop thisissue systematically. Finally, we conclude with the current status of few-shotobject detection, along with potential research directions for this field.</p>  </details></details><details>  <summary>73. <b>标题：AutoDrone: Shortest Optimized Obstacle-Free Path Planning for Autonomous  Drones</b></summary>  <p><b>编号</b>：[343]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00200</p>  <p><b>作者</b>：Prithwish Jana,  Debasish Jana</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：work shows different scenarios, shortest feasible path computed, wreckage site affected, unmanned aerial vehicle, planned smart city</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>With technological advancement, drone has emerged as unmanned aerial vehiclethat can be controlled by humans to fly or reach a destination. This may beautonomous as well, where the drone itself is intelligent enough to find ashortest obstacle-free path to reach the destination from a designated source.Be it a planned smart city or even a wreckage site affected by naturalcalamity, we may imagine the buildings, any surface-erected structure or otherblockage as obstacles for the drone to fly in a direct line-of-sight path. So,the whole bird's eye-view of the landscape can be transformed to a graph ofgrid-cells, where some are occupied to indicate the obstacles and some are freeto indicate the free path. The autonomous drone (AutoDrone) will be able tofind out the shortest hindrance-free path while travelling in two-dimensionalspace and move from one place to another. In this paper, we propose a method tofind out an obstacle-free shortest path in the coordinate system guided by GPS.This can be especially beneficial in rescue operations and fast delivery orpick-up in an energy-efficient way, where our algorithm will help in findingout the shortest path and angle along which it should fly. Our work showsdifferent scenarios to path-tracing, through the shortest feasible pathcomputed by the autonomous drone.</p>  </details></details><details>  <summary>74. <b>标题：How should human translation coexist with NMT? Efficient tool for  building high quality parallel corpus</b></summary>  <p><b>编号</b>：[348]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00191</p>  <p><b>作者</b>：Chanjun Park,  Seolhwa Lee,  Hyeonseok Moon,  Sugyeong Eo,  Jaehyung Seo,  Heuiseok Lim</p>  <p><b>备注</b>：Accepted for Data-centric AI workshop at NeurIPS 2021</p>  <p><b>关键词</b>：combining data quality control, quality parallel corpora, proposed construction process, efficiently constructing high, neural machine translation</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This paper proposes a tool for efficiently constructing high-quality parallelcorpora with minimizing human labor and making this tool publicly available.Our proposed construction process is based on neural machine translation (NMT)to allow for it to not only coexist with human translation, but also improveits efficiency by combining data quality control with human translation in adata-centric approach.</p>  </details></details><details>  <summary>75. <b>标题：Convergence and Optimality of Policy Gradient Methods in Weakly Smooth  Settings</b></summary>  <p><b>编号</b>：[350]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00185</p>  <p><b>作者</b>：Matthew Shunshi Zhang,  Murat Erdogdu,  Animesh Garg</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：yet existing convergence analysis still relies, policy gradient methods without relying, weakly smooth policy classes, natural policy gradient algorithms, establish explicit convergence rates</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Policy gradient methods have been frequently applied to problems in controland reinforcement learning with great success, yet existing convergenceanalysis still relies on non-intuitive, impractical and often opaqueconditions. In particular, existing rates are achieved in limited settings,under strict smoothness and bounded conditions. In this work, we establishexplicit convergence rates of policy gradient methods without relying on theseconditions, instead extending the convergence regime to weakly smooth policyclasses with $L_2$ integrable gradient. We provide intuitive examples toillustrate the insight behind these new conditions. We also characterize thesufficiency conditions for the ergodicity of near-linear MDPs, which representan important class of problems. Notably, our analysis also shows that fastconvergence rates are achievable for both the standard policy gradient and thenatural policy gradient algorithms under these assumptions. Lastly we provideconditions and analysis for optimality of the converged policies.</p>  </details></details><details>  <summary>76. <b>标题：Hierarchical Heterogeneous Graph Representation Learning for Short Text  Classification</b></summary>  <p><b>编号</b>：[352]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00180</p>  <p><b>作者</b>：Yaqing Wang,  Song Wang,  Quanming Yao,  Dejing Dou</p>  <p><b>备注</b>：Accepted to EMNLP 2021</p>  <p><b>关键词</b>：facilitates effective label propagation among similar short texts, various benchmark short text datasets show, hierarchical heterogeneous graph consisting, shine consistently outperforms state, new method called shine</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Short text classification is a fundamental task in natural languageprocessing. It is hard due to the lack of context information and labeled datain practice. In this paper, we propose a new method called SHINE, which isbased on graph neural network (GNN), for short text classification. First, wemodel the short text dataset as a hierarchical heterogeneous graph consistingof word-level component graphs which introduce more semantic and syntacticinformation. Then, we dynamically learn a short document graph that facilitateseffective label propagation among similar short texts. Thus, compared withexisting GNN-based methods, SHINE can better exploit interactions between nodesof the same types and capture similarities between short texts. Extensiveexperiments on various benchmark short text datasets show that SHINEconsistently outperforms state-of-the-art methods, especially with fewerlabels.</p>  </details></details><details>  <summary>77. <b>标题：Advanced Algorithms of Collision Free Navigation and Flocking for  Autonomous UAVs</b></summary>  <p><b>编号</b>：[361]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00166</p>  <p><b>作者</b>：Taha Elmokadem</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：produce quick reactions around obstacles, methods offer good computational cost, advanced 3d reactive control strategies, also investigated considering uav dynamics, general 3d kinematic models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Unmanned aerial vehicles (UAVs) have become very popular for many militaryand civilian applications including in agriculture, construction, mining,environmental monitoring, etc. A desirable feature for UAVs is the ability tonavigate and perform tasks autonomously with least human interaction. This is avery challenging problem due to several factors such as the high complexity ofUAV applications, operation in harsh environments, limited payload and onboardcomputing power and highly nonlinear dynamics. The work presented in thisreport contributes towards the state-of-the-art in UAV control for safeautonomous navigation and motion coordination of multi-UAV systems. The firstpart of this report deals with single-UAV systems. The complex problem ofthree-dimensional (3D) collision-free navigation in unknown/dynamicenvironments is addressed. To that end, advanced 3D reactive control strategiesare developed adopting the sense-and-avoid paradigm to produce quick reactionsaround obstacles. A special case of navigation in 3D unknown confinedenvironments (i.e. tunnel-like) is also addressed. General 3D kinematic modelsare considered in the design which makes these methods applicable to differentUAV types in addition to underwater vehicles. Moreover, differentimplementation methods for these strategies with quadrotor-type UAVs are alsoinvestigated considering UAV dynamics in the control design. Practicalexperiments and simulations were carried out to analyze the performance of thedeveloped methods. The second part of this report addresses safe navigation formulti-UAV systems. Distributed motion coordination methods of multi-UAV systemsfor flocking and 3D area coverage are developed. These methods offer goodcomputational cost for large-scale systems. Simulations were performed toverify the performance of these methods considering systems with differentsizes.</p>  </details></details><details>  <summary>78. <b>标题：Temporal-Spatial Feature Extraction Based on Convolutional Neural  Networks for Travel Time Prediction</b></summary>  <p><b>编号</b>：[371]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00149</p>  <p><b>作者</b>：Chi-Hua Chen</p>  <p><b>备注</b>：22 pages, 15 figures, and 3 tables</p>  <p><b>关键词</b>：travel time prediction method based, mean absolute percentage error, traffic information prediction methods, travel time prediction, traffic information prediction</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In recent years, some traffic information prediction methods have beenproposed to provide the precise information of travel time, vehicle speed, andtraffic flow for highways. However, big errors may be obtained by these methodsfor urban roads or the alternative roads of highways. Therefore, this studyproposes a travel time prediction method based on convolutional neural networksto extract important factors for the improvement of traffic informationprediction. In practical experimental environments, the travel time records ofNo. 5 Highway and the alternative roads of its were collected and used toevaluate the proposed method. The results showed that the mean absolutepercentage error of the proposed method was about 5.69%. Therefore, theproposed method based on deep learning techniques can improve the accuracy oftravel time prediction.</p>  </details></details><details>  <summary>79. <b>标题：Context Meta-Reinforcement Learning via Neuromodulation</b></summary>  <p><b>编号</b>：[375]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00134</p>  <p><b>作者</b>：Eseoghene Ben-Iwhiwhu,  Jeffery Dick,  Nicholas A. Ketz,  Praveen K. Pilly,  Andrea Soltoggio</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：fast adaptation beyond simple benchmark problems, neuromodulation produces significantly better result, evaluated across multiple discrete, produce efficient dynamic representations, obtaining rich dynamic representations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Meta-reinforcement learning (meta-RL) algorithms enable agents to adaptquickly to tasks from few samples in dynamic environments. Such a feat isachieved through dynamic representations in an agent's policy network (obtainedvia reasoning about task context, model parameter updates, or both). However,obtaining rich dynamic representations for fast adaptation beyond simplebenchmark problems is challenging due to the burden placed on the policynetwork to accommodate different policies. This paper addresses the challengeby introducing neuromodulation as a modular component to augment a standardpolicy network that regulates neuronal activities in order to produce efficientdynamic representations for task adaptation. The proposed extension to thepolicy network is evaluated across multiple discrete and continuous controlenvironments of increasing complexity. To prove the generality and benefits ofthe extension in meta-RL, the neuromodulated network was applied to twostate-of-the-art meta-RL algorithms (CAVIA and PEARL). The result demonstratesthat meta-RL augmented with neuromodulation produces significantly betterresult and richer dynamic representations in comparison to the baselines.</p>  </details></details><details>  <summary>80. <b>标题：Three approaches to facilitate DNN generalization to objects in  out-of-distribution orientations and illuminations: late-stopping, tuning  batch normalization and invariance loss</b></summary>  <p><b>编号</b>：[376]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00131</p>  <p><b>作者</b>：Akira Sakai,  Taro Sunagawa,  Spandan Madan,  Kanata Suzuki,  Takashi Katoh,  Hiromichi Kobashi,  Hanspeter Pfister,  Pawan Sinha,  Xavier Boix,  Tomotake Sasaki</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：enable ood accuracy gains -- individual neurons, often biased towards objects, investigate three different approaches, three approaches focus, approaches substantially improves</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The training data distribution is often biased towards objects in certainorientations and illumination conditions. While humans have a remarkablecapability of recognizing objects in out-of-distribution (OoD) orientations andilluminations, Deep Neural Networks (DNNs) severely suffer in this case, evenwhen large amounts of training examples are available. In this paper, weinvestigate three different approaches to improve DNNs in recognizing objectsin OoD orientations and illuminations. Namely, these are (i) training muchlonger after convergence of the in-distribution (InD) validation accuracy,i.e., late-stopping, (ii) tuning the momentum parameter of the batchnormalization layers, and (iii) enforcing invariance of the neural activity inan intermediate layer to orientation and illumination conditions. Each of theseapproaches substantially improves the DNN's OoD accuracy (more than 20% in somecases). We report results in four datasets: two datasets are modified from theMNIST and iLab datasets, and the other two are novel (one of 3D rendered carsand another of objects taken from various controlled orientations andillumination conditions). These datasets allow to study the effects ofdifferent amounts of bias and are challenging as DNNs perform poorly in OoDconditions. Finally, we demonstrate that even though the three approaches focuson different aspects of DNNs, they all tend to lead to the same underlyingneural mechanism to enable OoD accuracy gains -- individual neurons in theintermediate layers become more selective to a category and also invariant toOoD orientations and illuminations.</p>  </details></details><details>  <summary>81. <b>标题：Visual Explanations for Convolutional Neural Networks via Latent  Traversal of Generative Adversarial Networks</b></summary>  <p><b>编号</b>：[384]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00116</p>  <p><b>作者</b>：Amil Dravid,  Aggelos K. Katsaggelos</p>  <p><b>备注</b>：2 pages, 2 figures, to appear as extended abstract at AAAI-22</p>  <p><b>关键词</b>：gan framework disentangles lung structure, weighted class activation mapping, utilizing generative adversarial networks, specifically deep neural networks, convolutional neural network</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Lack of explainability in artificial intelligence, specifically deep neuralnetworks, remains a bottleneck for implementing models in practice. Populartechniques such as Gradient-weighted Class Activation Mapping (Grad-CAM)provide a coarse map of salient features in an image, which rarely tells thewhole story of what a convolutional neural network (CNN) learned. UsingCOVID-19 chest X-rays, we present a method for interpreting what a CNN haslearned by utilizing Generative Adversarial Networks (GANs). Our GAN frameworkdisentangles lung structure from COVID-19 features. Using this GAN, we canvisualize the transition of a pair of COVID negative lungs in a chestradiograph to a COVID positive pair by interpolating in the latent space of theGAN, which provides fine-grained visualization of how the CNN responds tovarying features within the lungs.</p>  </details></details><details>  <summary>82. <b>标题：FC2T2: The Fast Continuous Convolutional Taylor Transform with  Applications in Vision and Graphics</b></summary>  <p><b>编号</b>：[388]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00110</p>  <p><b>作者</b>：Henning Lange,  J. Nathan Kutz</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：fast continuous convolutional taylor transform, low dimensional convolutional operators, require repeated function evaluations, unlike regular neural networks, modern machine learning perspective</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Series expansions have been a cornerstone of applied mathematics andengineering for centuries. In this paper, we revisit the Taylor seriesexpansion from a modern Machine Learning perspective. Specifically, weintroduce the Fast Continuous Convolutional Taylor Transform (FC2T2), a variantof the Fast Multipole Method (FMM), that allows for the efficient approximationof low dimensional convolutional operators in continuous space. We build uponthe FMM which is an approximate algorithm that reduces the computationalcomplexity of N-body problems from O(NM) to O(N+M) and finds application ine.g. particle simulations. As an intermediary step, the FMM produces a seriesexpansion for every cell on a grid and we introduce algorithms that actdirectly upon this representation. These algorithms analytically butapproximately compute the quantities required for the forward and backward passof the backpropagation algorithm and can therefore be employed as (implicit)layers in Neural Networks. Specifically, we introduce a root-implicit layerthat outputs surface normals and object distances as well as anintegral-implicit layer that outputs a rendering of a radiance field given a 3Dpose. In the context of Machine Learning, $N$ and $M$ can be understood as thenumber of model parameters and model evaluations respectively which entailsthat, for applications that require repeated function evaluations which areprevalent in Computer Vision and Graphics, unlike regular Neural Networks, thetechniques introduce in this paper scale gracefully with parameters. For someapplications, this results in a 200x reduction in FLOPs compared tostate-of-the-art approaches at a reasonable or non-existent loss in accuracy.</p>  </details></details><details>  <summary>83. <b>标题：The Golden Rule as a Heuristic to Measure the Fairness of Texts Using  Machine Learning</b></summary>  <p><b>编号</b>：[389]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00107</p>  <p><b>作者</b>：A. Izzidien,  J. Watson,  B. Loe,  P. Romero,  S. Fitz,  D. Stillwell</p>  <p><b>备注</b>：32 pages, 4 figures</p>  <p><b>关键词</b>：moral philosophy exists, individuals would typically, implementing two approaches, find f1 scores, axiom throughout history</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>To treat others as one would wish to be treated is a common formulation ofthe Golden Rule (GR). Yet, despite its prevalence as an axiom throughouthistory, no digitisation of the moral philosophy exists. In this paper weconsider how to digitise it so that it may be used to measure sentences suchas: the boy harmed the girl, and categorise them as fair or unfair. A reviewand reply to criticisms of the GR is made. We share the code for thedigitisation of the GR, and test it with a list of sentences. Implementing twoapproaches, one using the USE, and a second using ALBERT. We find F1 scores of78.0, 85.0, respectively. A suggestion of how the technology may be implementedto avoid unfair biases in word embeddings is made - given that individualswould typically not wish to be on the receiving end of an unfair act, such asracism, irrespective of whether the corpus being used deems such discriminationas praiseworthy.</p>  </details></details><details>  <summary>84. <b>标题：Measuring a Texts Fairness Dimensions Using Machine Learning Based on  Social Psychological Factors</b></summary>  <p><b>编号</b>：[398]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00086</p>  <p><b>作者</b>：A. Izzidien,  J. Watson,  B. Loe,  P. Romero,  S. Fitz,  D. Stillwell</p>  <p><b>备注</b>：38 pages, 9 figures</p>  <p><b>关键词</b>：dimensioned sentence level fairness perceptions vector, social bias within word embeddings, said fairness approximation vector produces, utilise social psychology literature, social act remains wanting</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Fairness is a principal social value that can be observed in civilisationsaround the world. A manifestations of this is in social agreements, oftendescribed in texts, such as contracts. Yet, despite the prevalence of such, afairness metric for texts describing a social act remains wanting. To addressthis, we take a step back to consider the problem based on first principals.Instead of using rules or templates, we utilise social psychology literature todetermine the principal factors that humans use when making a fairnessassessment. We then attempt to digitise these using word embeddings into amulti-dimensioned sentence level fairness perceptions vector to serve as anapproximation for these fairness perceptions. The method leverages a pro-socialbias within word embeddings, for which we obtain an F1= 81.0. A secondapproach, using PCA and ML based on the said fairness approximation vectorproduces an F1 score of 86.2. We details improvements that can be made in themethodology to incorporate the projection of sentence embedding on to asubspace representation of fairness.</p>  </details></details><details>  <summary>85. <b>标题：Generalized Proximal Policy Optimization with Sample Reuse</b></summary>  <p><b>编号</b>：[406]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00072</p>  <p><b>作者</b>：James Queeney,  Ioannis Ch. Paschalidis,  Christos G. Cassandras</p>  <p><b>备注</b>：To appear in 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：policy methods typically generate reliable policy improvement throughout training, call generalized proximal policy optimization, develop policy improvement guarantees, driven reinforcement learning methods, world decision making tasks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In real-world decision making tasks, it is critical for data-drivenreinforcement learning methods to be both stable and sample efficient.On-policy methods typically generate reliable policy improvement throughouttraining, while off-policy methods make more efficient use of data throughsample reuse. In this work, we combine the theoretically supported stabilitybenefits of on-policy algorithms with the sample efficiency of off-policyalgorithms. We develop policy improvement guarantees that are suitable for theoff-policy setting, and connect these bounds to the clipping mechanism used inProximal Policy Optimization. This motivates an off-policy version of thepopular algorithm that we call Generalized Proximal Policy Optimization withSample Reuse. We demonstrate both theoretically and empirically that ouralgorithm delivers improved performance by effectively balancing the competinggoals of stability and sample efficiency.</p>  </details></details><details>  <summary>86. <b>标题：ReSkin: versatile, replaceable, lasting tactile skins</b></summary>  <p><b>编号</b>：[407]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00071</p>  <p><b>作者</b>：Raunaq Bhirangi,  Tess Hellebrekers,  Carmel Majidi,  Abhinav Gupta</p>  <p><b>备注</b>：CoRL 2021. Project Website: this https URL . First two authors contributed equally</p>  <p><b>关键词</b>：supervised learning algorithm enables finer performance enhancement, machine learning allows us, inexpensive tactile sensation modules, inexpensive data collection procedures, learn sensor response models</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Soft sensors have continued growing interest in robotics, due to theirability to enable both passive conformal contact from the material propertiesand active contact data from the sensor properties. However, the sameproperties of conformal contact result in faster deterioration of soft sensorsand larger variations in their response characteristics over time and acrosssamples, inhibiting their ability to be long-lasting and replaceable. ReSkin isa tactile soft sensor that leverages machine learning and magnetic sensing tooffer a low-cost, diverse and compact solution for long-term use. Magneticsensing separates the electronic circuitry from the passive interface, makingit easier to replace interfaces as they wear out while allowing for a widevariety of form factors. Machine learning allows us to learn sensor responsemodels that are robust to variations across fabrication and time, and ourself-supervised learning algorithm enables finer performance enhancement withsmall, inexpensive data collection procedures. We believe that ReSkin opens thedoor to more versatile, scalable and inexpensive tactile sensation modules thanexisting alternatives.</p>  </details></details><details>  <summary>87. <b>标题：Symbolic Regression via Neural-Guided Genetic Programming Population  Seeding</b></summary>  <p><b>编号</b>：[415]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00053</p>  <p><b>作者</b>：T. Nathan Mundhenk,  Mikel Landajuela,  Ruben Glatt,  Claudio P. Santiago,  Daniel M. Faissol,  Brenden K. Petersen</p>  <p><b>备注</b>：Accepted at the 35th Conference on Neural Information Processing Systems (NeurIPS 2021)</p>  <p><b>关键词</b>：running many genetic programming generations without interdependence, discrete optimization problem generally believed, random restart genetic programming component, gradually learning better starting populations, 22 symbolic regression benchmark problems</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Symbolic regression is the process of identifying mathematical expressionsthat fit observed output from a black-box process. It is a discreteoptimization problem generally believed to be NP-hard. Prior approaches tosolving the problem include neural-guided search (e.g. using reinforcementlearning) and genetic programming. In this work, we introduce a hybridneural-guided/genetic programming approach to symbolic regression and othercombinatorial optimization problems. We propose a neural-guided component usedto seed the starting population of a random restart genetic programmingcomponent, gradually learning better starting populations. On a number ofcommon benchmark tasks to recover underlying expressions from a dataset, ourmethod recovers 65% more expressions than a recently published top-performingmodel using the same experimental setup. We demonstrate that running manygenetic programming generations without interdependence on the neural-guidedcomponent performs better for symbolic regression than alternative formulationswhere the two are more strongly coupled. Finally, we introduce a new set of 22symbolic regression benchmark problems with increased difficulty over existingbenchmarks. Source code is provided atthis http URL.</p>  </details></details><details>  <summary>88. <b>标题：Diagnosing Web Data of ICTs to Provide Focused Assistance in  Agricultural Adoptions</b></summary>  <p><b>编号</b>：[416]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00052</p>  <p><b>作者</b>：Ashwin Singh,  Mallika Subramanian,  Anmol Agarwal,  Pratyush Priyadarshi,  Shrey Gupta,  Kiran Garimella,  Sanjeev Kumar,  Ritesh Kumar,  Lokesh Garg,  Erica Arya,  Ponnurangam Kumaraguru</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：3 million farmers across three continents, digital green disseminates instructional agricultural videos, technology ownership across rural areas, demographic features across five states, smallholder farmers via human mediators</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The past decade has witnessed a rapid increase in technology ownership acrossrural areas of India, signifying the potential for ICT initiatives to empowerrural households. In our work, we focus on the web infrastructure of one suchICT - Digital Green that started in 2008. Following a participatory approachfor content production, Digital Green disseminates instructional agriculturalvideos to smallholder farmers via human mediators to improve the adoption offarming practices. Their web-based data tracker, CoCo, captures data related tothese processes, storing the attendance and adoption logs of over 2.3 millionfarmers across three continents and twelve countries. Using this data, we modelthe components of the Digital Green ecosystem involving the pastattendance-adoption behaviours of farmers, the content of the videos screenedto them and their demographic features across five states in India. We usestatistical tests to identify different factors which distinguish farmers withhigher adoption rates to understand why they adopt more than others. Ourresearch finds that farmers with higher adoption rates adopt videos of shorterduration and belong to smaller villages. The co-attendance and co-adoptionnetworks of farmers indicate that they greatly benefit from past adopters of avideo from their village and group when it comes to adopting practices from thesame video. Following our analysis, we model the adoption of practices from avideo as a prediction problem to identify and assist farmers who might facechallenges in adoption in each of the five states. We experiment with differentmodel architectures and achieve macro-f1 scores ranging from 79% to 89% using aRandom Forest classifier. Finally, we measure the importance of differentfeatures using SHAP values and provide implications for improving the adoptionrates of nearly a million farmers across five states in India.</p>  </details></details><details>  <summary>89. <b>标题：Skyformer: Remodel Self-Attention with Gaussian Kernel and Nyström  Method</b></summary>  <p><b>编号</b>：[420]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00035</p>  <p><b>作者</b>：Yifan Chen,  Qi Zeng,  Heng Ji,  Yun Yang</p>  <p><b>备注</b>：To appear in NeurIPS 2021</p>  <p><b>关键词</b>：long range arena benchmark show, computational cost without sacrificing, requiring fewer computation resources, although kernel machines suffer, high computational cost</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Transformers are expensive to train due to the quadratic time and spacecomplexity in the self-attention mechanism. On the other hand, although kernelmachines suffer from the same computation bottleneck in pairwise dot products,several approximation schemes have been successfully incorporated toconsiderably reduce their computational cost without sacrificing too muchaccuracy. In this work, we leverage the computation methods for kernel machinesto alleviate the high computational cost and introduce Skyformer, whichreplaces the softmax structure with a Gaussian kernel to stabilize the modeltraining and adapts the Nyström method to a non-positive semidefinite matrixto accelerate the computation. We further conduct theoretical analysis byshowing that the matrix approximation error of our proposed method is small inthe spectral norm. Experiments on Long Range Arena benchmark show that theproposed method is sufficient in getting comparable or even better performancethan the full self-attention while requiring fewer computation resources.</p>  </details></details><details>  <summary>90. <b>标题：Reinforced Workload Distribution Fairness</b></summary>  <p><b>编号</b>：[422]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00008</p>  <p><b>作者</b>：Zhiyuan Yao,  Zihan Ding,  Thomas Heide Clausen</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：distributes workloads across multiple servers, distributed asynchronous reinforcement learning mechanism, active load balancer state monitoring, preliminary results show promise, including reward function design</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Network load balancers are central components in data centers, thatdistributes workloads across multiple servers and thereby contribute tooffering scalable services. However, when load balancers operate in dynamicenvironments with limited monitoring of application server loads, they rely onheuristic algorithms that require manual configurations for fairness andperformance. To alleviate that, this paper proposes a distributed asynchronousreinforcement learning mechanism to-with no active load balancer statemonitoring and limited network observations-improve the fairness of theworkload distribution achieved by a load balancer. The performance of proposedmechanism is evaluated and compared with stateof-the-art load balancingalgorithms in a simulator, under configurations with progressively increasingcomplexities. Preliminary results show promise in RLbased load balancingalgorithms, and identify additional challenges and future research directions,including reward function design and model scalability.</p>  </details></details><details>  <summary>91. <b>标题：Adaptive Hierarchical Similarity Metric Learning with Noisy Labels</b></summary>  <p><b>编号</b>：[424]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00006</p>  <p><b>作者</b>：Jiexi Yan,  Lei Luo,  Cheng Deng,  Heng Huang</p>  <p><b>备注</b>：11 pages, 5 figures</p>  <p><b>关键词</b>：noisy labels often cause severe performance degradation, effectively excavate richer similarity information beyond binary, adaptive hierarchical similarity metric learning method, existing deep metric learning methods, current deep metric learning approaches</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Deep Metric Learning (DML) plays a critical role in various machine learningtasks. However, most existing deep metric learning methods with binarysimilarity are sensitive to noisy labels, which are widely present inreal-world data. Since these noisy labels often cause severe performancedegradation, it is crucial to enhance the robustness and generalization abilityof DML. In this paper, we propose an Adaptive Hierarchical Similarity MetricLearning method. It considers two noise-insensitive information, \textit{i.e.},class-wise divergence and sample-wise consistency. Specifically, class-wisedivergence can effectively excavate richer similarity information beyond binaryin modeling by taking advantage of Hyperbolic metric learning, whilesample-wise consistency can further improve the generalization ability of themodel using contrastive augmentation. More importantly, we design an adaptivestrategy to integrate this information in a unified view. It is noteworthy thatthe new method can be extended to any pair-based metric loss. Extensiveexperimental results on benchmark datasets demonstrate that our method achievesstate-of-the-art performance compared with current deep metric learningapproaches.</p>  </details></details><details>  <summary>92. <b>标题：Concept and Attribute Reduction Based on Rectangle Theory of Formal  Concept</b></summary>  <p><b>编号</b>：[425]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00005</p>  <p><b>作者</b>：Jianqin Zhou,  Sichun Yang,  Xifeng Wang,  Wanquan Liu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：concept reduction preserving binary relations, concept reduction preserving binary relations, allows multiple context cells, new algorithm could store, new judgment results</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Based on rectangle theory of formal concept and set covering theory, theconcept reduction preserving binary relations is investigated in this paper. Itis known that there are three types of formal concepts: core concepts, relativenecessary concepts and unnecessary concepts. First, we present the new judgmentresults for relative necessary concepts and unnecessary concepts. Second, wederive the bounds for both the maximum number of relative necessary conceptsand the maximum number of unnecessary concepts and it is a difficult problem aseither in concept reduction preserving binary relations or attribute reductionof decision formal contexts, the computation of formal contexts from formalconcepts is a challenging problem. Third, based on rectangle theory of formalconcept, a fast algorithm for reducing attributes while preserving theextensions for a set of formal concepts is proposed using the extensionbit-array technique, which allows multiple context cells to be processed by asingle 32-bit or 64-bit operator. Technically, the new algorithm could storeboth formal context and extent of a concept as bit-arrays, and we can usebit-operations to process set operations "or" as well as "and". One more meritis that the new algorithm does not need to consider other concepts in theconcept lattice, thus the algorithm is explicit to understand and fast.Experiments demonstrate that the new algorithm is effective in the computationof attribute reductions.</p>  </details></details><details>  <summary>93. <b>标题：Granule Description based on Compound Concepts</b></summary>  <p><b>编号</b>：[426]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00004</p>  <p><b>作者</b>：Jianqin Zhou,  Sichun Yang,  Xifeng Wang,  Wanquan Liu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：logical relationship among various concepts, propose two new types, unified equivalent conditions, approaching description methods, approaching description methods</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Concise granule descriptions for describable granules and approachingdescription methods for indescribable granules are challenging and importantissues in granular computing. The concept with only common attributes has beenfrequently studied. To investigate the granules with some special needs, wepropose two new types of compound concepts in this paper: bipolar concept andcommon-and-necessary concept. Based on the definitions of concept-formingoperations, the logical formulas are derived for each of the following types ofconcepts: formal concept, three-way concept, object oriented concept, bipolarconcept and common-and-necessary concept. Furthermore, by utilizing the logicalrelationship among various concepts, we have derived concise and unifiedequivalent conditions for describable granules and approaching descriptionmethods for indescribable granules for all five kinds of concepts.</p>  </details></details><details>  <summary>94. <b>标题：A New Algorithm based on Extent Bit-array for Computing Formal Concepts</b></summary>  <p><b>编号</b>：[427]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00003</p>  <p><b>作者</b>：Jianqin Zhou,  Sichun Yang,  Xifeng Wang,  Wanquan Liu</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：compute formal concepts quickly, experimental results demonstrate, data analysis technique, formal concept analysis, computing formal concept</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The emergence of Formal Concept Analysis (FCA) as a data analysis techniquehas increased the need for developing algorithms which can compute formalconcepts quickly. The current efficient algorithms for FCA are variants of theClose-By-One (CbO) algorithm, such as In-Close2, In-Close3 and In-Close4, whichare all based on horizontal storage of contexts. In this paper, based onalgorithm In-Close4, a new algorithm based on the vertical storage of contexts,called In-Close5, is proposed, which can significantly reduce both the timecomplexity and space complexity of algorithm In-Close4. Technically, the newalgorithm stores both context and extent of a concept as a vertical bit-array,while within In-Close4 algorithm the context is stored only as a horizontalbit-array, which is very slow in finding the intersection of two extent sets.Experimental results demonstrate that the proposed algorithm is much moreeffective than In-Close4 algorithm, and it also has a broader scope ofapplicability in computing formal concept in which one can solve the problemsthat cannot be solved by the In-Close4 algorithm.</p>  </details></details><details>  <summary>95. <b>标题：NOTMAD: Estimating Bayesian Networks with Sample-Specific Structures and  Parameters</b></summary>  <p><b>编号</b>：[429]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.01104</p>  <p><b>作者</b>：Ben Lengerich,  Caleb Ellington,  Bryon Aragam,  Eric P. Xing,  Manolis Kellis</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：graph generator functions )., specific gene expression networks, mix archetypal networks according, smooth regularization loss, limiting statistical power</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Context-specific Bayesian networks (i.e. directed acyclic graphs, DAGs)identify context-dependent relationships between variables, but thenon-convexity induced by the acyclicity requirement makes it difficult to shareinformation between context-specific estimators (e.g. with graph generatorfunctions). For this reason, existing methods for inferring context-specificBayesian networks have favored breaking datasets into subsamples, limitingstatistical power and resolution, and preventing the use of multidimensionaland latent contexts. To overcome this challenge, we propose NOTEARS-optimizedMixtures of Archetypal DAGs (NOTMAD). NOTMAD models context-specific Bayesiannetworks as the output of a function which learns to mix archetypal networksaccording to sample context. The archetypal networks are estimated jointly withthe context-specific networks and do not require any prior knowledge. We encodethe acyclicity constraint as a smooth regularization loss which isback-propagated to the mixing function; in this way, NOTMAD shares informationbetween context-specific acyclic graphs, enabling the estimation of Bayesiannetwork structures and parameters at even single-sample resolution. Wedemonstrate the utility of NOTMAD and sample-specific network inference throughanalysis and experiments, including patient-specific gene expression networkswhich correspond to morphological variation in cancer.</p>  </details></details><details>  <summary>96. <b>标题：Modelling the transition to a low-carbon energy supply</b></summary>  <p><b>编号</b>：[438]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00987</p>  <p><b>作者</b>：Alexander Kell</p>  <p><b>备注</b>：PhD thesis</p>  <p><b>关键词</b>：reducing carbon emissions could help prevent, runaway emissions could lead, whole electricity market reacts, different factors using state, reliable energy supply</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>A transition to a low-carbon electricity supply is crucial to limit theimpacts of climate change. Reducing carbon emissions could help prevent theworld from reaching a tipping point, where runaway emissions are likely.Runaway emissions could lead to extremes in weather conditions around the world-- especially in problematic regions unable to cope with these conditions.However, the movement to a low-carbon energy supply can not happeninstantaneously due to the existing fossil-fuel infrastructure and therequirement to maintain a reliable energy supply. Therefore, a low-carbontransition is required, however, the decisions various stakeholders should makeover the coming decades to reduce these carbon emissions are not obvious. Thisis due to many long-term uncertainties, such as electricity, fuel andgeneration costs, human behaviour and the size of electricity demand. A wellchoreographed low-carbon transition is, therefore, required between all of theheterogenous actors in the system, as opposed to changing the behaviour of asingle, centralised actor. The objective of this thesis is to create a novel,open-source agent-based model to better understand the manner in which thewhole electricity market reacts to different factors using state-of-the-artmachine learning and artificial intelligence methods. In contrast to otherworks, this thesis looks at both the long-term and short-term impact thatdifferent behaviours have on the electricity market by using thesestate-of-the-art methods.</p>  </details></details><details>  <summary>97. <b>标题：Free Probability, Newton lilypads and Jacobians of neural networks</b></summary>  <p><b>编号</b>：[445]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00841</p>  <p><b>作者</b>：Reda Chhaibi,  Tariq Daouda,  Ezechiel Kahn</p>  <p><b>备注</b>：22 pages, 4 figures</p>  <p><b>关键词</b>：newton algorithm finds contiguous lilypad, modeled using free multiplicative convolutions, pennington et al .,, free probability theory, free probability metrics</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Gradient descent during the learning process of a neural network can besubject to many instabilities. The spectral density of the Jacobian is a keycomponent for analyzing robustness. Following the works of Pennington et al.,such Jacobians are modeled using free multiplicative convolutions from FreeProbability Theory. We present a reliable and very fast method for computingthe associated spectral densities. This method has a controlled and provenconvergence.Our technique is based on an adaptative Newton-Raphson scheme, by finding andchaining basins of attraction: the Newton algorithm finds contiguouslilypad-like basins and steps from one to the next, heading towards theobjective.We demonstrate the applicability of our method by using it to assess how thelearning process is affected by network depth, layer widths and initializationchoices: empirically, final test losses are very correlated to our FreeProbability metrics.</p>  </details></details><details>  <summary>98. <b>标题：Simulating Realistic MRI variations to Improve Deep Learning model and  visual explanations using GradCAM</b></summary>  <p><b>编号</b>：[446]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00837</p>  <p><b>作者</b>：Muhammad Ilyas Patel,  Shrey Singla,  Razeem Ahmad Ali Mattathodi,  Sumit Sharma,  Deepam Gautam,  Srinivasa Rao Kundeti</p>  <p><b>备注</b>：8 pages, 9 figures, IEEE-CCEM 2021 conference</p>  <p><b>关键词</b>：solving brain mri volumetric landmark detection problem, three respective views -- sagittal, proposed method shows favorable results, generate synthetic 3d volumetric data, weighted class activation mapping</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In the medical field, landmark detection in MRI plays an important role inreducing medical technician efforts in tasks like scan planning, imageregistration, etc. First, 88 landmarks spread across the brain anatomy in thethree respective views -- sagittal, coronal, and axial are manually annotated,later guidelines from the expert clinical technicians are takensub-anatomy-wise, for better localization of the existing landmarks, in orderto identify and locate the important atlas landmarks even in oblique scans. Toovercome limited data availability, we implement realistic data augmentation togenerate synthetic 3D volumetric data. We use a modified HighRes3DNet model forsolving brain MRI volumetric landmark detection problem. In order to visuallyexplain our trained model on unseen data, and discern a stronger model from aweaker model, we implement Gradient-weighted Class Activation Mapping(Grad-CAM) which produces a coarse localization map highlighting the regionsthe model is focusing. Our experiments show that the proposed method showsfavorable results, and the overall pipeline can be extended to a variablenumber of landmarks and other anatomies.</p>  </details></details><details>  <summary>99. <b>标题：End-to-End Learning of Deep Kernel Acquisition Functions for Bayesian  Optimization</b></summary>  <p><b>编号</b>：[457]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00639</p>  <p><b>作者</b>：Tomoharu Iwata</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：experiments using three text document datasets, proposed method achieves better bo performance, existing methods train neural networks, learn flexible surrogate functions, shared across different tasks</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>For Bayesian optimization (BO) on high-dimensional data with complexstructure, neural network-based kernels for Gaussian processes (GPs) have beenused to learn flexible surrogate functions by the high representation power ofdeep learning. However, existing methods train neural networks by maximizingthe marginal likelihood, which do not directly improve the BO performance. Inthis paper, we propose a meta-learning method for BO with neural network-basedkernels that minimizes the expected gap between the true optimum value and thebest value found by BO. We model a policy, which takes the current evaluateddata points as input and outputs the next data point to be evaluated, by aneural network, where neural network-based kernels, GPs, and mutualinformation-based acquisition functions are used as its layers. With our model,the neural network-based kernel is trained to be appropriate for theacquisition function by backpropagating the gap through the acquisitionfunction and GP. Our model is trained by a reinforcement learning frameworkfrom multiple tasks. Since the neural network is shared across different tasks,we can gather knowledge on BO from multiple training tasks, and use theknowledge for unseen test tasks. In experiments using three text documentdatasets, we demonstrate that the proposed method achieves better BOperformance than the existing methods.</p>  </details></details><details>  <summary>100. <b>标题：TorchXRayVision: A library of chest X-ray datasets and models</b></summary>  <p><b>编号</b>：[459]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00595</p>  <p><b>作者</b>：Joseph Paul Cohen,  Joseph D. Viviano,  Paul Bertin,  Paul Morrison,  Parsa Torabian,  Matteo Guarrera,  Matthew P Lungren,  Akshay Chaudhari,  Rupert Brooks,  Mohammad Hashir,  Hadrien Bertrand</p>  <p><b>备注</b>：Library source code: this https URL</p>  <p><b>关键词</b>：open source software library, publicly available chest x, representation learning models, deep learning models, different data combinations</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>TorchXRayVision is an open source software library for working with chestX-ray datasets and deep learning models. It provides a common interface andcommon pre-processing chain for a wide set of publicly available chest X-raydatasets. In addition, a number of classification and representation learningmodels with different architectures, trained on different data combinations,are available through the library to serve as baselines or feature extractors.</p>  </details></details><details>  <summary>101. <b>标题：Focal Attention Networks: optimising attention for biomedical image  segmentation</b></summary>  <p><b>编号</b>：[463]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00534</p>  <p><b>作者</b>：Michael Yeung,  Leonardo Rundo,  Evis Sala,  Carola-Bibiane Schönlieb,  Guang Yang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：attention mechanisms enables flexible integration, validated biomedical imaging datasets, focal distance penalty term, unified focal loss framework, convolutional neural network architectures</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>In recent years, there has been increasing interest to incorporate attentioninto deep learning architectures for biomedical image segmentation. The modulardesign of attention mechanisms enables flexible integration into convolutionalneural network architectures, such as the U-Net. Whether attention isappropriate to use, what type of attention to use, and where in the network toincorporate attention modules, are all important considerations that arecurrently overlooked. In this paper, we investigate the role of the Focalparameter in modulating attention, revealing a link between attention in lossfunctions and networks. By incorporating a Focal distance penalty term, weextend the Unified Focal loss framework to include boundary-based losses.Furthermore, we develop a simple and interpretable, dataset and model-specificheuristic to integrate the Focal parameter into the Squeeze-and-Excitationblock and Attention Gate, achieving optimal performance with fewer number ofattention modules on three well-validated biomedical imaging datasets,suggesting judicious use of attention modules results in better performance andefficiency.</p>  </details></details><details>  <summary>102. <b>标题：Incorporating Boundary Uncertainty into loss functions for biomedical  image segmentation</b></summary>  <p><b>编号</b>：[464]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00533</p>  <p><b>作者</b>：Michael Yeung,  Guang Yang,  Evis Sala,  Carola-Bibiane Schönlieb,  Leonardo Rundo</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：achieving consistently improved performance across three well, validated biomedical imaging datasets compared, automated image segmentation tasks, enable robust model training, neither approach accurately reflects</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Manual segmentation is used as the gold-standard for evaluating neuralnetworks on automated image segmentation tasks. Due to considerableheterogeneity in shapes, colours and textures, demarcating object boundaries isparticularly difficult in biomedical images, resulting in significant inter andintra-rater variability. Approaches, such as soft labelling and distancepenalty term, apply a global transformation to the ground truth, redefining theloss function with respect to uncertainty. However, global operations arecomputationally expensive, and neither approach accurately reflects theuncertainty underlying manual annotation. In this paper, we propose theBoundary Uncertainty, which uses morphological operations to restrict softlabelling to object boundaries, providing an appropriate representation ofuncertainty in ground truth labels, and may be adapted to enable robust modeltraining where systematic manual segmentation errors are present. Weincorporate Boundary Uncertainty with the Dice loss, achieving consistentlyimproved performance across three well-validated biomedical imaging datasetscompared to soft labelling and distance-weighted penalty. Boundary Uncertaintynot only more accurately reflects the segmentation process, but it is alsoefficient, robust to segmentation errors and exhibits better generalisation.</p>  </details></details><details>  <summary>103. <b>标题：Calibrating the Dice loss to handle neural network overconfidence for  biomedical image segmentation</b></summary>  <p><b>编号</b>：[465]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00528</p>  <p><b>作者</b>：Michael Yeung,  Leonardo Rundo,  Yang Nan,  Evis Sala,  Carola-Bibiane Schönlieb,  Guang Yang</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：dsc ++ loss achieves significantly improved calibration, conventional dsc loss across five well, deep learning based biomedical image segmentation, training deep learning segmentation models, well calibrated outputs enable tailoring</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The Dice similarity coefficient (DSC) is both a widely used metric and lossfunction for biomedical image segmentation due to its robustness to classimbalance. However, it is well known that the DSC loss is poorly calibrated,resulting in overconfident predictions that cannot be usefully interpreted inbiomedical and clinical practice. Performance is often the only metric used toevaluate segmentations produced by deep neural networks, and calibration isoften neglected. However, calibration is important for translation intobiomedical and clinical practice, providing crucial contextual information tomodel predictions for interpretation by scientists and clinicians. In thisstudy, we identify poor calibration as an emerging challenge of deep learningbased biomedical image segmentation. We provide a simple yet effectiveextension of the DSC loss, named the DSC++ loss, that selectively modulates thepenalty associated with overconfident, incorrect predictions. As a standaloneloss function, the DSC++ loss achieves significantly improved calibration overthe conventional DSC loss across five well-validated open-source biomedicalimaging datasets. Similarly, we observe significantly improved when integratingthe DSC++ loss into four DSC-based loss functions. Finally, we use softmaxthresholding to illustrate that well calibrated outputs enable tailoring ofprecision-recall bias, an important post-processing technique to adapt themodel predictions to suit the biomedical or clinical task. The DSC++ lossovercomes the major limitation of the DSC, providing a suitable loss functionfor training deep learning segmentation models for use in biomedical andclinical practice.</p>  </details></details><details>  <summary>104. <b>标题：A robust single-pixel particle image velocimetry based on fully  convolutional networks with cross-correlation embedded</b></summary>  <p><b>编号</b>：[471]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00395</p>  <p><b>作者</b>：Qi Gao,  Hongtao Lin,  Han Tu,  Haoran Zhu,  Runjie Wei,  Guoping Zhang,  Xueming Shao</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：proposed model could therefore provide competitive, initial velocity field calculated using cross, new velocity field estimation paradigm, synthetic data sets including ground, real experimental piv data sets</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Particle image velocimetry (PIV) is essential in experimental fluid dynamics.In the current work, we propose a new velocity field estimation paradigm, whichachieves a synergetic combination of the deep learning method and thetraditional cross-correlation method. Specifically, the deep learning method isused to optimize and correct a coarse velocity guess to achieve asuper-resolution calculation. And the cross-correlation method provides theinitial velocity field based on a coarse correlation with a large interrogationwindow. As a reference, the coarse velocity guess helps with improving therobustness of the proposed algorithm. This fully convolutional network withembedded cross-correlation is named as CC-FCN. CC-FCN has two types of inputlayers, one is for the particle images, and the other is for the initialvelocity field calculated using cross-correlation with a coarse resolution.Firstly, two pyramidal modules extract features of particle images and initialvelocity field respectively. Then the fusion module appropriately fuses thesefeatures. Finally, CC-FCN achieves the super-resolution calculation through aseries of deconvolution layers to obtain the single-pixel velocity field. Asthe supervised learning strategy is considered, synthetic data sets includingground-truth fluid motions are generated to train the network parameters.Synthetic and real experimental PIV data sets are used to test the trainedneural network in terms of accuracy, precision, spatial resolution androbustness. The test results show that these attributes of CC-FCN are furtherimproved compared with those of other tested PIV algorithms. The proposed modelcould therefore provide competitive and robust estimations for PIV experiments.</p>  </details></details><details>  <summary>105. <b>标题：Speaker conditioning of acoustic models using affine transformation for  multi-speaker speech recognition</b></summary>  <p><b>编号</b>：[475]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00320</p>  <p><b>作者</b>：Midia Yousefi,  John H.L. Hanse</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：original resnet acoustic model baseline, speaker conditioning process allows, channel automatic speech recognition, fuse speaker auxiliary information, proposed speaker conditioning method</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>This study addresses the problem of single-channel Automatic SpeechRecognition of a target speaker within an overlap speech scenario. In theproposed method, the hidden representations in the acoustic model are modulatedby speaker auxiliary information to recognize only the desired speaker. Affinetransformation layers are inserted into the acoustic model network to integratespeaker information with the acoustic features. The speaker conditioningprocess allows the acoustic model to perform computation in the context oftarget-speaker auxiliary information. The proposed speaker conditioning methodis a general approach and can be applied to any acoustic model architecture.Here, we employ speaker conditioning on a ResNet acoustic model. Experiments onthe WSJ corpus show that the proposed speaker conditioning method is aneffective solution to fuse speaker auxiliary information with acoustic featuresfor multi-speaker speech recognition, achieving +9% and +20% relative WERreduction for clean and overlap speech scenarios, respectively, compared to theoriginal ResNet acoustic model baseline.</p>  </details></details><details>  <summary>106. <b>标题：DeepDoseNet: A Deep Learning model for 3D Dose Prediction in Radiation  Therapy</b></summary>  <p><b>编号</b>：[487]</p>  <p><b>链接</b>：https://arxiv.org/abs/2111.00077</p>  <p><b>作者</b>：Mumtaz Hussain Soomro,  Victor Gabriel Leandro Alves,  Hamidreza Nourzadeh,  Jeffrey V. Siebers</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：d99 %, d95 %, d1, d99 %, d95 %, d1, deepdosenet 3d dose prediction model based, predicted 3d dose distributions, 2020 aapm openkbp challenge</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>The DeepDoseNet 3D dose prediction model based on ResNet and Dilated DenseNetis proposed. The 340 head-and-neck datasets from the 2020 AAPM OpenKBPchallenge were utilized, with 200 for training, 40 for validation, and 100 fortesting. Structures include 56Gy, 63Gy, 70Gy PTVs, and brainstem, spinal cord,right parotid, left parotid, larynx, esophagus, and mandible OARs. Mean squarederror (MSE) loss, mean absolute error (MAE) loss, and MAE plus dose-volumehistogram (DVH) based loss functions were investigated. Each model'sperformance was compared using a 3D dose score, $\bar{S_{D}}$, (mean absolutedifference between ground truth and predicted 3D dose distributions) and a DVHscore, $\bar{S_{DVH}}$ (mean absolute difference between ground truth andpredicted dose-volume metrics).Furthermore, DVH metrics Mean[Gy] and D0.1cc[Gy] for OARs and D99%, D95%, D1% for PTVs were computed. DeepDoseNet with theMAE plus DVH-based loss function had the best dose score performance of theOpenKBP entries. MAE+DVH model had the lowest prediction error (P<0.0001, wilcoxon test) on validation and test datasets (validation: $\bar{s_{d}}$="2.3Gy," $\bar{s_{dvh}}$="1.9Gy;" test: followed by the mae model mse had highest prediction error no significant difference was found among models in terms of mean [gy], but mae+dvh significantly outperformed d0.1cc[gy], particularly for mandible parotids both (p<0.01) (p<0.0001) datasets. d99%, d95%, d1% targets. reduced ~60% ~70%.< p>  </0.0001,></p></details></details><details>  <summary>107. <b>标题：Sampling-Based Robust Control of Autonomous Systems with Non-Gaussian  Noise</b></summary>  <p><b>编号</b>：[494]</p>  <p><b>链接</b>：https://arxiv.org/abs/2110.12662</p>  <p><b>作者</b>：Thom S. Badings,  Alessandro Abate,  Nils Jansen,  David Parker,  Hasan A. Poonawala,  Marielle Stoelinga</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：called interval markov decision process, critical settings must account, compute probably approximately correct, realistic benchmarks show, art verification techniques</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>Controllers for autonomous systems that operate in safety-critical settingsmust account for stochastic disturbances. Such disturbances are often modelledas process noise, and common assumptions are that the underlying distributionsare known and/or Gaussian. In practice, however, these assumptions may beunrealistic and can lead to poor approximations of the true noise distribution.We present a novel planning method that does not rely on any explicitrepresentation of the noise distributions. In particular, we address theproblem of computing a controller that provides probabilistic guarantees onsafely reaching a target. First, we abstract the continuous system into adiscrete-state model that captures noise by probabilistic transitions betweenstates. As a key contribution, we adapt tools from the scenario approach tocompute probably approximately correct (PAC) bounds on these transitionprobabilities, based on a finite number of samples of the noise. We capturethese bounds in the transition probability intervals of a so-called intervalMarkov decision process (iMDP). This iMDP is robust against uncertainty in thetransition probabilities, and the tightness of the probability intervals can becontrolled through the number of samples. We use state-of-the-art verificationtechniques to provide guarantees on the iMDP, and compute a controller forwhich these guarantees carry over to the autonomous system. Realisticbenchmarks show the practical applicability of our method, even when the iMDPhas millions of states or transitions.</p>  </details></details><details>  <summary>108. <b>标题：Multiple Sclerosis Lesions Identification/Segmentation in Magnetic  Resonance Imaging using Ensemble CNN and Uncertainty Classification</b></summary>  <p><b>编号</b>：[495]</p>  <p><b>链接</b>：https://arxiv.org/abs/2108.11791</p>  <p><b>作者</b>：Giuseppe Placidi,  Luigi Cinque,  Filippo Mignosi,  Matteo Polsinelli</p>  <p><b>备注</b>：</p>  <p><b>关键词</b>：2016 msseg benchmark public data set, better emulate human reasoning, three pivotal concepts, single imaging modality, physicians partially manage</p>  <details>    <summary><b>点击查看摘要</b></summary>    <p>To date, several automated strategies for identification/segmentation ofMultiple Sclerosis (MS) lesions with the use of Magnetic Resonance Imaging(MRI) have been presented but they are either outperformed by human experts orperform differently from them. This is mainly due to the ambiguity originatedby MRI instabilities, peculiar variability of MS and unspecific nature of MRIwith respect to MS. Physicians partially manage the uncertainty generated byambiguity relying on their personal radiological/clinical/anatomical backgroundand experience. We present an automated framework based on three pivotalconcepts to better emulate human reasoning: 1. the modelling of uncertainty; 2.the proposal of two, separately trained, CNN, one optimized with respect tolesions themselves and the other to the environment surrounding lesions,respectively repeated for axial, coronal and sagittal directions; 3. thedefinition of an ensemble classifier to merge the information collected by allCNN. The proposed framework is trained, validated and tested on the 2016 MSSEGbenchmark public data set from a single imaging modality, the FLuid-AttenuatedInversion Recovery (FLAIR). The comparison, made with the consensus (theground-truth) between 7 human raters and with each of the 7 human raters,proves that there is no significant difference between the automated and thehuman raters. The results of our framework concerning the uncertainty are alsoreported, even if a comparison with the raters is impossible because they don'trecognize this class.</p>  </details></details>]]></content>
      
      
      <categories>
          
          <category> 阅读笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>全球人工智能技术创新大赛【赛道一】：医学影像报告异常检测</title>
      <link href="/2021/05/19/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B.html"/>
      <url>/2021/05/19/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B.html</url>
      
        <content type="html"><![CDATA[<h1>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E8%B5%9B%E9%A2%98%E4%BB%8B%E7%BB%8D">赛题介绍</a><ul><li><a href="#%E8%B5%9B%E9%A2%98%E8%83%8C%E6%99%AF">赛题背景</a></li><li><a href="#%E8%B5%9B%E9%A2%98%E6%8F%8F%E8%BF%B0">赛题描述</a><ul><li><a href="#%E8%B5%9B%E9%A2%98%E6%95%B0%E6%8D%AE">赛题数据</a></li><li><a href="#%E6%8F%90%E4%BA%A4%E8%A6%81%E6%B1%82">提交要求</a></li><li><a href="#%E8%AF%84%E4%BC%B0%E6%A0%87%E5%87%86">评估标准</a></li></ul></li><li><a href="#%E8%B5%9B%E9%A2%98%E6%80%9D%E8%B7%AF">赛题思路</a></li></ul></li><li><a href="#%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86">数据处理</a><ul><li><a href="#%E6%8E%A2%E7%B4%A2%E5%88%86%E6%9E%90">探索分析</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E5%88%92%E5%88%86">数据划分</a></li><li><a href="#%E6%A0%B7%E6%9C%AC%E9%87%8D%E5%8A%A0%E6%9D%83">样本重加权</a></li><li><a href="#%E6%95%B0%E6%8D%AE%E5%A2%9E%E5%BC%BA">数据增强</a></li></ul></li><li><a href="#%E6%A8%A1%E5%9E%8B%E8%AE%AD%E7%BB%83">模型训练</a><ul><li><a href="#%E6%A8%A1%E5%9E%8B%E7%BB%93%E6%9E%84">模型结构</a></li><li><a href="#%E9%A2%84%E8%AE%AD%E7%BB%83">预训练</a></li><li><a href="#%E5%BE%AE%E8%B0%83">微调</a></li></ul></li><li><a href="#%E6%A8%A1%E5%9E%8B%E9%9B%86%E6%88%90">模型集成</a></li><li><a href="#%E6%96%B9%E6%A1%88%E4%BC%98%E5%8C%96">方案优化</a></li><li><a href="#%E5%A4%A7%E8%B5%9B%E7%BB%93%E6%9E%9C">大赛结果</a></li><li><a href="#top%E6%96%B9%E6%A1%88">Top方案</a></li><li><a href="#%E4%B8%8D%E8%B6%B3%E4%B8%8E%E5%B1%95%E6%9C%9B">不足与展望</a></li><li><a href="#%E5%8F%82%E8%80%83%E6%96%87%E7%8C%AE">参考文献</a></li><li><a href="#%E9%99%84%E5%BD%95">附录</a><ul><li><a href="#%E5%8D%8A%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0">半监督学习</a></li><li><a href="#blending">Blending</a></li></ul></li></ul><h1>赛题介绍</h1><h2 id="赛题背景">赛题背景</h2><p>   影像科医生在工作时会观察医学影像（如CT、核磁共振影像），并对其作出描述，这些描述中包含了大量医学信息，对医疗AI具有重要意义。<strong>本任务需要参赛队伍根据医生对CT的影像描述文本数据，判断身体若干目标区域是否有异常以及异常的类型</strong>。初赛阶段仅需判断各区域是否有异常，复赛阶段除了判断有异常的区域外，还需判断异常的类型。判断的结果按照指定评价指标进行评测和排名，得分最优者获胜。</p><blockquote><p>赛题链接：<a href="https://tianchi.aliyun.com/competition/entrance/531852/introduction?spm=5176.12281957.1004.9.38b03eaf8ds5LL">Link</a></p></blockquote><h2 id="赛题描述">赛题描述</h2><h3 id="赛题数据">赛题数据</h3><p>大赛分为初赛A/B榜、复赛A/B榜以及决赛答辩，各时间点公布的数据文件及时间如下</p><table><thead><tr><th>数据文件</th><th>发布时间</th><th>备注</th></tr></thead><tbody><tr><td>track1_round1_train_20210222.csv</td><td>2021.03.02(初赛A榜)</td><td>仅包含区域标注</td></tr><tr><td>track1_round1_testA_20210222.csv</td><td>2021.03.02(初赛A榜)</td><td>测试集数据，无标注</td></tr><tr><td>track1_round1_testB.csv</td><td>2021.04.08(初赛B榜)</td><td>测试集数据，无标注</td></tr><tr><td>train.csv</td><td>2021.04.15(复赛A榜)</td><td>包含区域与类型标注</td></tr><tr><td>testA.csv</td><td>2021.04.15(复赛A榜)</td><td>测试集数据，无标注，不开放下载</td></tr><tr><td>testB.csv</td><td>2021.05.08(复赛B榜)</td><td>测试集数据，无标注，不开放下载</td></tr></tbody></table><p>初赛训练数据格式如下</p><table><thead><tr><th>列名</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>report_ID</td><td>数据标号，整型</td><td>1</td></tr><tr><td>description</td><td>脱敏后的影像描述，以字为单位使用空格分割</td><td>101 47 12 66 74 90 0 411 234 79 175</td></tr><tr><td>label</td><td>由多个异常区域ID组成，以空格分隔。若此描述中无异常区域，则为空</td><td>3 4</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">0|,|623 328 538 382 399 400 478 842 698 137 492 266 521 177 415 381 693 700 132 706 317 534 830 290 512 729 327 548 520 445 51 240 711 818 445 358 240 711 693 623 328 380 172 54 175 563 470 609 |,|2 </span><br><span class="line">1|,|48 328 538 382 809 623 434 355 382 382 363 145 424 389 693 808 266 751 335 832 47 693 583 328 305 206 461 204 48 328 740 204 411 204 549 728 832 122 |,|</span><br><span class="line">2|,|623 656 293 851 636 842 698 493 338 266 369 691 693 380 136 363 399 556 698 66 432 449 177 830 381 332 290 380 26 343 28 177 415 832 14 |,|15 </span><br><span class="line">3|,|48 328 380 259 439 107 380 265 172 470 290 693 556 698 54 623 34 138 351 761 693 657 305 342 809 618 282 300 654 556 698 432 449 693 380 834 809 343 809 832 47 693 514 569 428 614 34 846 138 693 358 380 136 363 399 556 698 313 66 432 449 177 415 145 693 380 172 809 380 654 439 380 834 832 47 750 256 514 837 231 113 256 |,|</span><br><span class="line">4|,|623 328 399 698 493 338 266 14 177 415 511 647 693 852 60 328 380 172 54 788 591 487 |,|16 </span><br><span class="line">5|,|80 328 328 54 172 439 741 380 172 842 698 177 777 415 832 14 381 693 623 328 697 382 38 582 382 363 177 257 415 145 755 404 386 106 566 521 |,|15 </span><br><span class="line">6|,|48 322 795 856 374 439 48 328 443 380 597 172 320 842 698 494 149 266 218 415 106 521 79 693 380 361 200 737 813 306 693 556 698 554 232 823 34 138 351 761 693 305 654 809 282 300 654 678 195 698 432 449 693 66 834 809 343 809 654 556 104 698 832 47 617 256 514 129 231 614 34 138 693 91 382 569 231 134 698 313 66 432 623 |,|4 11 15 </span><br><span class="line">7|,|623 328 659 486 582 162 711 289 606 405 809 78 477 693 697 777 582 162 716 854 832 122 693 697 582 38 582 2 498 165 397 455 693 724 328 697 698 494 504 382 672 514 381 |,|</span><br><span class="line">8|,|852 328 471 585 117 458 399 607 693 380 522 623 304 160 380 303 789 439 852 328 419 571 769 256 661 809 621 499 300 832 582 698 493 338 266 521 177 415 381 |,|6 12 14 15 </span><br><span class="line">9|,|229 172 200 737 437 547 651 693 623 328 355 653 382 579 488 776 591 487 693 91 400 478 698 477 300 797 415 381 |,|1 3 </span><br><span class="line">10|,|852 328 305 461 71 413 728 479 122 693 697 382 809 461 486 382 809 357 471 809 777 382 494 504 584 265 363 818 776 389 522 426 693 427 363 170 607 590 618 |,|</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>复赛训练数据格式如下</p><table><thead><tr><th>列名</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>report_ID</td><td>数据标号，整型</td><td>1</td></tr><tr><td>description</td><td>脱敏后的影像描述，以字为单位使用空格分割</td><td>101 47 12 66 74 90 0 411 234 79 175</td></tr><tr><td>label</td><td>string，由两部分组成。第一部分为若干异常区域ID，用空格分割。第二部分为若干异常类型ID，用空格分割。两部分用逗号“,”分割。若定义中所有区域均无异常，则两部分均为空，此项为“,”。</td><td>3 4,0 2</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">0|,|623 355 582 617 265 162 498 289 169 137 405 693 399 842 698 335 266 14 177 415 381 693 48 328 461 478 439 473 851 636 739 374 698 494 504 656 575 754 421 421 791 200 103 718 569 |,|,</span><br><span class="line">1|,|623 328 328 380 172 54 823 487 391 693 256 433 569 231 171 852 770 693 48 328 305 461 406 333 399 698 177 415 14 381 |,|,</span><br><span class="line">2|,|708 328 328 380 172 470 455 693 256 514 569 231 113 256 693 852 328 328 380 172 300 320 842 698 149 338 266 521 415 381 693 700 830 273 332 |,|15 ,2 </span><br><span class="line">3|,|48 697 91 399 28 400 478 809 623 697 538 265 478 284 498 289 399 698 335 266 477 300 381 693 38 582 623 697 382 382 363 397 455 |,|0 7 ,9 </span><br><span class="line">4|,|411 657 399 698 17 36 575 548 435 142 51 519 421 569 183 693 380 136 363 556 698 432 449 177 415 381 693 477 767 809 712 477 767 37 11 693 430 698 251 391 |,|15 ,11 </span><br><span class="line">5|,|852 261 669 105 259 160 362 341 639 693 747 750 399 842 837 161 372 14 177 415 693 623 328 411 204 399 842 698 160 338 177 415 832 14 381 |,|,</span><br><span class="line">6|,|852 328 355 382 610 538 382 382 327 543 381 |,|,</span><br><span class="line">7|,|8 266 627 93 333 832 47 693 380 598 200 737 470 290 693 380 834 809 342 809 257 654 832 47 693 852 328 566 357 659 439 697 582 162 498 289 169 405 |,|,</span><br><span class="line">8|,|443 380 172 56 180 345 693 380 809 343 218 654 832 47 402 690 693 256 696 569 233 306 256 |,|,</span><br><span class="line">9|,|623 328 554 232 461 204 399 842 698 177 832 14 381 |,|,</span><br><span class="line">10|,|328 697 538 678 355 661 698 335 338 408 521 86 415 693 240 221 104 328 328 380 172 12 187 394 174 506 37 788 313 66 832 429 |,|0 1 2 ,2</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>测试集数据</p><table><thead><tr><th>列名</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>report_ID</td><td>数据标号，整型</td><td>1</td></tr><tr><td>description</td><td>脱敏后的影像描述，以字为单位使用空格分割</td><td>101 47 12 66 74 90 0 411 234 79 175</td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">0|,|852 328 697 538 142 355 582 800 728 4 647 169 750 703 488 82 487 693 852 328 697 582 809 538 729 327 194 79 728 478 333 832 47 </span><br><span class="line">1|,|380 358 343 654 171 832 47 832 690 693 48 563 380 609 532 50 470 651 693 380 434 343 832 47 693 256 514 569 231 113 256 </span><br><span class="line">2|,|751 335 834 582 717 583 585 693 623 328 107 380 698 808 549 14 455 415 381 </span><br><span class="line">3|,|623 328 649 582 488 12 578 623 538 382 382 265 363 832 424 389 693 91 785 414 78 571 693 374 698 338 266 521 5 415 381 439 173 257 642 493 149 13 177 722 265 14 381 693 48 328 380 834 380 654 532 50 386 832 47 693 256 514 10 231 113 256 </span><br><span class="line">4|,|83 293 398 797 382 363 145 424 693 698 800 691 693 731 700 243 165 317 846 693 852 328 355 382 488 12 591 487 693 506 330 91 400 321 695 698 646 750 669 730 381 </span><br><span class="line">5|,|623 328 305 461 204 842 750 160 107 837 14 177 415 414 693 740 328 697 661 149 338 266 14 177 415 381 </span><br><span class="line">6|,|380 741 200 737 439 73 834 809 809 654 556 698 448 290 693 256 514 569 231 118 3 693 48 54 419 571 769 256 524 439 328 514 380 172 320 257 363 399 842 698 493 566 266 177 415 106 521 381 693 700 384 261 7 </span><br><span class="line">7|,|597 714 328 697 382 698 422 259 693 158 56 79 328 697 68 539 582 617 233 306 162 498 289 554 232 405 </span><br><span class="line">8|,|48 305 461 312 439 740 204 698 177 415 832 14 381 693 623 328 520 66 557 86 675 657 380 498 104 289 442 415 617 823 </span><br><span class="line">9|,|380 129 514 569 231 113 256 693 91 382 556 134 227 382 327 622 351 761 777 204 779 374 556 698 313 66 38 </span><br><span class="line">10|,|48 328 328 380 172 809 192 497 380 172 716 854 618 380 172 399 552 698 494 504 14 165 415 45 693 623 328 765 172 268 693 256 514 437 463 852 615 138 </span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="提交要求">提交要求</h3><p>所需提交文件格式为</p><table><thead><tr><th>列名</th><th>说明</th><th>示例</th></tr></thead><tbody><tr><td>report_ID</td><td>数据标号，整型</td><td>1</td></tr><tr><td>Prediction</td><td>预测输出向量（初赛为17维，复赛为29维），以空格分割，值在0到1之间，表示区域/类型包含异常类型的概率</td><td>0.68 0.82 0.92 0.59 0.71 0.23 0.45 0.36 0.46 0.64 0.92 0.66 0.3 0.5 0.94 0.7 0.38 0.05 0.97 0.71 0.5 0.64 0.0 0.54 0.5 0.49 0.41 0.06 0.07</td></tr></tbody></table><h3 id="评估标准">评估标准</h3><p>评估指标较为严格，以测试集数据上对提交结果计算的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>mlogloss</mtext></mrow><annotation encoding="application/x-tex">\text{mlogloss}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">mlogloss</span></span></span></span></span>指标为基础，记样本个数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，每个样本对应<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>个预测值，那么首先计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi><mo>×</mo><mi>N</mi></mrow><annotation encoding="application/x-tex">M \times N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个预测值的均值如下<br>$$<br>\text{mlogloss}(y, \tilde{y}) = -<br>\frac{1}{M} \sum_{m=1}^M<br>\frac{1}{N} \sum_{m=1}^N<br>\left [<br>y_{nm} \log \tilde{y}<em>{nm} + (1 - y</em>{nm}) \log (1 - \tilde{y}_{nm})<br>\right] \tag{1}<br>$$</p><p>两阶段计算有所区别：</p><ul><li><p><strong>初赛阶段</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mn>1</mn><mo>−</mo><mtext>mlogloss</mtext></mrow><annotation encoding="application/x-tex">S = 1 - \text{mlogloss}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">mlogloss</span></span></span></span></span>。</p></li><li><p><strong>复赛阶段</strong>：为了让分数区间更合理，复赛阶段调整为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mn>2</mn><mo>×</mo><mtext>mlogloss</mtext></mrow><annotation encoding="application/x-tex">1 - 2 \times \text{mlogloss}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">mlogloss</span></span></span></span></span>。另外，复赛阶段分数由两部分组成：</p><ul><li>第一部分（区域）得分<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">S_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>计算方式与初赛一致，对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>×</mo><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N \times M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个预测值计算指标；</li><li>第二部分（类型）得分<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对所有实际存在异常区域的测试样本计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>mlogloss</mtext></mrow><annotation encoding="application/x-tex">\text{mlogloss}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">mlogloss</span></span></span></span></span>指标，例如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个样本中包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个存在区域异常的样本，那么对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>×</mo><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">K \times M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个预测值计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>mlogloss</mtext></mrow><annotation encoding="application/x-tex">\text{mlogloss}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">mlogloss</span></span></span></span></span>指标。</li></ul><p>最终复赛得分为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mo>=</mo><mn>0.6</mn><mo>×</mo><msub><mi>S</mi><mn>1</mn></msub><mo>+</mo><mn>0.4</mn><mo>×</mo><msub><mi>S</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">S = 0.6 \times S_1 + 0.4 \times S_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。</p></li></ul><h2 id="赛题思路">赛题思路</h2><ol><li>文本数据脱敏是该题一方面的限制，因为不能利用公开的预训练模型对应的词表，也就不能直接在公开模型基础上微调，需要<strong>重新生成词表并预训练</strong>；</li><li>该任务是一个典型的<strong>多标签分类任务</strong>，需要对每个标签进行异常判别，在微调阶段采用二分类交叉熵（BCE）损失，与评测指标一致。</li></ol><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig1_pretrain_finetune.png" alt="Fig1_pretrain_finetune"></p><h1>数据处理</h1><h2 id="探索分析">探索分析</h2><p>各文件给定文本长度统计：<br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig2_eda1.png" alt="Fig2_eda1"></p><p>各文件给定文本词频统计：<br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig2_eda2.png" alt="Fig2_eda2"></p><p>初赛/复赛样本标签频数统计：<br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig2_eda3.png" alt="Fig2_eda3"></p><ul><li><strong>数据总数</strong>：初赛训练集共10000条，A/B榜测试集分别有3000条；复赛训练集共20000条，A/B榜测试集分别有5000条。</li><li><strong>文本长度</strong>：长度最小为2，最大长度都短于128。</li><li><strong>词表统计</strong>：词表大小为852，词频分布较为一致。</li><li><strong>标签统计</strong>：初赛和复赛在标签上的分布存在不一致。</li></ul><h2 id="数据划分">数据划分</h2><p>数据划分的目的是：</p><ul><li>从训练集总体中划分一部分作为验证集(dev)，用作early-stopping；</li><li>模型使用不同划分的数据训练，能增大模型差异，为后续模型集成作准备。</li></ul><p>尝试使用多种数据划分方式，如</p><ul><li>多次随机划分(<code>sklearn.model_selection.ShuffleSplit</code>)；</li><li>普通K折划分(<code>sklearn.model_selection.KFold</code>)；</li><li>多标签分层K折采样(<code>iterstrat.ml_stratifiers.MultilabelStratifiedKFold</code>)；</li><li>对抗验证(adversarial validation)。</li></ul><blockquote><p>adversarial validation 详情参考：<a href="https://lonepatient.top/2018/07/10/Adversarial%20validation.html">Link</a></p></blockquote><p>实验发现多标签分层K折采样训练得到的模型，在集成中收益最大，可能原因如下</p><ul><li>K折划分获得的多折训练集两两间都存在差异，可以增大模型差异，提升集成效果；</li><li>划分过程中，需尽量使训练集的数据分布尽可能与原始数据分布保持一致，分层(stratified)能使标签分布保持一致。</li></ul><p>考虑到以下几点，取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">K=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span></span></span></span>：</p><ul><li>K取值越大时，每折训练集中样本个数越多，模型训练次数也越多，导致训练时间过长；</li><li>会导致折间差异变小，影响模型融合效果。</li></ul><h2 id="样本重加权">样本重加权</h2><p>   本地验证集上能达到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.96</mn><mo>+</mo></mrow><annotation encoding="application/x-tex">0.96+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.96</span><span class="mord">+</span></span></span></span>的分数，但实际LB的分数最高也只有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0.94</mn></mrow><annotation encoding="application/x-tex">0.94</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.94</span></span></span></span>左右，因此线上线下存在较大的不一致。为了减少不一致，对训练集样本进行重加权，权值由TFIDF与余弦相似度评估，具体计算方法是：用给定文本语料训练TFIDF参数，然后计算训练集与测试集样本两两间的句级相似度，取均值得到各训练集样本权重，如下图所示。<br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig3_reweight.png" alt="Fig3_reweight"></p><h2 id="数据增强">数据增强</h2><p>   受目前视觉领域Mixup、Cutout与CutMix数据增强方式<a href="#ref"><sup>[1]</sup></a>启发，本方案设计了与其类似的数据增强方式，具体方法为：从训练样本集中随机选择两个原始样本，随机打乱顺序后拼接得到扩增样本，并将两个原始样本的标签进行合并，具体如下，注意此时要调整模型的最大输入长度。</p><table><thead><tr><th>样本</th><th>tokens</th><th>label</th></tr></thead><tbody><tr><td>原始样本1</td><td>708 328 328 380 172 470 455 693 256 514 569 231 113 256 693 852 328 328 380 172 300 320 842 698 149 338 266 521 415 381 693 700 830 273 332</td><td>15, 2</td></tr><tr><td>原始样本2</td><td>411 657 399 698 17 36 575 548 435 142 51 519 421 569 183 693 380 136 363 556 698 432 449 177 415 381 693 477 767 809 712 477 767 37 11 693 430 698 251 391</td><td>15, 11</td></tr><tr><td>扩增样本</td><td>708 328 328 380 172 470 455 693 256 514 569 231 113 256 693 852 328 328 380 172 300 320 842 698 149 338 266 521 415 381 693 700 830 273 332 411 657 399 698 17 36 575 548 435 142 51 519 421 569 183 693 380 136 363 556 698 432 449 177 415 381 693 477 767 809 712 477 767 37 11 693 430 698 251 391</td><td>2, 11, 15</td></tr></tbody></table><p>另外，尝试使用了EDA数据增强<a href="#ref"><sup>[2]</sup></a>，但效果欠佳</p><ul><li>同义词替换(Synonyms Replace, SR)：不考虑stopwords，在句子中随机抽取n个词，然后从同义词词典中随机抽取同义词，并进行替换。</li><li>随机插入(Randomly Insert, RI)：不考虑stopwords，随机抽取一个词，然后在该词的同义词集合中随机选择一个，插入原句子中的随机位置。该过程可以重复n次。</li><li>随机交换(Randomly Swap, RS)：句子中，随机选择两个词，位置交换。该过程可以重复n次。</li><li>随机删除(Randomly Delete, RD)：句子中的每个词，以概率p随机删除。</li></ul><h1>模型训练</h1><h2 id="模型结构">模型结构</h2><p>   目前，NLP领域的SOTA都是预训练加微调的方案，其中预训练模型(Pre-training Language Models, PLMs)是在大量语料上进行无监督训练得到的，网络结构采用Transformer模型(Encoder或Decoder)，常见的有：BERT<a href="#ref"><sup>[3]</sup></a>、RoBERTa<a href="#ref"><sup>[4]</sup></a>、XLNet<a href="#ref"><sup>[5]</sup></a>、GPT<a href="#ref"><sup>[6]</sup></a>、UniLM<a href="#ref"><sup>[7,8,9]</sup></a>等，国内相关技术如百度的ERNIE<a href="#ref"><sup>[10]</sup></a>、华为的NEZHA<a href="#ref"><sup>[11]</sup></a>等。本方案使用了两种预训练模型，分别是华为提出的NEZHA、苏剑林(苏神)提出的RoFormer<a href="#ref"><sup>[12,16]</sup></a>。选择这两种预训练模型的原因是：</p><ol><li>两种模型都对位置编码(Position Embedding, PE)做了优化，其中NEZHA采用相对位置编码，RoFormer采用了旋转式位置编码，原文实验结果都表明了其有效性；</li><li>自注意力计算复杂度较高(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>)，在预训练阶段为减少训练时间，设置的最大文本长度为128，而微调阶段使用数据增强时设置的最大文本长度为256。此时若采用可学习PE会导致128~256位置的参数学习不充分，而NEZHA和RoFormer的PE参数是固定无需学习的，不存此问题。</li></ol><p>   另外，本文在句级表征获取方面进行了设计。用BERT类模型获取句级表征一般是通过特殊token<code>[CLS]</code>获取，也有部分方法通过对各输入token对应的编码特征进行池化操作得到句级表征，如均值池化、最大值池化、LSTM池化等。初赛阶段方案采用<code>[CLS]</code>对应编码输出作为句级表征，但后续实验发现<strong>为每个标签设置单独的表征</strong>能极大提升分类的性能，两者方案对比如下：</p><blockquote><p><strong>反直觉</strong>：微调过程中尝试多种方法建模标签间依赖都失效，如Self-Attention、GCN等，而将两个任务分开训练能得到更好的实验结果，也就是说区域预测与类型预测间没有较大的关联性，更有部分选手采用小型深度模型(如RNN)对各个标签单独建模。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig5_model1.png" alt="Fig5_model1"></p><p>同时，各标签间解耦也能提升模型的性能，通过修改<code>attention_mask</code>为以下形式实现，多头注意力每个头的注意力掩码一致</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig5_attention_mask.png" alt="Fig5_attention_mask"></p><h2 id="预训练">预训练</h2><p>   谷歌BERT模型预训练以自监督方式进行，进行的两个任务分别为token级的Masked Laguage Model(MLM)和句级的Next Sequence Prediction(NSP)<a href="#ref"><sup>[3]</sup></a>。此后大量研究对这方面进行了改进，即对预训练任务进行了调整，旨在提高模型的语义表达能力。在<strong>token级任务</strong>上，SpanBERT<a href="#ref"><sup>[13]</sup></a>期望模型能得到连续范围的预测输出，科大讯飞为中文文本处理提出了Whole Word Mask Language Model(wwm-MLM)任务<a href="#ref"><sup>[14]</sup></a>，取得了较为不错的实验结果，wwm-MLM与MLM的对比如下图所示。在<strong>句级分类任务</strong>上，RoBERTa<a href="#ref"><sup>[4]</sup></a>移除了NSP任务，仅保留MLM；ALBERT在BERT基础上，将NLP任务修改为Sentence Order Prediction(SOP)；苏剑林等人提出SimBERT<a href="#ref"><sup>[20]</sup></a>，将文本匹配的有监督信息用于预训练任务中。</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig4_wwm.png" alt="Fig4_wwm"></p><p>   本方案预训练模型结构如下，在token级任务上采用了wwm-MLM任务，在句级任务上进行了创新。具体地，在同批次数据内对每个待预测标签进行匹配，如果两个样本具有相同标签，那么求取两者对应标签的句级编码的内积进行相似度匹配，利用二分类交叉熵计算匹配损失,如果样本属于测试集，无标签信息，那么不进行匹配。这样做的目的是希望将模型通过相似度匹配任务学习到的语义表达能力推广应用到分类任务中。</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig5_model2.png" alt="Fig5_model2"></p><p>具体例子如下，若读取的某批次(bs=8)数据的标签为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  | 0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28</span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line">0 | 1  1  1  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0</span><br><span class="line">1 | 0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  1  0  1  0  0  0  0  0  0  0  0  0</span><br><span class="line">2 | 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  1  0  0  0  0  0  0  0  0  0</span><br><span class="line">3 | 0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0</span><br><span class="line">4 | 1  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0</span><br><span class="line">5 |-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1</span><br><span class="line">6 | 0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0  0</span><br><span class="line">7 | 0  0  0  0  1  0  0  0  0  0  0  1  0  0  0  0  0  0  0  1  0  0  0  0  0  0  0  0  0</span><br></pre></td></tr></table></figure><p>那么<strong>标签19</strong>的匹配标签矩阵，如下，其中<code>0</code>表示不匹配，<code>1</code>表示匹配，<code>-1</code>表示忽略(不计算损失)。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">  |  0  1  2  3  4  5  6  7</span><br><span class="line">---------------------------</span><br><span class="line">0 | -1  0  0  0  1 -1  1  0</span><br><span class="line">1 | -1 -1  1  1  0 -1  0  1</span><br><span class="line">2 | -1 -1 -1  1  0 -1  0  1</span><br><span class="line">3 | -1 -1 -1 -1  0 -1  0  1</span><br><span class="line">4 | -1 -1 -1 -1 -1 -1  1  0</span><br><span class="line">5 | -1 -1 -1 -1 -1 -1 -1 -1</span><br><span class="line">6 | -1 -1 -1 -1 -1 -1 -1  0</span><br><span class="line">7 | -1 -1 -1 -1 -1 -1 -1 -1</span><br></pre></td></tr></table></figure><p>存在的问题以及相应的解决方案：</p><ol><li>wwm-MLM需要使用分词信息得到词语的划分，而本赛题文本已脱敏化，解决方案是：<ul><li>为了能使用目前的分词工具，如jieba，首先将脱敏token映射为中文字符；</li><li>采用了新词发现算法寻找可能存在的由2~4个字组成的词语，仅保留了200个以减少噪声干扰。经统计发现词频最低的token组合是<code>830 290 724 486</code>，在语料中共出现18次，其余提取的词语出现次数都远大于该词，一定程度上验证了新词发现的有效性。</li></ul></li><li>这种预训练方案导致微调时验证集标签泄露，容易过拟合：重新初始化<code>[CLS 0]~[CLS n]</code>对应的嵌入向量；</li><li>当无标签数据过多时，单个批次内匹配的标签对比较稀疏，导致模型学习不充分：训练时减少无标签数据。</li></ol><p>   模型参数量与BERT(base)一致(<code>L12_A12_H768</code>)，部分关键训练参数如下表。最终损失在0.1~0.3之间，该范围内的预训练模型对后续模型微调效果差距不大。</p><table><thead><tr><th></th><th>初赛</th><th>复赛</th></tr></thead><tbody><tr><td>数据文件</td><td>track1_round1_train_20210222.csv<br>track1_round1_testA_20210222.csv<br>track1_round1_testB.csv</td><td>track1_round1_train_20210222.csv<br>train.csv<br>testA/B.csv</td></tr><tr><td>batch matching</td><td>w/o</td><td>w/</td></tr><tr><td>mlm probability</td><td>0.3</td><td>0.2</td></tr><tr><td>learning rate</td><td>0.000176</td><td>0.000176</td></tr><tr><td>max sequence length</td><td>45(误)</td><td>128</td></tr><tr><td>batch size</td><td>256</td><td>64</td></tr><tr><td>warmup steps</td><td>500</td><td>5000</td></tr><tr><td>total steps</td><td>16000</td><td>90090</td></tr><tr><td>optimizer</td><td>AdamW</td><td>AdamW</td></tr><tr><td>scheduler</td><td>linear</td><td>linear</td></tr><tr><td>…</td><td>…</td><td>…</td></tr></tbody></table><h2 id="微调">微调</h2><p>   微调阶段模型比较简单，是在预训练模型基础上添加线性变换层进行二分类训练，即每个分类标签对应编码向量作Logistic回归，预测异常概率，如下图所示</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig5_model3.png" alt="Fig5_model3"></p><p>损失函数对不同样本重加权后取均值，见<a href="#%E6%A0%B7%E6%9C%AC%E9%87%8D%E5%8A%A0%E6%9D%83">样本重加权</a>。计算方法与指标计算保持一致。初赛阶段计算每个预测值的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>mlogloss</mtext></mrow><annotation encoding="application/x-tex">\text{mlogloss}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">mlogloss</span></span></span></span></span>，复赛阶段损失由两部分组成：</p><ul><li>第一部分（区域）损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">L_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>计算方式与初赛一致，对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>×</mo><msub><mi>M</mi><mn>1</mn></msub></mrow><annotation encoding="application/x-tex">N \times M_1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个预测值计算损失；</li><li>第二部分（类型）损失<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">L_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>对所有实际存在异常区域的测试样本计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>mlogloss</mtext></mrow><annotation encoding="application/x-tex">\text{mlogloss}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">mlogloss</span></span></span></span></span>指标，例如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个样本中包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个存在区域异常的样本，那么对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi><mo>×</mo><msub><mi>M</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">K \times M_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个预测值计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>mlogloss</mtext></mrow><annotation encoding="application/x-tex">\text{mlogloss}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord text"><span class="mord">mlogloss</span></span></span></span></span>指标。</li></ul><p>最终复赛阶段损失为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mn>0.6</mn><mo>×</mo><msub><mi>L</mi><mn>1</mn></msub><mo>+</mo><mn>0.4</mn><mo>×</mo><msub><mi>L</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">L = 0.6 \times L_1 + 0.4 \times L_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.6</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">0.4</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>。一些部分关键训练参数范围如下</p><table><thead><tr><th>参数</th><th>范围</th></tr></thead><tbody><tr><td>adv_epsilon</td><td>1.5 ~ 3.0</td></tr><tr><td>batch size</td><td>32</td></tr><tr><td>warmup ratio</td><td>0.1</td></tr><tr><td>learning_rate(bert)</td><td>2e-5, 3e-5, 5e-5</td></tr><tr><td>learning_rate(other)</td><td>1e-4 ~ 1e-3</td></tr><tr><td>epochs</td><td>3 ~ 4</td></tr><tr><td>optimizer</td><td>AdamW</td></tr><tr><td>scheduler</td><td>linear</td></tr><tr><td>…</td><td>…</td></tr></tbody></table><h1>模型集成</h1><p>   这题模型集成带来的收益是极大的，如单个NEZHA模型在5折下LB为0.928+，加入RoFormer模型LB能达到0.934+，集成过程示意图如下。将训练数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>折划分，确定超参数范围后从中选择一组参数训练<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个模型，每个模型在测试集上的结果取均值作为该组参数下的结果，反复多组参数训练并以<a href="#blending">Blending</a>组合多组参数的输出结果。但实际过程中发现，Blending求取的参数非常稀疏，许多参数都是0，因此最终采用均值集成。<br>   复赛提交时，对数据进行5折划分，一共2个不同的模型，共设定6组训练参数，两个任务分别训练，对单个任务来说共<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>2</mn><mo>×</mo><mn>5</mn><mo>×</mo><mn>6</mn><mo>=</mo><mn>60</mn></mrow><annotation encoding="application/x-tex">2 \times 5 \times 6 = 60</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">6</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">60</span></span></span></span>个模型集成。</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig7_ensemble1.png" alt="Fig7_ensemble1"></p><h1>方案优化</h1><table><thead><tr><th>优化方向</th><th>方法</th><th>说明</th><th>是否有效</th><th>原因分析</th></tr></thead><tbody><tr><td>数据</td><td>数据增强——CutMix</td><td>从训练样本集中随机选择两个原始样本，随机打乱顺序后拼接得到扩增样本，并将两个原始样本的标签进行合并</td><td>是</td><td>扩增样本集</td></tr><tr><td>数据</td><td>数据增强——EDA</td><td>随机替换、删除、交换、插入其他token</td><td>否</td><td>因数据集而异</td></tr><tr><td>数据</td><td>样本重加权</td><td>用训练集样本和测试集样本相似度计算权重，减少样本分布不一致</td><td>是</td><td>一定程度上对齐训练集与测试集</td></tr><tr><td>数据</td><td>多标签分层K折划分</td><td>使每折中各类标签分布一致，避免改变样本集分布</td><td>是</td><td>减少样本分布不一致问题的影响</td></tr><tr><td>模型</td><td>设置分类标签嵌入</td><td>为每个标签设置嵌入向量，并优化注意力掩码矩阵</td><td>是</td><td>使多标签间解耦</td></tr><tr><td>模型</td><td>复用公开预训练模型权重</td><td>考虑BERT模型的编码器可能包含较强的语义编码能力，因此尝试在模型预训练阶段复用公开预训练模型权重。具体地，载入预训练模型的编码器部分权重、重新初始化嵌入层参数，在此基础上进行Mask Language Model训练</td><td>否</td><td>可能是BERT编码器与嵌入层参数间存在较大的耦合性</td></tr><tr><td>模型</td><td>更多特征</td><td>加入其他句级特征，如Word2Vec、TFIDF特征</td><td>否</td><td>低阶特征对性能影响不大</td></tr><tr><td>模型</td><td>句级特征正态分布约束</td><td>BERT模型获取的编码特征存在各向异性，添加句级特征正态分布约束来改进，思路来源BERT-flow</td><td>否</td><td>太多的限制对模型参数优化不佳</td></tr><tr><td>损失</td><td>损失计算改进</td><td>复赛阶段损失分为两部分计算</td><td>是</td><td>损失计算和指标计算一致</td></tr><tr><td>损失</td><td>Label Smoothing</td><td>对标签进行一定程度的平滑</td><td>否</td><td>评估指标较为严格，若以准确率为指标可能会有提升</td></tr><tr><td>损失</td><td>Focal Loss</td><td>调整α参数进行困难样本挖掘，调整γ参数增大正样本权重</td><td>否</td><td>评估指标较为严格，若以准确率为指标可能会有提升</td></tr><tr><td>损失</td><td>Asymmetric Loss</td><td>基于Focal Loss提出的用于多标签分类的非对称损失</td><td>否</td><td>参数调整不佳</td></tr><tr><td>损失</td><td>负样本采样</td><td>各标签正负样本存在严重的类别不平衡问题，希望通过负样本采样来平衡</td><td>否</td><td>验证集上正样本分数提升但负样本分数下降，由于负样本更多导致总体分数下降</td></tr><tr><td>学习策略</td><td>对抗训练</td><td>微调训练过程中使用了FGM对抗学习<a href="#ref"><sup>[17,18]</sup></a>，即对词向量添加一定的扰动生成对抗样本，也可以视作数据增强</td><td>是</td><td>扩增样本集、增强模型鲁棒性</td></tr><tr><td>学习策略</td><td>学习率衰减策略</td><td>如余弦衰减、线性衰减</td><td>线性衰减有效</td><td>因数据集而异</td></tr><tr><td>学习策略</td><td>半监督学习</td><td>利用无标签数据训练，详情见<a href="#%E5%8D%8A%E7%9B%91%E7%9D%A3%E5%AD%A6%E4%B9%A0">半监督学习</a></td><td>初赛阶段提升结果较大，但复赛阶段无效</td><td>未知</td></tr><tr><td>学习策略</td><td>伪标签</td><td>半监督的一种，用训练好的模型在测试上获取标签，标签预测概率较高的样本用作测试集</td><td>否</td><td>受模型性能影响，噪声较大</td></tr><tr><td>其他</td><td>略</td><td>略</td><td>略</td><td>略</td></tr></tbody></table><h1>大赛结果</h1><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig6_res1.png" alt="Fig6_res1"><br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E5%85%A8%E7%90%83%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD%E6%8A%80%E6%9C%AF%E5%88%9B%E6%96%B0%E5%A4%A7%E8%B5%9B%E3%80%90%E8%B5%9B%E9%81%93%E4%B8%80%E3%80%91%EF%BC%9A%E5%8C%BB%E5%AD%A6%E5%BD%B1%E5%83%8F%E6%8A%A5%E5%91%8A%E5%BC%82%E5%B8%B8%E6%A3%80%E6%B5%8B/Fig6_res2.png" alt="Fig6_res2"></p><h1>Top方案</h1><p>   <br>TODO:</p><h1>不足与展望</h1><ol><li>在模型方面，BERT模型的多头注意力机制关注的是全局特征，ConvBERT<a href="#ref"><sup>[15]</sup></a>也提出其中部分头是冗余的，考虑是否能通过修改<code>attention_mask</code>使模型获取到局部的语义信息，这种方式比ConvBERT更简单；</li><li>微调的分类损失函数采用交叉熵，没有尝试其他原理上较为不同的损失函数，如Soft-F1<a href="#ref"><sup>[19]</sup></a>；</li><li>数据增强方面，受Mixup启发，可以将两句输入的词向量和标签加权累加获得扩增样本，有效性待确定；</li><li>大赛要求复赛LB能复现，导致复赛A榜调试时过度关注全流程问题，影响有效调参次数(每日限制提交3次，但实际最多提交2次)，需做好时间安排；</li><li>在实验调参过程中，必须做好消融实验，保存各种日志，另外妥善修改代码确保各版本稳定可复现；</li></ol><h1>参考文献</h1><div id="ref"></div><p>[1] <a href="https://arxiv.org/abs/1905.04899v2">Yun S ,  Han D ,  Oh S J , et al. CutMix: Regularization Strategy to Train Strong Classifiers with Localizable Features[J].  2019.</a><br>[2] <a href="https://arxiv.org/abs/1901.11196">Wei J ,  Zou K . EDA: Easy Data Augmentation Techniques for Boosting Performance on Text Classification Tasks[J].  2019.</a><br>[3] <a href="https://arxiv.org/abs/1810.04805">Devlin J ,  Chang M W ,  Lee K , et al. BERT: Pre-training of Deep Bidirectional Transformers for Language Understanding[J].  2018.</a><br>[4] <a href="http://arxiv.org/abs/1907.11692v1">Liu Y ,  Ott M ,  Goyal N , et al. RoBERTa: A Robustly Optimized BERT Pretraining Approach[J].  2019.</a><br>[5] <a href="https://arxiv.org/abs/1906.08237">Yang Z ,  Dai Z ,  Yang Y , et al. XLNet: Generalized Autoregressive Pretraining for Language Understanding[J].  2019.</a><br>[6] <a href="http://arxiv.org/abs/2005.14165">Brown T B ,  Mann B ,  Ryder N , et al. Language Models are Few-Shot Learners[J].  2020.</a><br>[7] <a href="http://arxiv.org/abs/2002.10957">Wang W ,  Wei F ,  Dong L , et al. MiniLM: Deep Self-Attention Distillation for Task-Agnostic Compression of Pre-Trained Transformers[J].  2020.</a><br>[8] <a href="http://arxiv.org/abs/1905.03197">Dong L ,  Yang N ,  Wang W , et al. Unified Language Model Pre-training for Natural Language Understanding and Generation[J].  2019.</a><br>[9] <a href="http://arxiv.org/abs/2002.12804v1">Bao H ,  Dong L ,  Wei F , et al. UniLMv2: Pseudo-Masked Language Models for Unified Language Model Pre-Training[J].  2020.</a><br>[10] <a href="http://arxiv.org/abs/1905.07129v1">Zhang Z ,  Han X ,  Liu Z , et al. ERNIE: Enhanced Language Representation with Informative Entities[C]// Proceedings of the 57th Annual Meeting of the Association for Computational Linguistics. 2019.</a><br>[11] <a href="http://arxiv.org/abs/1909.00204">Wei J ,  Ren X ,  Li X , et al. NEZHA: Neural Contextualized Representation for Chinese Language Understanding[J].  2019.</a><br>[12] <a href="http://www.researchgate.net/publication/351019664_RoFormer_Enhanced_Transformer_with_Rotary_Position_Embedding">Su J ,  Lu Y ,  Pan S , et al. RoFormer: Enhanced Transformer with Rotary Position Embedding.  2021.</a><br>[13] <a href="http://www.researchgate.net/publication/339887954_SpanBERT_Improving_Pre-training_by_Representing_and_Predicting_Spans/download">Joshi M ,  Chen D ,  Liu Y , et al. SpanBERT: Improving Pre-training by Representing and Predicting Spans[J]. Transactions of the Association for Computational Linguistics, 2020, 8:64-77.</a><br>[14] <a href="https://arxiv.org/abs/1906.08101v2">Cui Y ,  Che W ,  Liu T , et al. Pre-Training with Whole Word Masking for Chinese BERT[J].  2019.</a><br>[15] <a href="http://arxiv.org/abs/2008.02496">Jiang Z ,  Yu W ,  Zhou D , et al. ConvBERT: Improving BERT with Span-based Dynamic Convolution[J].  2020.</a><br>[16] <a href="https://www.kexue.fm/archives/8265">Transformer升级之路：2、博采众长的旋转式位置编码 - 科学空间</a><br>[17] <a href="https://zhuanlan.zhihu.com/p/103593948">一文搞懂NLP中的对抗训练FGSM/FGM/PGD/FreeAT/YOPO/FreeLB/SMART - 知乎</a><br>[18] <a href="https://blog.csdn.net/xixiaoyaoww/article/details/104851198">对抗学习在NLP中的应用 - 夕小瑶/CSDN</a><br>[19] <a href="https://towardsdatascience.com/the-unknown-benefits-of-using-a-soft-f1-loss-in-classification-systems-753902c0105d">The Unknown Benefits of using a Soft-F1 Loss in Classification Systems - towardsdatascience.com/</a><br>[20] <a href="https://spaces.ac.cn/archives/7427">鱼与熊掌兼得：融合检索和生成的SimBERT模型</a></p><h1>附录</h1><h2 id="半监督学习">半监督学习</h2><p>   考虑到伪标签半监督方法存在以下两个问题：1) 严重依赖输出测试集预测的模型的性能；2) 以两阶段的形式进行，同时训练时间较长。本文设计了一种端到端的半监督学习方法。具体地，在训练时训练集数据(有标签)与测试集数据(无标签)同时读取到某个批次中，模型对该批次前向推断计算每个样本每个标签的概率输出。设定阈值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi><mo separator="true">,</mo><mn>0</mn><mo>≤</mo><mi>t</mi><mo>≤</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">t, 0 \leq t \leq 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7719em;vertical-align:-0.136em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，将无标签数据预测结果中大于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6151em;"></span><span class="mord mathnormal">t</span></span></span></span>的作为正样本，小于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>t</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(1 - t)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mclose">)</span></span></span></span>的作为负样本，这些被标记的预测输出与有标签数据同时计算损失。另外，为了减少错误预测带来的噪声影响，这些被标记的无标签样本计算损失时，真实值采用模型输出的概率值，而不是0或1的取值。</p><h2 id="Blending">Blending</h2><p>   设定某组训练参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">p</span></span></span></span>下，进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>折模型训练得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个模型，每个模型对其验证集数据进行推断，得到相应的验证集输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mover accent="true"><mi>y</mi><mo>~</mo></mover><mi>k</mi><mi>p</mi></msubsup></mrow><annotation encoding="application/x-tex">\tilde{y}_{k}^{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0836em;vertical-align:-0.3013em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3987em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span></span></span></span>，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mover accent="true"><mi>y</mi><mo>~</mo></mover><mn>1</mn><mi>p</mi></msubsup><mo separator="true">,</mo><msubsup><mover accent="true"><mi>y</mi><mo>~</mo></mover><mn>2</mn><mi>p</mi></msubsup><mo separator="true">,</mo><msubsup><mover accent="true"><mi>y</mi><mo>~</mo></mover><mn>3</mn><mi>p</mi></msubsup><mo separator="true">,</mo><msubsup><mover accent="true"><mi>y</mi><mo>~</mo></mover><mn>4</mn><mi>p</mi></msubsup><mo separator="true">,</mo><msubsup><mover accent="true"><mi>y</mi><mo>~</mo></mover><mn>5</mn><mi>p</mi></msubsup><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\tilde{y}_{1}^{p}, \tilde{y}_{2}^{p}, \tilde{y}_{3}^{p}, \tilde{y}_{4}^{p}, \tilde{y}_{5}^{p}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0486em;vertical-align:-0.2663em;"></span><span class="mopen">{</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.4337em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span></span></span></span><span style="top:-3.1809em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>合并后得到推断输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mover accent="true"><mi>y</mi><mo>~</mo></mover><mi>p</mi></msup></mrow><annotation encoding="application/x-tex">\tilde{y}^{p}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8623em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span></span></span></span></span>，该输出集可以视作该组参数对训练集的推断结果，由<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>组参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>p</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>p</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>p</mi><mi>M</mi></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{p_1, p_2, \cdots, p_M\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>分别得到的结果计算加权参数。</p><p>   假设共<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个训练集样本，在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>组参数下训练得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>个输出结果，初始化参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>M</mi></msub></mrow><annotation encoding="application/x-tex">w_1, w_2, \cdots, w_M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，设定优化目标为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>J</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mspace width="1em"></mspace></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>M</mi></msub></mrow></munder><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mtext>score</mtext><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mfrac><mn>1</mn><mi>M</mi></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>w</mi><mi>j</mi></msub><msubsup><mover accent="true"><mi>y</mi><mo>~</mo></mover><mi>i</mi><msub><mi>p</mi><mi>j</mi></msub></msubsup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mspace width="1em"></mspace></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></munderover><msub><mi>w</mi><mi>j</mi></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mn>0</mn><mo>≤</mo><msub><mi>w</mi><mi>j</mi></msub><mo>≤</mo><mn>1</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    J(w) \quad &amp; = \min_{w_1, w_2, \cdots, w_M} \frac{1}{N} \sum_{i=1}^N \text{score}(        y_i, \frac{1}{M} \sum_{j=1}^M w_j \tilde{y}_i^{p_j}    ) \\    s.t. \quad &amp; \sum_{j=1}^M w_j = 1 \\         &amp; 0 \leq w_j \leq 1, j = 1, \cdots, M\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.5842em;vertical-align:-4.0421em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5421em;"><span style="top:-6.5421em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mspace" style="margin-right:1em;"></span></span></span><span style="top:-0.4462em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0421em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5421em;"><span style="top:-6.5421em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="minner mtight">⋯</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0269em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8435em;"><span style="top:-2.4231em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2421em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-0.4462em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0421em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>score</mtext><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{score}(\cdot)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span></span></span></span>是评估函数，分数越小表示集成效果越好。</p>]]></content>
      
      
      <categories>
          
          <category> 竞赛相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 竞赛相关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>详解命名实体识别模型：LSTM-CRF</title>
      <link href="/2020/09/16/%E8%AF%A6%E8%A7%A3%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%EF%BC%9ALSTM-CRF.html"/>
      <url>/2020/09/16/%E8%AF%A6%E8%A7%A3%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%EF%BC%9ALSTM-CRF.html</url>
      
        <content type="html"><![CDATA[<h1>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB">命名实体识别</a></li><li><a href="#long-short-term-memory">Long Short-Term Memory</a></li><li><a href="#%E6%9D%A1%E4%BB%B6%E9%9A%8F%E6%9C%BA%E5%9C%BA">条件随机场</a><ul><li><a href="#%E6%A6%82%E7%8E%87%E6%97%A0%E5%90%91%E5%9B%BE%E6%A8%A1%E5%9E%8B">概率无向图模型</a></li><li><a href="#%E6%9D%A1%E4%BB%B6%E9%9A%8F%E6%9C%BA%E5%9C%BA%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E5%BD%A2%E5%BC%8F">条件随机场的定义和形式</a><ul><li><a href="#%E5%AE%9A%E4%B9%89">定义</a></li><li><a href="#%E5%BD%A2%E5%BC%8F">形式</a></li></ul></li><li><a href="#%E6%A6%82%E7%8E%87%E8%AE%A1%E7%AE%97%E5%92%8C%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E9%97%AE%E9%A2%98">概率计算和学习算法问题</a><ul><li><a href="#%E4%B8%8E%E6%9C%80%E5%A4%A7%E7%86%B5%E6%A8%A1%E5%9E%8B%E7%9A%84%E8%81%94%E7%B3%BB">与最大熵模型的联系</a></li><li><a href="#%E6%A6%82%E7%8E%87%E8%AE%A1%E7%AE%97">概率计算</a></li><li><a href="#%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95">学习算法</a></li><li><a href="#%E9%A2%84%E6%B5%8B%E7%AE%97%E6%B3%95%E7%BB%B4%E7%89%B9%E6%AF%94%E7%AE%97%E6%B3%95">预测算法：维特比算法</a></li></ul></li></ul></li><li><a href="#lstm-crf">LSTM-CRF</a></li><li><a href="#reference">Reference</a></li></ul><h1>命名实体识别</h1><p>命名实体识别(Named Entity Recognition)是NLP中一项非常基础的任务，是信息提取、问答系统、句法分析、机器翻译等众多NLP任务的重要基础工具，具体的任务是<strong>从文本中挑选出实体类型</strong>。</p><p>深度学习网络的一般结构是“主体编码模型-解码器”的组合。在自然语言处理领域，主体编码模型选择很多，如卷积神经网络、循环神经网络、Bert等。在命名实体识别任务中使用条件随机场(Conditional Random Filed, CRF)作为解码器，是将命名实体识别任务转换为序列标注问题。</p><p>常用的序列标注主要有<code>BIO</code>和<code>BIOES</code>标注两种：1) <code>BIO</code>将数据标注为<code>B-X, I-X, O</code>格式，其中<code>B</code>表示实体起始位置(Begin)，<code>I</code>表示实体中间(Intermediate)，<code>O</code>表示其他(Other)无关字符；2) <code>BIOES</code>在<code>BIO</code>基础上添加了<code>E</code>表示实体结尾(End)和<code>S</code>表示单个字符(Single)。<a href="https://www.clips.uantwerpen.be/conll2003/">CoNLL2003</a>是常用的NER数据集。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">   BIO   BIOES</span><br><span class="line">--------------</span><br><span class="line">小 B-PER B-PER</span><br><span class="line">明 I-PER E-PER</span><br><span class="line">在 O     O</span><br><span class="line">北 B-ORG B-ORG</span><br><span class="line">京 I-ORG I-ORG</span><br><span class="line">大 I-ORG I-ORG</span><br><span class="line">学 I-ORG E-ORG</span><br><span class="line">的 O     O</span><br><span class="line">燕 B-LOC B-LOC </span><br><span class="line">园 I-LOC E-LOC </span><br><span class="line">看 O     O</span><br><span class="line">了 O     O</span><br><span class="line">中 B-ORG B-ORG</span><br><span class="line">国 I-ORG I-ORG</span><br><span class="line">男 I-ORG I-ORG</span><br><span class="line">篮 I-ORG E-ORG</span><br><span class="line">的 O     O</span><br><span class="line">一 O     O</span><br><span class="line">场 O     O</span><br><span class="line">比 O     O</span><br><span class="line">赛 O     O</span><br></pre></td></tr></table></figure><h1>Long Short-Term Memory</h1><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E8%AF%A6%E8%A7%A3%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%EF%BC%9ALSTM-CRF/lstm.jpg" alt="lstm"></p><p>核心公式(Pytorch)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>i</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mrow><mi>i</mi><mi>i</mi></mrow></msub><mo>+</mo><msub><mi>W</mi><mrow><mi>h</mi><mi>i</mi></mrow></msub><msub><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><msub><mi>b</mi><mrow><mi>h</mi><mi>i</mi></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>f</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>i</mi><mi>f</mi></mrow></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mrow><mi>i</mi><mi>f</mi></mrow></msub><mo>+</mo><msub><mi>W</mi><mrow><mi>h</mi><mi>f</mi></mrow></msub><msub><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><msub><mi>b</mi><mrow><mi>h</mi><mi>f</mi></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>g</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>i</mi><mi>g</mi></mrow></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mrow><mi>i</mi><mi>g</mi></mrow></msub><mo>+</mo><msub><mi>W</mi><mrow><mi>h</mi><mi>g</mi></mrow></msub><msub><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><msub><mi>b</mi><mrow><mi>h</mi><mi>g</mi></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>c</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>f</mi><mi>t</mi></msub><mo>∗</mo><msub><mi>c</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><msub><mi>i</mi><mi>t</mi></msub><mo>∗</mo><msub><mi>g</mi><mi>t</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>o</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>i</mi><mi>o</mi></mrow></msub><msub><mi>x</mi><mi>t</mi></msub><mo>+</mo><msub><mi>b</mi><mrow><mi>i</mi><mi>o</mi></mrow></msub><mo>+</mo><msub><mi>W</mi><mrow><mi>h</mi><mi>o</mi></mrow></msub><msub><mi>h</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msub><mo>+</mo><msub><mi>b</mi><mrow><mi>h</mi><mi>o</mi></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>h</mi><mi>t</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>o</mi><mi>t</mi></msub><mo>∗</mo><mi>tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>c</mi><mi>t</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}     i_t &amp;= \sigma(W_{ii} x_t + b_{ii} + W_{hi} h_{(t-1)} + b_{hi}) \\    f_t &amp;= \sigma(W_{if} x_t + b_{if} + W_{hf} h_{(t-1)} + b_{hf}) \\    g_t &amp;= \tanh(W_{ig} x_t + b_{ig} + W_{hg} h_{(t-1)} + b_{hg}) \\    c_t &amp;= f_t * c_{(t-1)} + i_t * g_t \\    o_t &amp;= \sigma(W_{io} x_t + b_{io} + W_{ho} h_{(t-1)} + b_{ho}) \\    h_t &amp;= o_t * \tanh(c_t)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9em;vertical-align:-4.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-6.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">ii</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">hi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">hi</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-5.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">tanh</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mathnormal mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mord mathnormal mtight">o</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:0.59em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">tanh</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h1>条件随机场</h1><p><strong>条件随机场</strong>(conditional random field, CRF)是指给定一组输入随机变量条件下，输出一组构成马尔科夫随机场的随机变量的条件概率模型。下面依次介绍概率无向图模型、马尔科夫随机场的定义和形式、。</p><h2 id="概率无向图模型">概率无向图模型</h2><p><strong>概率无向图模型</strong>(probabilistic undirected graphical model)，又称<strong>马尔科夫随机场</strong>(Markov random field)，是一个用无向图表示的联合概率分布。给定用概率图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>表示的联合概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>，其中节点集和边集分别表示为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>V</mi></mrow><annotation encoding="application/x-tex">V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>，节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>∈</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">v \in V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>表示随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">Y_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，边<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>e</mi><mo>∈</mo><mi>E</mi></mrow><annotation encoding="application/x-tex">e \in E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">e</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>表示随机变量之间的概率依赖关系，且联合概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>满足<strong>成对马尔科夫性(pairwise Markov property)、局部马尔科夫性(local Markov property)、全局马尔科夫性(global Markov property)<strong>的独立性假设，注意这三种性质是</strong>等价</strong>的。</p><ul><li><strong>成对马尔科夫性</strong>：设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><mo separator="true">,</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">u, v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>是无向图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>中<strong>两个无边连接的节点</strong>，分别对应随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>u</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">Y_u, Y_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，其余节点为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>，对应随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>O</mi></msub></mrow><annotation encoding="application/x-tex">Y_O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，那么给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>O</mi></msub></mrow><annotation encoding="application/x-tex">Y_O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的条件下，随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>u</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>v</mi></msub></mrow><annotation encoding="application/x-tex">Y_u, Y_v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>条件独立，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>u</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>Y</mi><mi>O</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>u</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>Y</mi><mi>O</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>Y</mi><mi>O</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y_u, Y_v | Y_O) = P(Y_u | Y_O) P(Y_v | Y_O)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">u</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>；</li><li><strong>局部马尔科夫性</strong>：设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>是无向图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>中的一个任意节点，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>是<strong>与其有连接的所有节点集合</strong>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span>是除<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo separator="true">,</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">v, W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>外的所有节点集合，那么在给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>W</mi></msub></mrow><annotation encoding="application/x-tex">Y_W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>条件下，随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>v</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>O</mi></msub></mrow><annotation encoding="application/x-tex">Y_v, Y_O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>条件独立，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>v</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>O</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>Y</mi><mi>W</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>Y</mi><mi>W</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>O</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>Y</mi><mi>W</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y_v, Y_O | Y_W) = P(Y_v | Y_W) P(Y_O | Y_W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>；</li><li><strong>全局马尔科夫性</strong>：设<strong>节点集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo separator="true">,</mo><mi>B</mi></mrow><annotation encoding="application/x-tex">A, B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">A</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>是在无向图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>中被节点集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>分开的任意两组节点集合</strong>，那么在给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>C</mi></msub></mrow><annotation encoding="application/x-tex">Y_C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>条件下，随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>A</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">Y_A, Y_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>条件独立，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>A</mi></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>B</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>A</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>B</mi></msub><mi mathvariant="normal">∣</mi><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y_A, Y_B | Y_C) = P(Y_A | Y_C) P(Y_B | Y_C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>；</li></ul><p>概率无向图可进行<strong>因子分解</strong>(factorization)，即将概率无向图模型的联合概率分布表示为其最大团上的随机变量的函数的乘积形式。首先给出<strong>最大团</strong>(maximal clique)的定义，无向图中任意两个节点均有边连接(强连通)的节点子集称为<strong>团</strong>(clique)，最大团是指无向图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>中不能再加进任何一个其他<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi></mrow><annotation encoding="application/x-tex">G</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">G</span></span></span></span>的节点使之成为更大的团。<strong>那么概率无向图的联合概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>可以写作图中所有最大团<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>上的函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mi>C</mi></msub><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Psi_C(Y_C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的乘积形式(Hammersley-Clifford定理)</strong>，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mi>Z</mi></mfrac><munder><mo>∏</mo><mi>C</mi></munder><msub><mi mathvariant="normal">Ψ</mi><mi>C</mi></msub><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>Z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>Y</mi></munder><munder><mo>∏</mo><mi>C</mi></munder><msub><mi mathvariant="normal">Ψ</mi><mi>C</mi></msub><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    P(Y) &amp; = \frac{1}{Z} \prod_C \Psi_C(Y_C) \\     Z &amp; = \sum_Y \prod_C \Psi_C(Y_C)\end{aligned} \tag{1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.5601em;vertical-align:-2.5301em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0301em;"><span style="top:-5.0301em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span><span style="top:-2.3857em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5301em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0301em;"><span style="top:-5.0301em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2943em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.3857em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2943em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2943em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5301em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:5.5601em;vertical-align:-2.5301em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mi>C</mi></msub><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Psi_C(Y_C)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>称为<strong>势函数</strong>(potential function)，要求严格正，一般定义为指数函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mi>C</mi></msub><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">{</mo><mo>−</mo><mi>E</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\Psi_C(Y_C) = \exp\{-E(Y_C)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">{</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span></span></span></span>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Z</mi></mrow><annotation encoding="application/x-tex">Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>为规范化因子，保证<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>构成概率分布。</p><h2 id="条件随机场的定义和形式">条件随机场的定义和形式</h2><h3 id="定义">定义</h3><p><strong>条件随机场</strong> 设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo separator="true">,</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X, Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>是随机变量，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>是在给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>的条件下<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>的条件分布概率，若随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>构成由无向图<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>表示的马尔科夫随机场，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi><mi>X</mi><mo separator="true">,</mo><msub><mi>Y</mi><mi>w</mi></msub><mo separator="true">,</mo><mi>w</mi><mo mathvariant="normal">≠</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>v</mi></msub><mi mathvariant="normal">∣</mi><mi>X</mi><mo separator="true">,</mo><msub><mi>Y</mi><mi>w</mi></msub><mo separator="true">,</mo><mi>w</mi><mo>∼</mo><mi>v</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">P(Y_v | X, Y_w, w \neq v) = P(Y_v | X, Y_w, w \sim v) \tag{2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>对任意节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi><mo>∈</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">v \in V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span></span></span></span>成立，那么称条件概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>为条件随机场，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo>∼</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">w \sim v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>表示在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mo stretchy="false">(</mo><mi>V</mi><mo separator="true">,</mo><mi>E</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G(V, E)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mclose">)</span></span></span></span>中与节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>有边连接的所有节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi></mrow><annotation encoding="application/x-tex">w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mo mathvariant="normal">≠</mo><mi>v</mi></mrow><annotation encoding="application/x-tex">w \neq v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>表示节点<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>v</mi></mrow><annotation encoding="application/x-tex">v</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span>意外的所有节点。</p><blockquote><p>该式用到了局部马尔科夫性。</p></blockquote><p><strong>线性链条件随机场</strong> 设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>X</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X = (X_1, \cdots, X_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>Y</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y = (Y_1, \cdots, Y_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>均为线性链表示的随机变量序列，若在给定随机变量序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>的条件下，随机变量序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>的条件概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>构成条件随机场，即满足马尔科夫性，</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>X</mi><mo separator="true">,</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>Y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>Y</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>Y</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>X</mi><mo separator="true">,</mo><msub><mi>Y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>Y</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">(</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>n</mi><mtext>时只考虑单边</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    P(Y_i | X, Y_1, \cdots, Y_{i - 1}, Y_{i + 1}, \cdots, Y_n) = P(Y_i | X, Y_{i - 1}, Y_{i + 1}) \\    i = 1, 2, \cdots, n(i = 1, n时只考虑单边)\end{aligned} \tag{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">时只考虑单边</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>那么称<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>为线性链条件随机场，本文后面只讨论线性链条件随机场。</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E8%AF%A6%E8%A7%A3%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%EF%BC%9ALSTM-CRF/linear-crf.jpg" alt="linear-crf"></p><h3 id="形式">形式</h3><p><strong>线性链条件随机场的参数化形式</strong> 设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>为线性链条件随机场，那么在随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi></mrow><annotation encoding="application/x-tex">X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span>取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>的条件下，随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>得条件概率具有如下形式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi mathvariant="normal">Ψ</mi><mi>C</mi></msub><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo separator="true">,</mo><mi>k</mi></mrow></munder><msub><mi>λ</mi><mi>k</mi></msub><msub><mi>t</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>+</mo><munder><mo>∑</mo><mrow><mi>i</mi><mi mathvariant="normal">.</mi><mi>l</mi></mrow></munder><msub><mi>μ</mi><mi>l</mi></msub><msub><mi>s</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><msub><mi mathvariant="normal">Ψ</mi><mi>C</mi></msub><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>Y</mi></munder><msub><mi mathvariant="normal">Ψ</mi><mi>C</mi></msub><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>C</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \Psi_C(Y_C) &amp; = \exp \left(        \sum_{i,k} \lambda_k t_k(y_{i-1}, y_i, x, i) +         \sum_{i.l} \mu_l s_l(y_i, x, i)    \right) \\    P(y|x) &amp; = \frac{1}{Z(x)} \Psi_C(Y_C) \\    Z(x) &amp; = \sum_Y \Psi_C(Y_C)\end{aligned} \tag{4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.1018em;vertical-align:-4.3009em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.8009em;"><span style="top:-6.8009em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.6295em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-1.3434em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.3009em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.8009em;"><span style="top:-6.8009em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.25em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎝</span></span></span><span style="top:-3.397em;"><span class="pstrut" style="height:3.155em;"></span><span style="height:0.016em;width:0.875em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="0.016em" style="width:0.875em" viewbox="0 0 875 16" preserveaspectratio="xMinYMin"><path d="M291 0 H417 V16 H291z M291 0 H417 V16 H291z"/></svg></span></span><span style="top:-4.05em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎛</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4382em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mord mtight">.</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.25em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎠</span></span></span><span style="top:-3.397em;"><span class="pstrut" style="height:3.155em;"></span><span style="height:0.016em;width:0.875em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.875em" height="0.016em" style="width:0.875em" viewbox="0 0 875 16" preserveaspectratio="xMinYMin"><path d="M457 0 H583 V16 H457z M457 0 H583 V16 H457z"/></svg></span></span><span style="top:-4.05em;"><span class="pstrut" style="height:3.155em;"></span><span class="delimsizinginner delim-size4"><span>⎞</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.6295em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.3434em;"><span class="pstrut" style="height:4.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8557em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2943em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.3009em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:9.1018em;vertical-align:-4.3009em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">4</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">t_k(y_{i-1}, y_i, x, i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>为定义在边上的特征函数，称<strong>转移特征</strong>，依赖于当前和前一个位置；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_l(y_i, x, i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>为定义在节点上的特征函数，称<strong>状态特征</strong>，依赖于当前位置；</li><li>特征函数都依赖于位置，是局部特征，取值通常在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{0, 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>，条件随机场由参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>μ</mi><mi>l</mi></msub></mrow><annotation encoding="application/x-tex">\lambda_k, \mu_l</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>决定；</li><li>线性链条件随机场也是<strong>对数线性模型</strong>(log linear model)。</li></ul><blockquote><p>这里特征函数可能有疑问，具体说明在<a href="#%E4%B8%8E%E6%9C%80%E5%A4%A7%E7%86%B5%E6%A8%A1%E5%9E%8B%E7%9A%84%E8%81%94%E7%B3%BB">与最大熵模型的联系</a>一节。</p></blockquote><p><strong>例1</strong> 有一标注问题，输入观测序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>X</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>X</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>X</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">X = (X_1, X_2, X_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，输出标记序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mo stretchy="false">(</mo><msub><mi>Y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>Y</mi><mn>2</mn></msub><mo separator="true">,</mo><msub><mi>Y</mi><mn>3</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y = (Y_1, Y_2, Y_3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">Y_i \in \{1, 2\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">}</span></span></span></span>，假设有特征函数及其权值如下，求标记序列为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y = (1, 2, 2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mclose">)</span></span></span></span>的非规范化条件概率。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>t</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>t</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mspace width="1em"><msub><mi>λ</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>t</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>t</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mspace width="1em"><msub><mi>λ</mi><mn>2</mn></msub><mo>=</mo><mn>0.6</mn></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>t</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>t</mi><mn>3</mn></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mo>=</mo><mn>3</mn><mo separator="true">,</mo><mspace width="1em"><msub><mi>λ</mi><mn>3</mn></msub><mo>=</mo><mn>1</mn></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>t</mi><mn>4</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>t</mi><mn>4</mn></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mspace width="1em"><msub><mi>λ</mi><mn>4</mn></msub><mo>=</mo><mn>1</mn></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>t</mi><mn>5</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>t</mi><mn>5</mn></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mo>=</mo><mn>3</mn><mo separator="true">,</mo><mspace width="1em"><msub><mi>λ</mi><mn>5</mn></msub><mo>=</mo><mn>0.2</mn></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>s</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>s</mi><mn>1</mn></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mspace width="1em"><msub><mi>μ</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>s</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>s</mi><mn>2</mn></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mspace width="1em"><msub><mi>μ</mi><mn>2</mn></msub><mo>=</mo><mn>0.5</mn></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>s</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>s</mi><mn>3</mn></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mspace width="1em"><msub><mi>μ</mi><mn>3</mn></msub><mo>=</mo><mn>0.8</mn></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>s</mi><mn>4</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>s</mi><mn>4</mn></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mspace width="1em"><mi>i</mi><mo>=</mo><mn>3</mn><mo separator="true">,</mo><mspace width="1em"><msub><mi>μ</mi><mn>4</mn></msub><mo>=</mo><mn>0.5</mn></mspace></mspace></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    t_1 &amp;= t_1(y_{i-1}=1, y_i=2, x, i), \quad i = 2, 3, \quad \lambda_1 = 1 \\    t_2 &amp;= t_2(y_{i-1}=1, y_i=1, x, i), \quad i = 2, \quad \lambda_2 = 0.6 \\    t_3 &amp;= t_3(y_{i-1}=2, y_i=1, x, i), \quad i = 3, \quad \lambda_3 = 1 \\    t_4 &amp;= t_4(y_{i-1}=2, y_i=1, x, i), \quad i = 2, \quad \lambda_4 = 1 \\    t_5 &amp;= t_5(y_{i-1}=2, y_i=2, x, i), \quad i = 3, \quad \lambda_5 = 0.2 \\    s_1 &amp;= s_1(y_i=1, x, i), \quad i = 1, \quad \mu_1 = 1 \\    s_2 &amp;= s_2(y_i=2, x, i), \quad i = 1, 2, \quad \mu_2 = 0.5 \\    s_3 &amp;= s_3(y_i=1, x, i), \quad i = 2, 3, \quad \mu_3 = 0.8 \\    s_4 &amp;= s_4(y_i=2, x, i), \quad i = 3, \quad \mu_4 = 0.5\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:13.5em;vertical-align:-6.5em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7em;"><span style="top:-9.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:2.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.5em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7em;"><span style="top:-9.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-7.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0.6</span></span></span><span style="top:-6.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0.2</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-0.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0.5</span></span></span><span style="top:1.34em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0.8</span></span></span><span style="top:2.84em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0.5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.5em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>以上看着很乱，整理成图如下，因此</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>y</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo>=</mo><mn>2</mn><mo separator="true">,</mo><msub><mi>y</mi><mn>3</mn></msub><mo>=</mo><mn>2</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>∝</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">[</mo><mo stretchy="false">(</mo><msub><mi>μ</mi><mn>1</mn></msub><mo>+</mo><msub><mi>μ</mi><mn>2</mn></msub><mo>+</mo><msub><mi>μ</mi><mn>3</mn></msub><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><msub><mi>λ</mi><mn>1</mn></msub><mo>+</mo><msub><mi>λ</mi><mn>5</mn></msub><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>3.2</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(y_1=1, y_2=2, y_3=2 | x) \propto \exp\left[ (\mu_1 + \mu_2 + \mu_3) + (\lambda_1 + \lambda_5) \right] = \exp(3.2) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∝</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">[</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">]</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">3.2</span><span class="mclose">)</span></span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E8%AF%A6%E8%A7%A3%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%EF%BC%9ALSTM-CRF/linear-crf-param.jpg" alt="linear-crf-param"></p><hr><p><strong>线性链条件随机场的简化形式</strong> 将同一特征在各个位置求和，即将局部特征函数转化为全局特征函数，可以表示为简化形式。设有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>t</mi></msub></mrow><annotation encoding="application/x-tex">K_t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个转移特征、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>K</mi><mi>s</mi></msub></mrow><annotation encoding="application/x-tex">K_s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个状态特征，记统一化的特征函数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>t</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>K</mi><mi>t</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>s</mi><mi>l</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>k</mi><mo>=</mo><msub><mi>K</mi><mi>t</mi></msub><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>K</mi><mi>t</mi></msub><mo>+</mo><msub><mi>K</mi><mi>s</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(5)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_k(y_{i - 1}, y_i, x, i) = \begin{cases}    t_k(y_{i - 1}, y_i, x, i) &amp; k = 1, \cdots, K_t \\    s_l(y_i, x, i) &amp; k = K_t + 1, \cdots, K_t + K_s \\\end{cases} \tag{5}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">5</span></span><span class="mord">)</span></span></span></span></span></span></p><p>那么对于特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>，其全局化特征为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>f</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>f</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>K</mi><mi>t</mi></msub><mo>+</mo><msub><mi>K</mi><mi>s</mi></msub></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(6)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f_k(y, x) = \sum_{i=1}^n f_k(y_{i - 1}, y_i, x, i), k = 1, \cdots,  K_t + K_s \tag{6} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:2.9291em;vertical-align:-1.2777em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">6</span></span><span class="mord">)</span></span></span></span></span></span></p><p>记其对应特征</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>w</mi><mi>k</mi></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>λ</mi><mi>k</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>K</mi><mi>t</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>μ</mi><mi>l</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>k</mi><mo>=</mo><msub><mi>K</mi><mi>t</mi></msub><mo>+</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>K</mi><mi>t</mi></msub><mo>+</mo><msub><mi>K</mi><mi>s</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(7)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">w_k = \begin{cases}    \lambda_k &amp; k = 1, \cdots, K_t \\    \mu_l &amp; k = K_t + 1, \cdots, K_t + K_s \\\end{cases} \tag{7}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5806em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">t</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">7</span></span><span class="mord">)</span></span></span></span></span></span></p><p>那么(可写作内积形式，略)</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mi>exp</mi><mo>⁡</mo><munder><mo>∑</mo><mi>k</mi></munder><msub><mi>w</mi><mi>k</mi></msub><msub><mi>f</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><munder><mo>∑</mo><mi>k</mi></munder><msub><mi>w</mi><mi>k</mi></msub><msub><mi>f</mi><mi>k</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(8)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    P(y | x) &amp;= \frac{1}{Z(x)} \exp \sum_k w_k f_k(y, x) \\    Z(x) &amp;= \sum_y \exp \sum_k w_k f_k(y, x)\end{aligned} \tag{8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.6597em;vertical-align:-2.5798em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0798em;"><span style="top:-5.0798em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-2.4277em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5798em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0798em;"><span style="top:-5.0798em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-2.4277em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5798em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:5.6597em;vertical-align:-2.5798em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">8</span></span><span class="mord">)</span></span></span></span></span></span></p><hr><p><strong>线性链条件随机场的矩阵形式</strong> 标记起点和终点状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>0</mn></msub><mo>=</mo><mtext>start</mtext><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo>=</mo><mtext>end</mtext></mrow><annotation encoding="application/x-tex">y_0 = \text{start}, y_{n+1} = \text{end}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8234em;vertical-align:-0.2083em;"></span><span class="mord text"><span class="mord">start</span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord text"><span class="mord">end</span></span></span></span></span>，对观测序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>每个位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i = 1, \cdots, n + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>，定义<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>阶矩阵(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>取值的状态个数)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">M_i = \begin{bmatrix} M_i(y_{i-1}, y_i | x) \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2em;vertical-align:-0.35em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><msub><mo>∑</mo><mi>k</mi></msub><msub><mi>w</mi><mi>k</mi></msub><msub><mi>f</mi><mi>k</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo separator="true">,</mo><mi>i</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">M_i(y_{i-1}, y_i | x) = \exp \sum_k w_k f_k(y_{i - 1}, y_i, x, i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0497em;vertical-align:-0.2997em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1864em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mclose">)</span></span></span></span>为全局特征函数。那么给定观测序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>和相应标记序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，条件概率为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></munderover><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>y</mi></munder><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></munderover><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⋯</mo><msub><mi>M</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mrow><mtext>start</mtext><mo separator="true">,</mo><mtext>stop</mtext></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo stretchy="false">(</mo><mtext>表示矩阵的第start行、第stop列元素</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(9)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    P_w(y | x) &amp; = \frac{1}{Z_w(x)} \prod_{i=1}^{n + 1} M_i(y_{i-1}, y_i | x) \\    Z_w(x) &amp;= \sum_y \prod_{i=1}^{n + 1} M_i(y_{i-1}, y_i | x) \\    &amp; = \begin{bmatrix}        M_1(x) \cdots M_{n+1}(x)    \end{bmatrix}_{\text{start}, \text{stop}} \\     &amp; (表示矩阵的第\text{start}行、第\text{stop}列元素)\end{aligned} \tag{9}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:10.0518em;vertical-align:-4.7759em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.2759em;"><span style="top:-7.2759em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.8971em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-1.361em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"></span></span><span style="top:0.3148em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.7759em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.2759em;"><span style="top:-7.2759em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.8971em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8011em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-1.361em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0308em;"><span style="top:-2.3003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">start</span></span><span class="mpunct mtight">,</span><span class="mord text mtight"><span class="mord mtight">stop</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5358em;"><span></span></span></span></span></span></span></span></span><span style="top:0.3148em;"><span class="pstrut" style="height:3.8011em;"></span><span class="mord"><span class="mord"></span><span class="mopen">(</span><span class="mord cjk_fallback">表示矩阵的第</span><span class="mord text"><span class="mord">start</span></span><span class="mord cjk_fallback">行、第</span><span class="mord text"><span class="mord">stop</span></span><span class="mord cjk_fallback">列元素</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.7759em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:10.0518em;vertical-align:-4.7759em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">9</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∑</mo><mi>y</mi></msub></mrow><annotation encoding="application/x-tex">\sum_y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1858em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0017em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span></span></span></span>表示<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>=</mo><mo stretchy="false">{</mo><msub><mi>y</mi><mtext>start</mtext></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>y</mi><mi>n</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mtext>end</mtext></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">y=\{y_{\text{start}}, y_1, \cdots, y_n, y_{\text{end}}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2806em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">start</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">end</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span>的所有组合累计求和。</p><h2 id="概率计算和学习算法问题">概率计算和学习算法问题</h2><h3 id="与最大熵模型的联系">与最大熵模型的联系</h3><p>最大熵原理是概率模型学习的一个准则，<strong>认为在所有可能的概率模型(分布)中，熵最大的模型是最好的模型</strong>。用约束条件来确定概率模型的集合，因此最大熵原理也即在满足约束条件下的模型集合中，选择熵最大的模型。假定分类模型是条件概率<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo separator="true">,</mo><mi>Y</mi></mrow><annotation encoding="application/x-tex">X, Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>分表表示输入输出，目标是在给定训练数据集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>N</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>N</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">T = \{(x_1, y_1), \cdots, (x_N, y_N)\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)}</span></span></span></span>下，用最大熵模型选择最好的分类模型。</p><p><strong>最大熵模型</strong> 假设满足所有约束条件的模型集合为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi><mo>=</mo><mo stretchy="false">{</mo><mi>P</mi><mo>∈</mo><mi mathvariant="double-struck">P</mi><mi mathvariant="normal">∣</mi><msub><mi>E</mi><mover accent="true"><mi>P</mi><mo>~</mo></mover></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>E</mi><mi>P</mi></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">C = \{ P \in \mathbb{P} | E_{\tilde{P}}(f_i) = E_{P}(f_i), i = 1, \cdots, n \}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0493em;vertical-align:-0.2993em;"></span><span class="mord mathbb">P</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4007em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2993em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mclose">}</span></span></span></span>，定义在条件概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>是的条件熵为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(P) = - \sum_{x, y} \tilde{P}(x) P(y | x) \log P(y | x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.356em;vertical-align:-0.4358em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0017em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>中条件熵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">H(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span>最大的模型称最大熵模型。用<strong>特征函数</strong>(feature function)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>描述输入<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>和输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>之间的某个事实，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mtext>满足某一事实</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>否则</mtext></mstyle></mtd></mtr></mtable></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(10)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">f(x, y) = \begin{cases} 1 &amp; x, y满足某一事实 \\ 0 &amp; 否则 \end{cases} \tag{10} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">满足某一事实</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">否则</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">10</span></span><span class="mord">)</span></span></span></span></span></span></p><p>那么特征函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>关于经验分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>X</mi><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{P}(X, Y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1702em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span>的期望<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mover accent="true"><mi>P</mi><mo>~</mo></mover></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_{\tilde{P}}(f) = \sum_{x, y} \tilde{P}(x, y) f(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0493em;vertical-align:-0.2993em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4007em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2993em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.356em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0017em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，特征函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>关于模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>与经验分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{P}(X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1702em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>的期望<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>P</mi></msub><mo stretchy="false">(</mo><mi>f</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_{P}(f) = \sum_{x, y} \tilde{P}(x) P(y|x) f(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.356em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0017em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>。假定模型能学习数据信息，使得以上两个期望相等，那么有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></msub><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_{x, y} \tilde{P}(x, y) f(x, y) = \sum_{x, y} \tilde{P}(x) P(y|x) f(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.356em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0017em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.356em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0017em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，该式即模型学习的在特征条件<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">f(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>下的约束条件，那么有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>个特征函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">f_i(x, y), i = 1, \cdots, n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span>时就有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>个约束条件。因此优化目标表述为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mrow><mi>P</mi><mo>∈</mo><mi>C</mi></mrow></munder></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"><msub><mi>E</mi><mi>P</mi></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>E</mi><mover accent="true"><mi>P</mi><mo>~</mo></mover></msub><mo stretchy="false">(</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>n</mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><munder><mo>∑</mo><mi>y</mi></munder><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(11)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \max_{P \in C} &amp; \quad H(P) = - \sum_{x, y} \tilde{P}(x) P(y | x) \log P(y | x) \\    s.t. &amp; \quad E_{P}(f_i) = E_{\tilde{P}}(f_i), i = 1, \cdots, n \\    &amp; \sum_y P(y|x) = 1\end{aligned} \tag{11}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.9722em;vertical-align:-3.2361em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7361em;"><span style="top:-5.7361em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7717em;"><span></span></span></span></span></span></span></span><span style="top:-3.21em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2361em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7361em;"><span style="top:-5.7361em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.21em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4007em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2993em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span><span style="top:-1.5em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2361em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:6.9722em;vertical-align:-3.2361em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">11</span></span><span class="mord">)</span></span></span></span></span></span></p><p>该优化问题可以作为<strong>带约束的最优化问题</strong>进行求解，引入拉格朗日乘子<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>w</mi><mn>1</mn></msub><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">w_0, w_1, \cdots, w_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，定义拉格朗日函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(P, w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><munder><mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow></munder><mo>+</mo><munder><munder><mrow><msub><mi>w</mi><mn>0</mn></msub><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><mo stretchy="true">⏟</mo></munder><mn>0</mn></munder></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(12.1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    L(P, w) &amp;= \underbrace{\sum_{x, y} \tilde{P}(x) P(y | x) \log P(y | x)}_{-H(P)} + \underbrace{w_0 \left( 1 - \sum_y P(y|x) \right)}_0 \\    &amp; + \sum_{i=1}^n w_i \left( \sum_{x, y} \tilde{P}(x, y) f_i(x, y) - \sum_{x, y} \tilde{P}(x) P(y|x) f_i(x, y) \right)\end{aligned} \tag{12.1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.4202em;vertical-align:-3.9601em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.4601em;"><span style="top:-6.4601em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span><span style="top:-1.476em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9601em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.4601em;"><span style="top:-6.4601em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-0.2909em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span class="svg-align" style="top:-1.0159em;"><span class="pstrut" style="height:3.05em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0341em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9341em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-1.0648em;"><span class="pstrut" style="height:3.75em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span class="svg-align" style="top:-1.7159em;"><span class="pstrut" style="height:3.75em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0341em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6852em;"><span></span></span></span></span></span></span></span><span style="top:-1.476em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.9601em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:8.4202em;vertical-align:-3.9601em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">12.1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>那么优化问题及其对偶问题为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>P</mi></munder><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>w</mi></munder><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo><mo>⇒</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>w</mi></munder><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>P</mi></munder><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(12.2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\min_P \max_w L(P, w) \Rightarrow \max_w \min_P L(P, w) \tag{12.2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4943em;vertical-align:-0.7443em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7443em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.4943em;vertical-align:-0.7443em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3557em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7443em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.4943em;vertical-align:-0.7443em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">12.2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L(P, w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(y|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>的偏导数是</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>−</mo><munder><munder><mrow><munder><mo>∑</mo><mi>y</mi></munder><msub><mi>w</mi><mn>0</mn></msub></mrow><mo stretchy="true">⏟</mo></munder><mrow><mo>=</mo><munder><mo>∑</mo><mi>x</mi></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><munder><mo>∑</mo><mi>y</mi></munder><msub><mi>w</mi><mn>0</mn></msub></mrow></munder><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mrow><mo fence="true">(</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo>−</mo><msub><mi>w</mi><mn>0</mn></msub><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(12.3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \frac{\partial L(P, w)}{\partial P(y|x)} &amp; =     \sum_{x, y} \tilde{P}(x) (\log(P(y|x) + 1)) - \underbrace{\sum_y w_0}_{=\sum_x \tilde{P}(x) \sum_y w_0} - \sum_{i=1}^n w_i \sum_{x, y} \tilde{P}(x) f_i(x, y) \\    &amp; = \sum_{x, y} \tilde{P}(x) \left( \log(P(y|x) + 1 - w_0 - \sum_{i=1}^n w_i f_i(x, y) \right)\end{aligned} \tag{12.3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.588em;vertical-align:-4.044em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.544em;"><span style="top:-6.6426em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.3921em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.044em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.544em;"><span style="top:-6.6426em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mopen">(</span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-0.1718em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">=</span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0139em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0139em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span class="svg-align" style="top:-1.0159em;"><span class="pstrut" style="height:3.05em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0341em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2005em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-1.3921em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.044em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:8.588em;vertical-align:-4.044em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">12.3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><mrow><mi mathvariant="normal">∂</mi><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">\frac{\partial L(P, w)}{\partial P(y|x)} = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.53em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mord mtight">∣</span><span class="mord mathnormal mtight">x</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">L</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>，有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>w</mi><mn>0</mn></msub><mo>−</mo><mn>1</mn><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>w</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(12.4)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">P(y|x) = \exp \left( \sum_{i=1}^n w_i f_i(x, y) + w_0 - 1 \right) = \frac{\exp \left( \sum_{i=1}^n w_i f_i(x, y) \right) }{\exp(1 - w_0)} \tag{12.4}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.0277em;vertical-align:-1.2777em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.43em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.494em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:3.0277em;vertical-align:-1.2777em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">12.4</span></span><span class="mord">)</span></span></span></span></span></span></p><p>令<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∑</mo><mi>y</mi></msub><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\sum_y P(y|x) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1858em;vertical-align:-0.4358em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0017em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mrow><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(12)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    P_w (y | x) &amp;= \frac{1}{Z_w(x)} \exp \left( \sum_{i=1}^n w_i f_i(x, y) \right) \\    Z_w(x) &amp;= \sum_y \exp \left( \sum_{i=1}^n w_i f_i(x, y) \right)\end{aligned} \tag{12}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.7638em;vertical-align:-3.1319em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6319em;"><span style="top:-5.6319em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-2.3042em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1319em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6319em;"><span style="top:-5.6319em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span><span style="top:-2.3042em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1319em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:6.7638em;vertical-align:-3.1319em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">12</span></span><span class="mord">)</span></span></span></span></span></span></p><hr><p>可以看到上述模型与条件随机场有相同的形式，所以条件随机场可以理解为<strong>满足输出随机变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi></mrow><annotation encoding="application/x-tex">Y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span>构成马尔科夫随机场(无向概率图)约束条件下的最大熵模型</strong>，为对数线性模型。继续，将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P_w(y|x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>代回<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>w</mi></msub><msub><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>P</mi></msub><mi>L</mi><mo stretchy="false">(</mo><mi>P</mi><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\max_w \min_P L(P, w)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">max</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop">min</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span></span>，有优化目标</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>w</mi><mo>∗</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>w</mi></munder><mi>L</mi><mo stretchy="false">(</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>w</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mrow><mo fence="true">(</mo><mi>log</mi><mo>⁡</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(13.1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    w^* &amp; = \arg \max_w L(P_w(y|x), w) \\    &amp; = \sum_{x, y} \tilde{P}(x) P_w(y|x) \log P_w(y|x) + \sum_{i=1}^n w_i \left( \sum_{x, y} \tilde{P}(x, y) f_i(x, y) - \sum_{x, y} \tilde{P}(x) P_w(y|x) f_i(x, y) \right) \\    &amp; = \sum_{x, y} \tilde{P}(x, y) \sum_{i=1}^n w_i f_i(x, y) + \sum_{x, y} \tilde{P}(x) P_w(y|x) \left( \log P_w(y|x) - \sum_{i=1}^n w_i f_i(x, y) \right)\end{aligned} \tag{13.1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.7122em;vertical-align:-4.1061em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.6061em;"><span style="top:-7.5161em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span><span style="top:-4.7661em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span><span style="top:-1.33em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.1061em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.6061em;"><span style="top:-7.5161em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span><span style="top:-4.7661em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span><span style="top:-1.33em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.1061em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:8.7122em;vertical-align:-4.1061em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">13.1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mrow><mo fence="true">(</mo><mi>log</mi><mo>⁡</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>−</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mrow><mo fence="true">(</mo><mi>log</mi><mo>⁡</mo><mfrac><menclose notation="updiagonalstrike"><mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></menclose><mrow><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac><mo>−</mo><menclose notation="updiagonalstrike"><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></menclose><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>−</mo><munder><mo>∑</mo><mi>x</mi></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(13.2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    &amp; \sum_{x, y} \tilde{P}(x) P_w(y|x) \left( \log P_w(y|x) - \sum_{i=1}^n w_i f_i(x, y) \right) \\    = &amp; \sum_{x, y} \tilde{P}(x) P_w(y|x) \left( \log \frac{\cancel{\exp \left( \sum_{i=1}^n w_i f_i(x, y) \right)}}{Z_w(x)} - \cancel{\sum_{i=1}^n w_i f_i(x, y)} \right) \\    = &amp; - \sum_{x, y} \tilde{P}(x) P_w(y|x) \log \sum_y \exp \left( \sum_{i=1}^n w_i f_i(x, y) \right) \\    = &amp; - \sum_{x} \tilde{P}(x) \log \sum_y \exp \left( \sum_{i=1}^n w_i f_i(x, y) \right)\end{aligned} \tag{13.2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:13.7445em;vertical-align:-6.6222em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.1222em;"><span style="top:-9.1222em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span><span style="top:-5.6861em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:1.1861em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.6222em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.1222em;"><span style="top:-9.1222em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span><span style="top:-5.6861em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.494em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cancel-lap"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-3.104em;"><span class="pstrut" style="height:3.104em;"></span><span class="mord cancel-pad"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span class="svg-align" style="top:-2.8043em;"><span class="pstrut" style="height:3.104em;"></span><span style="height:1.104em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.104em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord cancel-lap"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-4.9291em;"><span class="pstrut" style="height:4.9291em;"></span><span class="mord cancel-pad"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span class="svg-align" style="top:-3.6514em;"><span class="pstrut" style="height:4.9291em;"></span><span style="height:2.9291em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="2.9291em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span><span style="top:1.1861em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.6222em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:13.7445em;vertical-align:-6.6222em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">13.2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>综上</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msup><mi>w</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>w</mi></munder><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><munder><mo>∑</mo><mi>x</mi></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(13)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">w^* = \arg \max_w \left( \sum_{x, y} \tilde{P}(x, y) \sum_{i=1}^n w_i f_i(x, y) - \sum_{x} \tilde{P}(x) \log \sum_y \exp \left( \sum_{i=1}^n w_i f_i(x, y) \right) \right) \tag{13}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7387em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1361em;vertical-align:-1.3861em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span><span class="tag"><span class="strut" style="height:3.1361em;vertical-align:-1.3861em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">13</span></span><span class="mord">)</span></span></span></span></span></span></p><hr><p>注意上述方式求解等价于<strong>最大熵模型的极大似然估计</strong>求解，已知经验概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\tilde{P}(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1702em;vertical-align:-0.25em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>，那么条件概率分布<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>的对数似然函数为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>L</mi><mover accent="true"><mi>P</mi><mo>~</mo></mover></msub><mo stretchy="false">(</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>log</mi><mo>⁡</mo><munder><mo>∏</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><msup><mo stretchy="false">)</mo><mrow><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(14.1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">L_{\tilde{P}}(P_w) = \log \prod_{x, y} P(y|x)^{\tilde{P}(x, y)} = \sum_{x, y} \tilde{P}(x, y) \log P(y|x) \tag{14.1} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0493em;vertical-align:-0.2993em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4007em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2993em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4432em;vertical-align:-1.3861em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0571em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4361em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:2.4432em;vertical-align:-1.3861em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">14.1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>12</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(12)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">12</span><span class="mclose">)</span></span></span></span>代入，得到和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>13</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(13)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">13</span><span class="mclose">)</span></span></span></span>相同的形式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>L</mi><mover accent="true"><mi>P</mi><mo>~</mo></mover></msub><mo stretchy="false">(</mo><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><munder><mo>∑</mo><mi>x</mi></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(14.2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    L_{\tilde{P}}(P_w) &amp; = \sum_{x, y} \tilde{P}(x, y) \sum_{i=1}^n w_i f_i(x, y) - \sum_{x, y} \tilde{P}(x, y) \log Z_w(x) \\    &amp; = \sum_{x, y} \tilde{P}(x, y) \sum_{i=1}^n w_i f_i(x, y) - \sum_{x} \tilde{P}(x) \log \sum_y \exp \left( \sum_{i=1}^n w_i f_i(x, y) \right)\end{aligned} \tag{14.2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.7736em;vertical-align:-3.1368em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6368em;"><span style="top:-5.7354em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4007em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord accent mtight"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span></span><span style="top:-3.3023em;"><span class="pstrut" style="height:2.7em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord mtight">~</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2993em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.2993em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1368em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6368em;"><span style="top:-5.7354em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-2.2993em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1368em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:6.7736em;vertical-align:-3.1368em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">14.2</span></span><span class="mord">)</span></span></span></span></span></span></p><hr><blockquote><p>考虑条件随机场和逻辑斯蒂回归的联系：逻辑斯蒂回归可以看作无约束的最大熵模型，且特征函数表示是否考虑输入样本的各维特征，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mi>i</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>y</mi><mtext>与</mtext><mi>x</mi><mtext>相关联</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>否则</mtext></mstyle></mtd></mtr></mtable></mrow><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn></mrow><annotation encoding="application/x-tex">f_i(x, y) = \begin{cases} x_i &amp; y与x相关联 \\ 0 &amp; 否则\end{cases}, i = 1, 2 </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord cjk_fallback">与</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">相关联</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">否则</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8389em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span></span></span></span></span></p><p>那么有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>w</mi><mi>i</mi></msub><mo>×</mo><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>w</mi><mi>i</mi></msub><mo>×</mo><mn>0</mn><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">Z_w(x) = \exp(\sum_i w_i \times f_i(x, y)) + \exp(\sum_i w_i \times 0) = \exp\sum_i w_i x_i + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3277em;vertical-align:-1.2777em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">))</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.3277em;vertical-align:-1.2777em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3277em;vertical-align:-1.2777em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span></span></p><p>也就有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mo>=</mo><mn>1</mn><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub></mrow><mrow><mi>exp</mi><mo>⁡</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo>+</mo><mn>1</mn></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">P(y=1|x) = \frac{\exp\sum_i w_i x_i}{\exp\sum_i w_i x_i + 1} = \frac{1}{1 + \exp (- \sum_i w_i x_i)} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4254em;vertical-align:-0.9857em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4397em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9857em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3072em;vertical-align:-0.9857em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9857em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>同样地，多分类中最小化交叉熵，也即无约束的最大熵模型，优化目标等价为最大化多分类的对数似然函数。</p></blockquote><h3 id="概率计算">概率计算</h3><p>定义<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>维<strong>前向概率</strong>向量</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>α</mi><mn>0</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mn>1</mn><msub><mi>y</mi><mn>0</mn></msub></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>α</mi><mi>i</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mi>α</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>i</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(15.1.1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \alpha_0(x) &amp;= \begin{bmatrix} 0 &amp; \cdots &amp; 1_{y_0} &amp; \cdots &amp; 0 \end{bmatrix}^T \\    \alpha_i^T(x) &amp;= \alpha_{i - 1}^T(x) M_i(x) \\    i &amp;= 1, \cdots, n + 1\end{aligned} \tag{15.1.1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.7926em;vertical-align:-2.1463em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6463em;"><span style="top:-4.6463em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.0949em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-1.5949em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1463em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6463em;"><span style="top:-4.6463em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0812em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span><span style="top:-3.0949em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-1.5949em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1463em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:4.7926em;vertical-align:-2.1463em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">15.1.1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>α</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(15.1.2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\alpha_i(y_i | x) = \alpha_{i-1}(y_{i-1} | x) M_i(y_{i-1}, y_i, x) \tag{15.1.2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">15.1.2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>定义<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>维<strong>后向概率</strong>向量</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>β</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mn>1</mn><msub><mi>y</mi><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></msub></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>β</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>M</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>β</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>i</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>n</mi></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(15.2.1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \beta_{n+1}(x) &amp;= \begin{bmatrix} 0 &amp; \cdots &amp; 1_{y_{n+1}} &amp; \cdots &amp; 0 \end{bmatrix}^T \\    \beta_i(x) &amp;= M_{i+1}(x) \beta_{i+1}(x) \\    i &amp;= 0, \cdots, n\end{aligned} \tag{15.2.1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.7412em;vertical-align:-2.1206em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6206em;"><span style="top:-4.6206em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.1206em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-1.6206em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord mathnormal">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1206em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6206em;"><span style="top:-4.6206em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2918em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0812em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span><span style="top:-3.1206em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-1.6206em;"><span class="pstrut" style="height:3.0812em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1206em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:4.7412em;vertical-align:-2.1206em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">15.2.1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>β</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><msub><mi>β</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(15.2.2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\beta_i(y_i | x) = M_i(y_i, y_{i+1}, x) \beta_{i+1}(y_{i+1} | x) \tag{15.2.2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">15.2.2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>α</mi><mi>n</mi><mi>T</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi mathvariant="bold">1</mi><mo>=</mo><msup><mi mathvariant="bold">1</mi><mi>T</mi></msup><mo>⋅</mo><msub><mi>β</mi><mn>1</mn></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(15.3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">Z(x) = \alpha_n^T(x) \cdot \bm{1} = \bm{1}^T \cdot \beta_1(x) \tag{15.3} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8913em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">1</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:1.1413em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">15.3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>那么<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\alpha_i(y_i | x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>是在位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>处标记是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>且到位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的前部分标记序列的非规范化概率，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\beta_i(y_i | x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>是在位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>的标记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">y_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>并且从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">i + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7429em;vertical-align:-0.0833em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>的后部分标记序列的非规范化概率，有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msub><mi>α</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><msub><mi>β</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mo stretchy="false">(</mo><msub><mi>Y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>Y</mi><mi>i</mi></msub><mo>=</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><msub><mi>α</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><msub><mi>M</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><msub><mi>β</mi><mi>i</mi></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow><mrow><mi>Z</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(15)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    P(Y_i = y_i | x) &amp;= \frac{\alpha_i(y_i | x) \beta_i(y_i | x)}{Z(x)} \\    P(Y_{i-1} = y_{i-1}, Y_i = y_i | x) &amp;= \frac{\alpha_{i-1}(y_{i-1} | x) M_i(y_{i-1}, y_i | x) \beta_i(y_i | x)}{Z(x)}\end{aligned} \tag{15}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.326em;vertical-align:-2.413em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.913em;"><span style="top:-4.913em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.413em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.913em;"><span style="top:-4.913em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.413em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:5.326em;vertical-align:-2.413em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">15</span></span><span class="mord">)</span></span></span></span></span></span></p><h3 id="学习算法">学习算法</h3><p>这里仅介绍梯度下降法，可以与LSTM进行联合调优。对于条件随机场模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>8</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(8)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">8</span><span class="mclose">)</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow><mrow><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mfrac></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(8)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">P_w(y|x) = \frac{\exp \left( \sum_{i=1}^n w_i f_i(x, y) \right)}{\sum_y \exp \left( \sum_{i=1}^n w_i f_i(x, y) \right)} \tag{8}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6241em;vertical-align:-1.1301em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.494em;"><span style="top:-2.3057em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.0017em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6897em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1301em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span><span class="tag"><span class="strut" style="height:2.6241em;vertical-align:-1.1301em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">8</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其优化目标函数经过对偶问题求解后转换为无约束优化目标<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>13</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(13)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">13</span><span class="mclose">)</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><msup><mi>w</mi><mo>∗</mo></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mi>w</mi></munder><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mi>x</mi></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(13)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">w^* = \arg \min_w \left( \sum_{x} \tilde{P}(x) \log \sum_y \exp \left( \sum_{i=1}^n w_i f_i(x, y) \right) - \sum_{x, y} \tilde{P}(x, y) \sum_{i=1}^n w_i f_i(x, y) \right) \tag{13}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7387em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1361em;vertical-align:-1.3861em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span><span class="tag"><span class="strut" style="height:3.1361em;vertical-align:-1.3861em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">13</span></span><span class="mord">)</span></span></span></span></span></span></p><p>记损失函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>x</mi></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mo>−</mo><munder><mo>∑</mo><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow></munder><mover accent="true"><mi>P</mi><mo>~</mo></mover><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><msub><mi>f</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(16)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">L(w) = \sum_{x} \tilde{P}(x) \log \sum_y \exp \left( \sum_{i=1}^n w_i f_i(x, y) \right) - \sum_{x, y} \tilde{P}(x, y) \sum_{i=1}^n w_i f_i(x, y) \tag{16} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1361em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:3.0375em;vertical-align:-1.3861em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3861em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.1076em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:3.1361em;vertical-align:-1.3861em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">16</span></span><span class="mord">)</span></span></span></span></span></span></p><p>相应的梯度计算略，可以用Pytorch等自动求导包计算。</p><h3 id="预测算法：维特比算法">预测算法：维特比算法</h3><p>给定条件随机场<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(Y|X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span>和输入序列(观测序列)<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>，求条件概率最大的输出序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">y^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8831em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>，求满足约束条件下的非规范化概率最大的最优路径问题，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mi>y</mi><mo>∗</mo></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>y</mi></munder><msub><mi>P</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>y</mi></munder><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><msub><mi>Z</mi><mi>w</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>y</mi></munder><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>w</mi><mo>⋅</mo><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>y</mi></munder><mi>w</mi><mo>⋅</mo><mi>F</mi><mo stretchy="false">(</mo><mi>y</mi><mo separator="true">,</mo><mi>x</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mtd><mtd width="50%"></mtd><mtd><mtext>(17)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    y^* &amp;= \arg \max_y P_w(y | x) \\    &amp;= \arg \max_y \frac{\exp(w \cdot F(y, x))}{Z_w(x)} \\    &amp;= \arg \max_y \exp(w \cdot F(y, x)) \\    &amp;= \arg \max_y w \cdot F(y, x)\end{aligned} \tag{17}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.5913em;vertical-align:-4.0457em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5457em;"><span style="top:-7.1327em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span><span style="top:-4.5696em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span><span style="top:-2.4936em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span><span style="top:-0.5174em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0457em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5457em;"><span style="top:-7.1327em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-4.5696em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4936em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">))</span></span></span><span style="top:-0.5174em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0457em;"><span></span></span></span></span></span></span></span></span><span class="tag"><span class="strut" style="height:8.5913em;vertical-align:-4.0457em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">17</span></span><span class="mord">)</span></span></span></span></span></span></p><blockquote><p>Viterbi(维特比)算法在CRF(条件随机场)中是如何起作用的？ - 程序员一一涤生的文章 - 知乎<br><a href="https://zhuanlan.zhihu.com/p/94458082">https://zhuanlan.zhihu.com/p/94458082</a></p></blockquote><h1><a href="https://arxiv.org/abs/1508.01991">LSTM-CRF</a></h1><p>整个BI-LSTM-CRF模型主要分为：1) 词嵌入(embedding)层；2) 双向LSTM特征提取层，以及之后的线性分类曾；3) 捕获标签间关系的条件随机场层。下面讲解说明各层的作用及计算方法。当然还有一些细节性的问题，如dropout的设置等，这里不过多展开。</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E8%AF%A6%E8%A7%A3%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%EF%BC%9ALSTM-CRF/bi-lstm-crf.png" alt="bi-lstm-crf"></p><p>以最简单的方式处理文本(如不考虑停用词)后，输入的每个字对应一个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>维度嵌入向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>D</mi></msup></mrow><annotation encoding="application/x-tex">x_i \in \mathbb{R}^{D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span></span></span></span></span></span></span></span>，假设文本共有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>个字，对应<strong>输入序列</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>T</mi><mo>×</mo><mi>D</mi></mrow></msup></mrow><annotation encoding="application/x-tex">X \in \mathbb{R}^{T \times D}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span></span></span></span></span></span></span></span></span></span>。经过双向LSTM提取特征后，得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>维<strong>隐层向量</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>H</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>T</mi><mo>×</mo><mi>M</mi></mrow></msup></mrow><annotation encoding="application/x-tex">H \in \mathbb{R}^{T \times M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span></span></span></span></span></span></span></span>，经过线性分类层得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>维<strong>输出向量</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>T</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">Y \in \mathbb{R}^{T \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>为标签种类个数，元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>Y</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>c</mi></mrow></msub></mrow><annotation encoding="application/x-tex">Y_{i, c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9694em;vertical-align:-0.2861em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span>表示序列中第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>个词分类为第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span></span></span></span>个标签的打分值。</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E8%AF%A6%E8%A7%A3%E5%91%BD%E5%90%8D%E5%AE%9E%E4%BD%93%E8%AF%86%E5%88%AB%E6%A8%A1%E5%9E%8B%EF%BC%9ALSTM-CRF/emission-score.png" alt="emission-score"></p><p>上述计算输出可<strong>作为logits经softmax后进行分类</strong>，但未考虑标签间的关系，所以添加CRF层进行约束，得到句子级的序列标注，例如在<code>BIO</code>标注中可能学习得到以下约束：</p><ul><li>句子以<code>B-X</code>或<code>O</code>开始的的可能性较大，而不是<code>I-X</code>；</li><li><code>B-X</code>后紧跟<code>I-X</code>或<code>O</code>，而不是<code>B-X</code>、<code>B-Y</code>或<code>I-Y</code>；</li><li><code>O</code>后只能接<code>B-X</code>或<code>O</code>，而不是<code>I-X</code>；</li><li>……</li></ul><p><a href="#%E6%9D%A1%E4%BB%B6%E9%9A%8F%E6%9C%BA%E5%9C%BA">条件随机场</a>可以简化表述为以下形式，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>score</mtext><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{score}(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>即logits</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mtext>score</mtext><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><mrow><munder><mo>∑</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munder><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mtext>score</mtext><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></mfrac><mspace width="2em"><mo>⇒</mo><mspace width="2em"><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>score</mtext><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>−</mo><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></munder><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mtext>score</mtext><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mspace></mspace></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(18.1)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">P(y|x) = \frac{\exp(\text{score}(x, y))}{\sum_{y&#x27;} \exp(\text{score}(x, y&#x27;))} \qquad \Rightarrow \qquad \log P(y | x) = \text{score}(x, y) - \log \sum_{y&#x27;} \exp(\text{score}(x, y&#x27;)) \tag{18.1} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.5488em;vertical-align:-1.1218em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1783em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6779em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">))</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">))</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.1218em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:2em;"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:2em;"></span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:2.4801em;vertical-align:-1.4301em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.856em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4301em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">))</span></span><span class="tag"><span class="strut" style="height:2.8571em;vertical-align:-1.4301em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">18.1</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x, y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>分别为输入序列和输出序列，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">y&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9463em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>是所有可能的输出序列，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>score</mtext><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{score}(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span>表示<strong>打分函数(全局特征)</strong>，由序列各位置<strong>局部特征</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mo>&gt;</mo><mn>0</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Psi_i (x, y) (&gt; 0)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mopen">(</span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">0</span><span class="mclose">)</span></span></span></span>取对数后累加得到</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mtext>score</mtext><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mi>log</mi><mo>⁡</mo><msub><mi mathvariant="normal">Ψ</mi><mi>i</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(18.2)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\text{score}(x, y) = \sum_i \log \Psi_i (x, y) \tag{18.2} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3277em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:2.3277em;vertical-align:-1.2777em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">18.2</span></span><span class="mord">)</span></span></span></span></span></span></p><p>序列位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>处的局部特征可以分为<strong>状态特征</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mrow><mi>E</mi><mi>M</mi><mi>I</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>→</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Psi_{EMI} (x_i \rightarrow y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">EM</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>和<strong>转移特征</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Ψ</mi><mrow><mi>T</mi><mi>R</mi><mi>A</mi><mi>N</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>→</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Psi_{TRAN} (y_{i-1} \rightarrow y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">TR</span><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>两类，因此</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable width="100%"><mtr><mtd width="50%"></mtd><mtd><mrow><mtext>score</mtext><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mi>log</mi><mo>⁡</mo><msub><mi mathvariant="normal">Ψ</mi><mrow><mi>E</mi><mi>M</mi><mi>I</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>→</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>+</mo><mi>log</mi><mo>⁡</mo><msub><mi mathvariant="normal">Ψ</mi><mrow><mi>T</mi><mi>R</mi><mi>A</mi><mi>N</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>→</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow></mtd><mtd width="50%"></mtd><mtd><mtext>(18.3)</mtext></mtd></mtr></mtable><annotation encoding="application/x-tex">\text{score}(x, y) = \sum_i \log \Psi_{EMI} (x_i \rightarrow y_i) + \log \Psi_{TRAN} (y_{i-1} \rightarrow y_i) \tag{18.3} </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3277em;vertical-align:-1.2777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">EM</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">TR</span><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span><span class="tag"><span class="strut" style="height:2.3277em;vertical-align:-1.2777em;"></span><span class="mord text"><span class="mord">(</span><span class="mord"><span class="mord">18.3</span></span><span class="mord">)</span></span></span></span></span></span></p><p>其中</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><msub><mi mathvariant="normal">Ψ</mi><mrow><mi>E</mi><mi>M</mi><mi>I</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo>→</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log \Psi_{EMI} (x_i \rightarrow y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">EM</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>即LSTM输出，构成Emission score matrix <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">E</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>T</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{E} \in \mathbb{R}^{T \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>；</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><msub><mi mathvariant="normal">Ψ</mi><mrow><mi>T</mi><mi>R</mi><mi>A</mi><mi>N</mi></mrow></msub><mo stretchy="false">(</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>→</mo><msub><mi>y</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log \Psi_{TRAN} (y_{i-1} \rightarrow y_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Ψ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">TR</span><span class="mord mathnormal mtight">A</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>为标签间的转移评分，定义为参数矩阵Transaction score matrix <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">T</mi><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mrow><mi>C</mi><mo>×</mo><mi>C</mi></mrow></msup></mrow><annotation encoding="application/x-tex">\mathcal{T} \in \mathbb{R}^{C \times C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7224em;vertical-align:-0.0391em;"></span><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，表示标签间的转移关系。</li></ul><hr><p>具体地，对于序列长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi></mrow><annotation encoding="application/x-tex">T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span></span></span></span>、大小为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>的样本集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>b</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>B</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(x^{(b)}, y^{(b)}), b = 1, \cdots, B\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mclose">}</span></span></span></span>，其中每个序列前后默认添加<code>&lt;start&gt;</code>、<code>&lt;end&gt;</code>标签，也即添加参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">T</mi><mi>s</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="script">T</mi><mi>e</mi></msub><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>C</mi></msup></mrow><annotation encoding="application/x-tex">\mathcal{T}_s, \mathcal{T}_e \in \mathbb{R}^{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，用于估计<code>&lt;start&gt; -&gt; y_1</code>、<code>y_T -&gt; &lt;end&gt;</code>的转移打分值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">T</mi><mrow><msubsup><mi>y</mi><mn>0</mn><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>y</mi><mn>1</mn><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow></msub></mrow><annotation encoding="application/x-tex">\mathcal{T}_{y^{(b)}_{0}, y^{(b)}_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2979em;vertical-align:-0.6146em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7414em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.2242em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.2242em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3115em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6146em;"><span></span></span></span></span></span></span></span></span></span>、<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="script">T</mi><mrow><msubsup><mi>y</mi><mi>T</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>y</mi><mrow><mi>T</mi><mo>+</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow></msub></mrow><annotation encoding="application/x-tex">\mathcal{T}_{y^{(b)}_{T}, y^{(b)}_{T+1}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3591em;vertical-align:-0.6757em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7414em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1964em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3393em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1964em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3988em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6757em;"><span></span></span></span></span></span></span></span></span></span>，那么有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>score</mtext><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>T</mi></munderover><msubsup><mi mathvariant="script">E</mi><mrow><mi>i</mi><mo separator="true">,</mo><msubsup><mi>y</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mrow><mi>T</mi><mo>+</mo><mn>1</mn></mrow></munderover><msub><mi mathvariant="script">T</mi><mrow><msubsup><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi>y</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \text{score}(x^{(b)}, y^{(b)}) = \sum_{i=1}^{T} \mathcal{E}^{(b)}_{i, y^{(b)}_i} + \sum_{i=1}^{T+1} \mathcal{T}_{y^{(b)}_{i - 1}, y^{(b)}_i}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.406em;vertical-align:-1.453em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.953em;"><span style="top:-3.953em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.1848em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7414em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.2134em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2612em;margin-right:0.05em;"><span class="pstrut" style="height:2.7414em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7822em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3448em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7414em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.2134em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3818em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.2134em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3223em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6638em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.453em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><msub><mo>∑</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mtext>score</mtext><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log \sum_{y&#x27;} \exp(\text{score}(x^{(b)}, y&#x27;))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3238em;vertical-align:-0.4358em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1783em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span>，需要遍历每种可能的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi></mrow><annotation encoding="application/x-tex">y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>组合，记<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mrow><mi>i</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><annotation encoding="application/x-tex">s^{(b)}_{i, y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4578em;vertical-align:-0.413em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span></span>为从<code>&lt;start&gt;</code>出发至第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>个标签(包含)为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">{y_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>为止的打分值，而在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6595em;"></span><span class="mord mathnormal">i</span></span></span></span>处有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>种可能的标签，故组成打分向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>∈</mo><msup><mi mathvariant="double-struck">R</mi><mi>C</mi></msup></mrow><annotation encoding="application/x-tex">s^{(b)}_i \in \mathbb{R}^{C}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8413em;"></span><span class="mord"><span class="mord mathbb">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span></span></span></span></span></span></span></span>，那么有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><msubsup><mi>s</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><msub><mi>y</mi><mi>i</mi></msub></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi mathvariant="script">T</mi><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></msub><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mrow><mi>i</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><mtext>&lt;start&gt;</mtext><mo>→</mo><msub><mi>w</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>log</mi><mo>⁡</mo><msubsup><mo>∑</mo><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn></mrow><mi>C</mi></msubsup><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><msubsup><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msub><mo>+</mo><msub><mi mathvariant="script">T</mi><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></msub><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mrow><mi>i</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>i</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>T</mi><mo>+</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo stretchy="false">(</mo><msub><mi>w</mi><mn>1</mn></msub><mo>→</mo><mtext>&lt;end&gt;</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">{s^{(b)}_{i}}_{y_i} = \begin{cases}    \mathcal{T}_{y_{i-1}, y_i} + \mathcal{E}^{(b)}_{i, y_i} &amp; i = 1 &amp; (\text{&lt;start&gt;} \rightarrow w_1) \\    \log \sum_{y_{i-1}=1}^{C} \exp \left( {s^{(b)}_{i-1}}_{y_{i-1}} + \mathcal{T}_{y_{i-1}, y_i} + \mathcal{E}^{(b)}_{i, y_i} \right) &amp; i = 2, \cdots, T + 1 &amp; (w_1 \rightarrow \text{&lt;end&gt;})\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.5075em;vertical-align:-0.4627em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0252em;"><span style="top:-2.3734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4627em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.2768em;vertical-align:-1.3884em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8884em;"><span style="top:-3.9936em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2918em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4116em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4415em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0835em;"><span style="top:-2.3151em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5267em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2918em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3884em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8884em;"><span style="top:-3.9936em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.4116em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3884em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8884em;"><span style="top:-3.9936em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mopen">(</span><span class="mord text"><span class="mord">&lt;start&gt;</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.4116em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord">&lt;end&gt;</span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3884em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>log</mi><mo>⁡</mo><msubsup><mo>∑</mo><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn></mrow><mi>C</mi></msubsup><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><msubsup><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msub><mo>+</mo><msub><mi mathvariant="script">T</mi><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></msub><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mrow><mi>i</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">s^{(b)}_i = \begin{bmatrix}    \cdots &amp;    \log \sum_{y_{i-1}=1}^{C} \exp \left( {s^{(b)}_{i-1}}_{y_{i-1}} + \mathcal{T}_{y_{i-1}, y_i} + \mathcal{E}^{(b)}_{i, y_i} \right) &amp;    \cdots\end{bmatrix}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3217em;vertical-align:-0.2769em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2769em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.0313em;vertical-align:-0.65em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4415em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0835em;"><span style="top:-2.3151em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5267em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2918em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.15em;"><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.65em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.3812em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>C</mi></mrow><annotation encoding="application/x-tex">y_i = 1, \cdots, C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>，注意到</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi mathvariant="script">T</mi><mrow><msub><mi>y</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>1</mn></msub></mrow></msub><mo>=</mo><msub><msub><mi mathvariant="script">T</mi><mi>s</mi></msub><msub><mi>y</mi><mn>1</mn></msub></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi mathvariant="script">T</mi><mrow><msub><mi>y</mi><mi>T</mi></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>T</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow></msub><mo>=</mo><msub><msub><mi mathvariant="script">T</mi><mi>e</mi></msub><msub><mi>y</mi><mi>T</mi></msub></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi mathvariant="script">E</mi><mrow><mi>T</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>T</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi>s</mi><mrow><mi>T</mi><mo>+</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>∈</mo><mi mathvariant="double-struck">R</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}    \mathcal{T}_{y_0, y_1} = {\mathcal{T}_s}_{y_1} \\    \mathcal{T}_{y_T, y_{T+1}} = {\mathcal{T}_e}_{y_{T}} \\    \mathcal{E}^{(b)}_{T+1, y_{T+1}} = 0 \\    s^{(b)}_{T+1} \in \mathbb{R}\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.8371em;vertical-align:-2.6686em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-1.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.592em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-5.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1686em;"><span style="top:-5.2054em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1017em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3358em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.7654em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2028em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.292em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1017em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1433em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3358em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.2886em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2028em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4355em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-0.8082em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3519em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathbb">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6686em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>注意<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><mo>∑</mo><mi>exp</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\log \sum \exp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span></span></span></span>操作</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>log</mi><mo>⁡</mo><munderover><mo>∑</mo><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><msubsup><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msub><mo>+</mo><msub><mi mathvariant="script">T</mi><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></msub><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mrow><mi>i</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>log</mi><mo>⁡</mo><munderover><mo>∑</mo><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><msubsup><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></msub><mo fence="true">)</mo></mrow><mo>×</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">T</mi><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></msub><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mrow><mi>i</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>log</mi><mo>⁡</mo><munderover><mo>∑</mo><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mrow><mo fence="true">(</mo><munderover><mo>∑</mo><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>2</mn></mrow></msub><mo>=</mo><mn>1</mn></mrow><mi>C</mi></munderover><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><msubsup><mi>s</mi><mrow><mi>i</mi><mo>−</mo><mn>2</mn></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>2</mn></mrow></msub></msub><mo>+</mo><msub><mi mathvariant="script">T</mi><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>2</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow></msub><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn><mo separator="true">,</mo><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo fence="true">)</mo></mrow><mo fence="true">)</mo></mrow><mo>×</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi mathvariant="script">T</mi><mrow><msub><mi>y</mi><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msub><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow></msub><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mrow><mi>i</mi><mo separator="true">,</mo><msub><mi>y</mi><mi>i</mi></msub></mrow><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>⋯</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}      &amp; \log \sum_{y_{i-1}=1}^{C} \exp \left( {s^{(b)}_{i-1}}_{y_{i-1}} + \mathcal{T}_{y_{i-1}, y_i} + \mathcal{E}^{(b)}_{i, y_i} \right) \\    = &amp; \log \sum_{y_{i-1}=1}^{C} \exp \left( {s^{(b)}_{i-1}}_{y_{i-1}} \right) \times \exp \left( \mathcal{T}_{y_{i-1}, y_i} + \mathcal{E}^{(b)}_{i, y_i} \right) \\    = &amp; \log \sum_{y_{i-1}=1}^{C} \left( \sum_{y_{i-2}=1}^{C} \exp \left( {s^{(b)}_{i-2}}_{y_{i-2}} + \mathcal{T}_{y_{i-2}, y_{i-1}} + \mathcal{E}^{(b)}_{i-1, y_{i-1}} \right) \right) \times \exp \left( \mathcal{T}_{y_{i-1}, y_i} + \mathcal{E}^{(b)}_{i, y_i} \right) \\    = &amp; \cdots\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:12.1116em;vertical-align:-5.8058em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.3058em;"><span style="top:-8.3058em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"></span></span><span style="top:-4.7686em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-1.2314em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:1.3175em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.8058em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.3058em;"><span style="top:-8.3058em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4089em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0835em;"><span style="top:-2.3151em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5267em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2918em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-4.7686em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4089em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0835em;"><span style="top:-2.3151em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5267em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2918em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:-1.2314em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4089em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8829em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4089em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3352em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-0.0835em;"><span style="top:-2.3151em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5267em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2918em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4186em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2025em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2918em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span><span style="top:1.3175em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.8058em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>定义优化目标为<strong>最大化对数似然函数</strong>，通过梯度下降<strong>对整个网络的参数进行更新</strong>，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>L</mi><mo>=</mo><munder><mo>∑</mo><mi>b</mi></munder><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = \sum_b \log P(y^{(b)}|x^{(b)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.3521em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><hr><p>具体地，若对于数据样本</p><table><thead><tr><th>X</th><th>Louis</th><th>Hsu</th><th>loves</th><th>China</th><th>.</th></tr></thead><tbody><tr><td>Y</td><td>B-PER</td><td>I-PER</td><td>O</td><td>B-ORG</td><td>O</td></tr></tbody></table><p>其LSTM输出</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi mathvariant="script">E</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>O</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>0</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">1.5</mn></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.9</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.08</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.05</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.4</mn></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.11</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.05</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.09</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.02</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.03</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.08</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.1</mn></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>3</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.003</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.002</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.2</mn></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.07</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.05</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>4</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.12</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.1</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.065</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.5</mn></mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\mathcal{E}^{(b)} = \begin{bmatrix}    &amp; B-PER &amp; I-PER &amp; B-ORG &amp; I-ORG &amp; O \\    w_0 &amp; \bm{1.5} &amp; 0.9 &amp; 0.1 &amp; 0.08 &amp; 0.05 \\    w_1 &amp; 0.2 &amp; \bm{0.4} &amp; 0.1 &amp; 0.11 &amp; 0.05 \\    w_2 &amp; 0.09 &amp; 0.02 &amp; 0.03 &amp; 0.08 &amp; \bm{0.1} \\    w_3 &amp; 0.003 &amp; 0.002 &amp; \bm{0.2} &amp; 0.07 &amp; 0.05 \\    w_4 &amp; 0.12 &amp; 0.2 &amp; 0.1 &amp; 0.065 &amp; \bm{0.5}\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.938em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:7.2001em;vertical-align:-3.35em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-2.911em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.058em;"><span class="pstrut" style="height:5.6161em;"></span><span style="height:3.6161em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.6161em" style="width:0.6667em" viewbox="0 0 666.67 3616" preserveaspectratio="xMinYMin"><path d="M319 0 H403 V3616 H319z M319 0 H403 V3616 H319z"/></svg></span></span><span style="top:-8.3111em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">1.5</span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.2</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.09</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.003</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.12</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.9</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.4</span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.02</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.002</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.1</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.1</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.03</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.2</span></span></span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.08</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.11</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.08</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.07</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.065</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.05</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.05</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.1</span></span></span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.05</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.5</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-2.911em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.058em;"><span class="pstrut" style="height:5.6161em;"></span><span style="height:3.6161em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.6161em" style="width:0.6667em" viewbox="0 0 666.67 3616" preserveaspectratio="xMinYMin"><path d="M263 0 H347 V3616 H263z M263 0 H347 V3616 H263z"/></svg></span></span><span style="top:-8.3111em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>此时转移打分参数矩阵</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="script">T</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>O</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.6</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.9</mn></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.0006</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.6</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.53</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.55</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.0003</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.85</mn></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.5</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.0003</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.25</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.8</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.77</mn></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.45</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.007</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.65</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.76</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>O</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.65</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.0007</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.7</mn></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.0008</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.9</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\mathcal{T} = \begin{bmatrix}    &amp; B-PER &amp; I-PER &amp; B-ORG &amp; I-ORG &amp; O \\    B-PER &amp; 0.6 &amp; \bm{0.9} &amp; 0.2 &amp; 0.0006 &amp; 0.6 \\    I-PER &amp; 0.5 &amp; 0.53 &amp; 0.55 &amp; 0.0003 &amp; \bm{0.85} \\    B-ORG &amp; 0.5 &amp; 0.0003 &amp; 0.25 &amp; 0.8 &amp; \bm{0.77} \\    I-ORG &amp; 0.45 &amp; 0.007 &amp; 0.7 &amp; 0.65 &amp; 0.76 \\    O &amp; 0.65 &amp; 0.0007 &amp; \bm{0.7} &amp; 0.0008 &amp; 0.9 \\\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:7.2001em;vertical-align:-3.35em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-2.911em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-4.058em;"><span class="pstrut" style="height:5.6161em;"></span><span style="height:3.6161em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.6161em" style="width:0.6667em" viewbox="0 0 666.67 3616" preserveaspectratio="xMinYMin"><path d="M319 0 H403 V3616 H319z M319 0 H403 V3616 H319z"/></svg></span></span><span style="top:-8.3111em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.6</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.5</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.5</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.45</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.65</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.9</span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.53</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.0003</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.007</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.0007</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.2</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.55</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.25</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.7</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.7</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.0006</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.0003</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.8</span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.65</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.0008</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-6.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-4.81em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.6</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.85</span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.77</span></span></span></span></span><span style="top:-1.21em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.76</span></span></span><span style="top:-0.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-2.911em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-4.058em;"><span class="pstrut" style="height:5.6161em;"></span><span style="height:3.6161em;width:0.6667em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.6667em" height="3.6161em" style="width:0.6667em" viewbox="0 0 666.67 3616" preserveaspectratio="xMinYMin"><path d="M263 0 H347 V3616 H263z M263 0 H347 V3616 H263z"/></svg></span></span><span style="top:-8.3111em;"><span class="pstrut" style="height:5.6161em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><code>&lt;start&gt;</code>转移到第一个标签的打分值为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="script">T</mi><mi>s</mi></msub><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>O</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.8</mn></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.007</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.7</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.0008</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.9</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\mathcal{T}_s = \begin{bmatrix}    B-PER &amp; I-PER &amp; B-ORG &amp; I-ORG &amp; O \\    \bm{0.8} &amp; 0.007 &amp; 0.7 &amp; 0.0008 &amp; 0.9\end{bmatrix}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6313em;vertical-align:-0.95em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.8</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.007</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.0008</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.9</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.6812em;"><span style="top:-3.9029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p><p>最后一个标签转移到<code>&lt;end&gt;</code>的打分值为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="script">T</mi><mi>e</mi></msub><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>P</mi><mi>E</mi><mi>R</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>B</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>I</mi><mo>−</mo><mi>O</mi><mi>R</mi><mi>G</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>O</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.009</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.008</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.006</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0.2</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mn mathvariant="bold">0.08</mn></mi></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\mathcal{T}_e = \begin{bmatrix}    B-PER &amp; I-PER &amp; B-ORG &amp; I-ORG &amp; O \\    0.009 &amp; 0.008 &amp; 0.006 &amp; 0.2 &amp; \bm{0.08}\end{bmatrix}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.6313em;vertical-align:-0.95em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.009</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">PER</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.008</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.006</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ORG</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0.2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">O</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathbf">0.08</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.6812em;"><span style="top:-3.9029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span></p><p>计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>score</mtext><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\text{score}(x^{(b)}, y^{(b)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的实现如下，<code>&lt;start&gt; -&gt; B-PER -&gt; I-PER -&gt; O -&gt; B-ORG -&gt; O -&gt; &lt;end&gt;</code>对应的标签序列为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mo stretchy="false">(</mo><mi>s</mi><mo separator="true">,</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mi>e</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">y^{(b)} = (s, 0, 1, 4, 2, 4, e)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">e</span><span class="mclose">)</span></span></span></span>对应</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>score</mtext><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mi mathvariant="script">E</mi><mn>00</mn><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mn>11</mn><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mn>24</mn><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mn>32</mn><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>+</mo><msubsup><mi mathvariant="script">E</mi><mn>44</mn><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>+</mo><msub><msub><mi mathvariant="script">T</mi><mi>s</mi></msub><mn>0</mn></msub><mo>+</mo><msub><mi mathvariant="script">T</mi><mn>01</mn></msub><mo>+</mo><msub><mi mathvariant="script">T</mi><mn>14</mn></msub><mo>+</mo><msub><mi mathvariant="script">T</mi><mn>42</mn></msub><mo>+</mo><msub><mi mathvariant="script">T</mi><mn>24</mn></msub><mo>+</mo><msub><msub><mi mathvariant="script">T</mi><mi>e</mi></msub><mn>4</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>6.8</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \text{score}(x^{(b)}, y^{(b)}) &amp; = \mathcal{E}^{(b)}_{00} + \mathcal{E}^{(b)}_{11} + \mathcal{E}^{(b)}_{24} + \mathcal{E}^{(b)}_{32} + \mathcal{E}^{(b)}_{44} \\        &amp; + {\mathcal{T}_s}_{0} + \mathcal{T}_{01} + \mathcal{T}_{14} + \mathcal{T}_{42} + \mathcal{T}_{24} +{\mathcal{T}_e}_{4} \\        &amp; = 6.8\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.7048em;vertical-align:-2.1024em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6024em;"><span style="top:-4.6024em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.1024em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"></span></span><span style="top:-1.6024em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1024em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6024em;"><span style="top:-4.6024em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4337em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">00</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4337em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4337em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">24</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4337em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">32</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4337em;margin-left:-0.0894em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">44</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1024em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2514em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">01</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">14</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">42</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">24</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.2542em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2514em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1997em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.6024em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">6.8</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1024em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_compute_score</span>(<span class="params">self, emissions: torch.Tensor,       <span class="comment"># (seq_length, batch_size, num_tags)</span></span></span></span><br><span class="line"><span class="params"><span class="function">                   tags: torch.LongTensor,              <span class="comment"># (seq_length, batch_size)</span></span></span></span><br><span class="line"><span class="params"><span class="function">                   mask: torch.ByteTensor               <span class="comment"># (seq_length, batch_size) torch.ones(...) if not specified.</span></span></span></span><br><span class="line"><span class="params"><span class="function">    </span>) -&gt; torch.Tensor:</span></span><br><span class="line"></span><br><span class="line">    seq_length, batch_size = tags.size()</span><br><span class="line">    mask = mask.<span class="built_in">float</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Start transition score and first emission</span></span><br><span class="line">    <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">    score = self.start_transitions[tags[<span class="number">0</span>]]</span><br><span class="line">    score += emissions[<span class="number">0</span>, torch.arange(batch_size), tags[<span class="number">0</span>]]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, seq_length):</span><br><span class="line">        <span class="comment"># Transition score to next tag(y_&#123;i-1&#125; -&gt; y_i), only added if next timestep is valid (mask == 1)</span></span><br><span class="line">        <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">        score += self.transitions[tags[i - <span class="number">1</span>], tags[i]] * mask[i]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Emission score for next tag(x_i -&gt; y_i), only added if next timestep is valid (mask == 1)</span></span><br><span class="line">        <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">        score += emissions[i, torch.arange(batch_size), tags[i]] * mask[i]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># End transition score</span></span><br><span class="line">    <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">    seq_ends = mask.long().<span class="built_in">sum</span>(dim=<span class="number">0</span>) - <span class="number">1</span></span><br><span class="line">    <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">    last_tags = tags[seq_ends, torch.arange(batch_size)]</span><br><span class="line">    <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">    score += self.end_transitions[last_tags]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> score</span><br></pre></td></tr></table></figure><p>计算<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>log</mi><mo>⁡</mo><msub><mo>∑</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mtext>score</mtext><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><msup><mi>y</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\log \sum_{y&#x27;} \exp(\text{score}(x, y&#x27;))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1877em;vertical-align:-0.4358em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1783em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord text"><span class="mord">score</span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">))</span></span></span></span>的实现如下</p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_compute_normalizer</span>(<span class="params">self, emissions: torch.Tensor,  <span class="comment"># (seq_length, batch_size, num_tags)</span></span></span></span><br><span class="line"><span class="params"><span class="function">                        mask: torch.ByteTensor          <span class="comment"># (seq_length, batch_size) torch.ones(...) if not specified.</span></span></span></span><br><span class="line"><span class="params"><span class="function">    </span>) -&gt; torch.Tensor:</span></span><br><span class="line"></span><br><span class="line">    seq_length = emissions.size(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Start transition score and first emission; score has size of</span></span><br><span class="line">    <span class="comment"># (batch_size, num_tags) where for each batch, the j-th column stores</span></span><br><span class="line">    <span class="comment"># the score that the first timestep has tag j</span></span><br><span class="line">    <span class="comment"># shape: (batch_size, num_tags)</span></span><br><span class="line">    score = self.start_transitions + emissions[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, seq_length):</span><br><span class="line">        <span class="comment"># Broadcast score for every possible next tag</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, num_tags, 1)</span></span><br><span class="line">        broadcast_score = score.unsqueeze(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Broadcast emission score for every possible current tag</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, 1, num_tags)</span></span><br><span class="line">        broadcast_emissions = emissions[i].unsqueeze(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Compute the score tensor of size (batch_size, num_tags, num_tags) where</span></span><br><span class="line">        <span class="comment"># for each sample, entry at row i and column j stores the sum of scores of all</span></span><br><span class="line">        <span class="comment"># possible tag sequences so far that end with transitioning from tag i to tag j</span></span><br><span class="line">        <span class="comment"># and emitting</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, num_tags, num_tags)</span></span><br><span class="line">        <span class="comment"># y_&#123;i-1&#125; -&gt; y_i</span></span><br><span class="line">        next_score = broadcast_score + self.transitions + broadcast_emissions</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Sum over all possible current tags, but we&#x27;re in score space, so a sum</span></span><br><span class="line">        <span class="comment"># becomes a log-sum-exp: for each sample, entry i stores the sum of scores of</span></span><br><span class="line">        <span class="comment"># all possible tag sequences so far, that end in tag i</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, num_tags)</span></span><br><span class="line">        next_score = torch.logsumexp(next_score, dim=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Set score to the next score if this timestep is valid (mask == 1)</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, num_tags)</span></span><br><span class="line">        score = torch.where(mask[i].unsqueeze(<span class="number">1</span>), next_score, score)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># End transition score</span></span><br><span class="line">    <span class="comment"># shape: (batch_size, num_tags)</span></span><br><span class="line">    score += self.end_transitions</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># Sum (log-sum-exp) over all possible tags</span></span><br><span class="line">    <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">    score = torch.logsumexp(score, dim=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> score</span><br></pre></td></tr></table></figure><p>前向求log likelihood <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∑</mo><mi>b</mi></msub><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\sum_b \log P(y^{(b)}|x^{(b)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1877em;vertical-align:-0.2997em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1864em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">forward</span>(<span class="params">self, emissions: torch.Tensor,</span></span></span><br><span class="line"><span class="params"><span class="function">            tags: torch.LongTensor,</span></span></span><br><span class="line"><span class="params"><span class="function">            mask: <span class="type">Optional</span>[torch.ByteTensor] = <span class="literal">None</span>,</span></span></span><br><span class="line"><span class="params"><span class="function">            reduction: <span class="built_in">str</span> = <span class="string">&#x27;mean&#x27;</span></span>) -&gt; torch.Tensor:</span></span><br><span class="line">    <span class="string">&quot;&quot;&quot;Compute the conditional log likelihood of a sequence of tags given emission scores.</span></span><br><span class="line"><span class="string">    Args:</span></span><br><span class="line"><span class="string">        emissions (`~torch.Tensor`): Emission score tensor of size</span></span><br><span class="line"><span class="string">            ``(seq_length, batch_size, num_tags)`` if ``batch_first`` is ``False``,</span></span><br><span class="line"><span class="string">            ``(batch_size, seq_length, num_tags)`` otherwise.</span></span><br><span class="line"><span class="string">        tags (`~torch.LongTensor`): Sequence of tags tensor of size</span></span><br><span class="line"><span class="string">            ``(seq_length, batch_size)`` if ``batch_first`` is ``False``,</span></span><br><span class="line"><span class="string">            ``(batch_size, seq_length)`` otherwise.</span></span><br><span class="line"><span class="string">        mask (`~torch.ByteTensor`): Mask tensor of size ``(seq_length, batch_size)``</span></span><br><span class="line"><span class="string">            if ``batch_first`` is ``False``, ``(batch_size, seq_length)`` otherwise.</span></span><br><span class="line"><span class="string">        reduction: Specifies  the reduction to apply to the output:</span></span><br><span class="line"><span class="string">            ``none|sum|mean|token_mean``. ``none``: no reduction will be applied.</span></span><br><span class="line"><span class="string">            ``sum``: the output will be summed over batches. ``mean``: the output will be</span></span><br><span class="line"><span class="string">            averaged over batches. ``token_mean``: the output will be averaged over tokens.</span></span><br><span class="line"><span class="string">    Returns:</span></span><br><span class="line"><span class="string">        `~torch.Tensor`: The log likelihood. This will have size ``(batch_size,)`` if</span></span><br><span class="line"><span class="string">        reduction is ``none``, ``()`` otherwise.</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> reduction <span class="keyword">not</span> <span class="keyword">in</span> (<span class="string">&#x27;none&#x27;</span>, <span class="string">&#x27;sum&#x27;</span>, <span class="string">&#x27;mean&#x27;</span>, <span class="string">&#x27;token_mean&#x27;</span>):</span><br><span class="line">        <span class="keyword">raise</span> ValueError(<span class="string">f&#x27;invalid reduction: <span class="subst">&#123;reduction&#125;</span>&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> mask <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        mask = torch.ones_like(tags, dtype=torch.uint8, device=tags.device)</span><br><span class="line">    <span class="keyword">if</span> mask.dtype != torch.uint8:</span><br><span class="line">        mask = mask.byte()</span><br><span class="line">    self._validate(emissions, tags=tags, mask=mask)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> self.batch_first:</span><br><span class="line">        emissions = emissions.transpose(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">        tags = tags.transpose(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line">        mask = mask.transpose(<span class="number">0</span>, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">    numerator = self._compute_score(emissions, tags, mask)</span><br><span class="line">    <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">    denominator = self._compute_normalizer(emissions, mask)</span><br><span class="line">    <span class="comment"># log likelihood, shape: (batch_size,)</span></span><br><span class="line">    llh = numerator - denominator</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> reduction == <span class="string">&#x27;none&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> llh</span><br><span class="line">    <span class="keyword">if</span> reduction == <span class="string">&#x27;sum&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> llh.<span class="built_in">sum</span>()</span><br><span class="line">    <span class="keyword">if</span> reduction == <span class="string">&#x27;mean&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> llh.mean()</span><br><span class="line">    <span class="keyword">return</span> llh.<span class="built_in">sum</span>() / mask.<span class="built_in">float</span>().<span class="built_in">sum</span>()</span><br></pre></td></tr></table></figure><hr><p>在预测阶段时，需要从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>y</mi><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>b</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(y|x^{(b)})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">b</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>的预测中得到概率最大的预测序列，用维特比(viterbi)算法进行解码求权重最大的路径</p><blockquote><p>如何简单地理解维特比算法（viterbi算法）？ - 白话NLP的回答 - 知乎<br><a href="https://www.zhihu.com/question/294202922/answer/1318907631">https://www.zhihu.com/question/294202922/answer/1318907631</a></p></blockquote><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">_viterbi_decode</span>(<span class="params">self, emissions: torch.FloatTensor,</span></span></span><br><span class="line"><span class="params"><span class="function">                    mask: torch.ByteTensor,</span></span></span><br><span class="line"><span class="params"><span class="function">                    pad_tag: <span class="type">Optional</span>[<span class="built_in">int</span>] = <span class="literal">None</span></span>) -&gt; <span class="type">List</span>[<span class="type">List</span>[<span class="built_in">int</span>]]:</span></span><br><span class="line">    <span class="comment"># emissions: (seq_length, batch_size, num_tags)</span></span><br><span class="line">    <span class="comment"># mask: (seq_length, batch_size)</span></span><br><span class="line">    <span class="comment"># return: (batch_size, seq_length)</span></span><br><span class="line">    <span class="keyword">if</span> pad_tag <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">        pad_tag = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    device = emissions.device</span><br><span class="line">    seq_length, batch_size = mask.shape</span><br><span class="line"></span><br><span class="line">    <span class="comment"># Start transition and first emission</span></span><br><span class="line">    <span class="comment"># shape: (batch_size, num_tags)</span></span><br><span class="line">    score = self.start_transitions + emissions[<span class="number">0</span>]</span><br><span class="line">    history_idx = torch.zeros((seq_length, batch_size, self.num_tags), dtype=torch.long, device=device)</span><br><span class="line">    oor_idx = torch.zeros((batch_size, self.num_tags), dtype=torch.long, device=device)</span><br><span class="line">    oor_tag = torch.full((seq_length, batch_size), pad_tag, dtype=torch.long, device=device)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># - score is a tensor of size (batch_size, num_tags) where for every batch,</span></span><br><span class="line">    <span class="comment">#   value at column j stores the score of the best tag sequence so far that ends</span></span><br><span class="line">    <span class="comment">#   with tag j</span></span><br><span class="line">    <span class="comment"># - history_idx saves where the best tags candidate transitioned from; this is used</span></span><br><span class="line">    <span class="comment">#   when we trace back the best tag sequence</span></span><br><span class="line">    <span class="comment"># - oor_idx saves the best tags candidate transitioned from at the positions</span></span><br><span class="line">    <span class="comment">#   where mask is 0, i.e. out of range (oor)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># Viterbi algorithm recursive case: we compute the score of the best tag sequence</span></span><br><span class="line">    <span class="comment"># for every possible next tag</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, seq_length):</span><br><span class="line">        <span class="comment"># Broadcast viterbi score for every possible next tag</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, num_tags, 1)</span></span><br><span class="line">        broadcast_score = score.unsqueeze(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Broadcast emission score for every possible current tag</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, 1, num_tags)</span></span><br><span class="line">        broadcast_emission = emissions[i].unsqueeze(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Compute the score tensor of size (batch_size, num_tags, num_tags) where</span></span><br><span class="line">        <span class="comment"># for each sample, entry at row i and column j stores the score of the best</span></span><br><span class="line">        <span class="comment"># tag sequence so far that ends with transitioning from tag i to tag j and emitting</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, num_tags, num_tags)</span></span><br><span class="line">        next_score = broadcast_score + self.transitions + broadcast_emission</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Find the maximum score over all possible current tag</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, num_tags)</span></span><br><span class="line">        next_score, indices = next_score.<span class="built_in">max</span>(dim=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># Set score to the next score if this timestep is valid (mask == 1)</span></span><br><span class="line">        <span class="comment"># and save the index that produces the next score</span></span><br><span class="line">        <span class="comment"># shape: (batch_size, num_tags)</span></span><br><span class="line">        score = torch.where(mask[i].unsqueeze(-<span class="number">1</span>), next_score, score)</span><br><span class="line">        indices = torch.where(mask[i].unsqueeze(-<span class="number">1</span>), indices, oor_idx)</span><br><span class="line">        history_idx[i - <span class="number">1</span>] = indices</span><br><span class="line"></span><br><span class="line">    <span class="comment"># End transition score</span></span><br><span class="line">    <span class="comment"># shape: (batch_size, num_tags)</span></span><br><span class="line">    end_score = score + self.end_transitions</span><br><span class="line">    _, end_tag = end_score.<span class="built_in">max</span>(dim=<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># shape: (batch_size,)</span></span><br><span class="line">    seq_ends = mask.long().<span class="built_in">sum</span>(dim=<span class="number">0</span>) - <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># insert the best tag at each sequence **end** (last position with mask == 1)</span></span><br><span class="line">    history_idx = history_idx.transpose(<span class="number">1</span>, <span class="number">0</span>).contiguous()                          <span class="comment"># (batch_size, seq_length, num_tags)</span></span><br><span class="line">    history_idx.scatter_(<span class="number">1</span>, seq_ends.view(-<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>).expand(-<span class="number">1</span>, <span class="number">1</span>, self.num_tags),   <span class="comment"># (batch_size, 1, num_tags)</span></span><br><span class="line">                         end_tag.view(-<span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>).expand(-<span class="number">1</span>, <span class="number">1</span>, self.num_tags))       <span class="comment"># (batch_size, 1, num_tags)</span></span><br><span class="line">    history_idx = history_idx.transpose(<span class="number">1</span>, <span class="number">0</span>).contiguous()                          <span class="comment"># (seq_length, batch_size, num_tags)</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># The most probable path for each sequence</span></span><br><span class="line">    best_tags = torch.zeros(batch_size, <span class="number">1</span>, dtype=torch.long, device=device)</span><br><span class="line">    best_tags_arr = torch.zeros((seq_length, batch_size), dtype=torch.long, device=device)</span><br><span class="line">    <span class="keyword">for</span> idx <span class="keyword">in</span> <span class="built_in">range</span>(seq_length - <span class="number">1</span>, -<span class="number">1</span>, -<span class="number">1</span>):</span><br><span class="line">        best_tags = torch.gather(history_idx[idx], <span class="number">1</span>, best_tags)                    <span class="comment"># (batch_size,)</span></span><br><span class="line">        best_tags_arr[idx] = best_tags.data.view(batch_size)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> torch.where(mask, best_tags_arr, oor_tag).transpose(<span class="number">0</span>, <span class="number">1</span>)                <span class="comment"># (batch_size, seq_length)</span></span><br></pre></td></tr></table></figure><blockquote><p>我理解BI-LSTM+CRF模型，所谓在LSTM上面套CRF其实是不严谨的说法，假如这样说，那实际上是两层sequence model了吗。我认为其实是说把LSTM和CRF融合起来。比如LSTM的产出只有发射概率，尽管这个发射概率考虑到了上下文，因为LSTM有门机制，可以记忆或者遗忘前面内容，然后双向，有前有后这样，但是毕竟没有转移概率，像CRF HMM这种，都是结合发射概率和转移概率的。比如在词性标注，最简单BIO这样，有显而易见的规则，就是B-X后面不会有I-Y。所以干脆搞出B-LSTM+CRF，结合发射概率和转移概率这样。实际上后面接的CRF并不是真的CRF，比如它又没有特征模板，它又不接受离散特征，他只是一次Viterbi推导而已。</p><p>作者：uuisafresh<br>链接：<a href="https://www.zhihu.com/question/62399257/answer/206903718">https://www.zhihu.com/question/62399257/answer/206903718</a><br>来源：知乎<br>著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</p></blockquote><!-- # Implementation具体代码查看[isLouisHsu/ner.lstmcrf.pytorch](https://github.com/isLouisHsu/ner.lstmcrf.pytorch)，需要注意的是，完全复现`gensim.models.Word2Vec`需要在环境中固定环境变量`PYTHONHASHSEED`，如下``` sh$ export PYTHONHASHSEED=99$ python train.py$ python test.py``` --><h1>Reference</h1><ul><li><a href="https://zhuanlan.zhihu.com/p/88544122">【NLP-NER】命名实体识别详解之一 - 知乎</a></li><li><a href="https://arxiv.org/abs/1508.01991">Huang Z , Xu W , Yu K . Bidirectional LSTM-CRF Models for Sequence Tagging[J]. Computer ence, 2015.</a></li><li><a href="http://colah.github.io/posts/2015-08-Understanding-LSTMs/">Understanding LSTM Networks</a></li><li><a href="http://karpathy.github.io/2015/05/21/rnn-effectiveness/">The Unreasonable Effectiveness of Recurrent Neural Networks</a></li><li><a href="https://github.com/threelittlemonkeys/lstm-crf-pytorch">threelittlemonkeys/lstm-crf-pytorch - Github</a></li><li><a href="https://github.com/mali19064/LSTM-CRF-pytorch-faster">mali19064/LSTM-CRF-pytorch-faster - Github</a></li><li><a href="https://pytorch.org/tutorials/beginner/nlp/advanced_tutorial.html">ADVANCED: MAKING DYNAMIC DECISIONS AND THE BI-LSTM CRF - pytorch.org</a></li><li><a href="https://blog.csdn.net/b285795298/article/details/100764066#Emission%20score">【NLP】命名实体识别（NER）的BiLSTM-CRF模型</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 自然语言处理 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>记一次MySQL解决大数据存储时的分表问题</title>
      <link href="/2020/06/14/%E8%AE%B0%E4%B8%80%E6%AC%A1MySQL%E8%A7%A3%E5%86%B3%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%97%B6%E7%9A%84%E5%88%86%E8%A1%A8%E9%97%AE%E9%A2%98.html"/>
      <url>/2020/06/14/%E8%AE%B0%E4%B8%80%E6%AC%A1MySQL%E8%A7%A3%E5%86%B3%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%97%B6%E7%9A%84%E5%88%86%E8%A1%A8%E9%97%AE%E9%A2%98.html</url>
      
        <content type="html"><![CDATA[<h1>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E9%97%AE%E9%A2%98">问题</a></li><li><a href="#%E6%96%B9%E6%A1%88">方案</a><ul><li><a href="#%E6%A0%B9%E6%8D%AE%E4%B8%BB%E4%BD%93%E5%88%86%E8%A1%A8">根据主体分表</a></li><li><a href="#%E5%AE%B9%E9%87%8F%E5%8F%AF%E6%8B%93%E5%B1%95">容量可拓展</a></li></ul></li><li><a href="#%E5%AE%9E%E7%8E%B0">实现</a></li></ul><h1>问题</h1><p>试想有这样一种场景，多个主体以一定时间间隔(如10s)源源不断采集数据，并存入数据表。并且，主体个数可能在随后使用中新增或减少。若全部数据存入一张表，当数据量很大时，用SQL查询数据会非常慢。本节就是总结一次在实际中遇到这类问题的解决方案，为解决查询慢的问题，可以从两方面入手</p><ul><li>加快查询主体的速度：根据主体进行分表；</li><li>主体数目拓展：主体个数到达一定数目时，进行容量拓展。</li></ul><h1>方案</h1><h2 id="根据主体分表">根据主体分表</h2><p>主体个数较多，为减少单个表内数据量、加快主体查询速度，这里采用了哈希的思路进行分表。具体地，指定分表数目<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>，设计合理的哈希函数，利用主体唯一标识符(例如主体id)查询对应分表表明，将全部主体尽可能平均地划分到各个分表中。例如，我们可以选择如下哈希函数</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>hash</mtext><mo stretchy="false">(</mo><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>hex</mtext><mo stretchy="false">(</mo><mtext>md5</mtext><mo stretchy="false">(</mo><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>d</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi mathvariant="normal">%</mi><mi>N</mi></mrow><annotation encoding="application/x-tex">\text{hash}(subject id) = \text{hex}(\text{md5}(subject id)) \% N </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">hash</span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.05724em;">bj</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">hex</span></span><span class="mopen">(</span><span class="mord text"><span class="mord">md5</span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.05724em;">bj</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mclose">))</span><span class="mord">%</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E8%AE%B0%E4%B8%80%E6%AC%A1MySQL%E8%A7%A3%E5%86%B3%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%97%B6%E7%9A%84%E5%88%86%E8%A1%A8%E9%97%AE%E9%A2%98/1.jpg" alt="1"></p><h2 id="容量可拓展">容量可拓展</h2><p>考虑到主体可能新增或减少，当主体数目较多时还是会存在一张表存储大量主体数据的问题，所以考虑横向容量拓展，即设置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个分表最大可容纳主体数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>，当新增主体id大于该阈值时，向新的“分区”建立分表并写入数据，即</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>table</mtext><mo stretchy="false">(</mo><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>d</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>hash</mtext><mo stretchy="false">(</mo><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>d</mi><mo stretchy="false">)</mo><mo>+</mo><mi>s</mi><mi>u</mi><mi>b</mi><mi>j</mi><mi>e</mi><mi>c</mi><mi>t</mi><mi>i</mi><mi>d</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">/</mi><mi>M</mi></mrow><annotation encoding="application/x-tex">\text{table}(subject id) = \text{hash}(subject id) + subject id // M </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">table</span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.05724em;">bj</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord text"><span class="mord">hash</span></span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.05724em;">bj</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">u</span><span class="mord mathnormal" style="margin-right:0.05724em;">bj</span><span class="mord mathnormal">ec</span><span class="mord mathnormal">t</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord">//</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span></span></p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E8%AE%B0%E4%B8%80%E6%AC%A1MySQL%E8%A7%A3%E5%86%B3%E5%A4%A7%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%97%B6%E7%9A%84%E5%88%86%E8%A1%A8%E9%97%AE%E9%A2%98/2.jpg" alt="2"></p><h1>实现</h1><p>具体代码查看<a href="https://github.com/isLouisHsu/AH/blob/master/abnormal_sequence_detection/vts_database_module.py">vts_database_module.py</a></p><figure class="highlight py"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MySQLdbModule</span>():</span></span><br><span class="line"></span><br><span class="line">    SPLIT_TABLE = <span class="string">&quot;table_#&#123;:04d&#125;&quot;</span></span><br><span class="line"></span><br><span class="line">    ...</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_hash_id</span>(<span class="params">self, subject</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; Hash</span></span><br><span class="line"><span class="string">        Parameters</span></span><br><span class="line"><span class="string">        ----------</span></span><br><span class="line"><span class="string">        subject : &#123;str&#125;</span></span><br><span class="line"><span class="string">        Returns</span></span><br><span class="line"><span class="string">        -------</span></span><br><span class="line"><span class="string">        hash_value : &#123;int&#125;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        md5 = hashlib.md5(subject.encode(encoding=<span class="string">&#x27;UTF-8&#x27;</span>)).hexdigest()</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">int</span>(md5[:<span class="number">2</span>] + md5[-<span class="number">2</span>:], <span class="number">16</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">_table_id</span>(<span class="params">self, subject</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; Get the subject&#x27;s table id</span></span><br><span class="line"><span class="string">        Parameters</span></span><br><span class="line"><span class="string">        ----------</span></span><br><span class="line"><span class="string">        subject : &#123;str&#125;</span></span><br><span class="line"><span class="string">        Returns</span></span><br><span class="line"><span class="string">        -------</span></span><br><span class="line"><span class="string">        table_id : &#123;int&#125;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment"># generate id for subject</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> self._check_if_subject_exists_in_vts_table(subject):</span><br><span class="line">            self._update_subject_table(subject, <span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># query the id of subject</span></span><br><span class="line">        self.cursor.execute(<span class="string">&quot;SELECT `id` FROM `&#123;:s&#125;` WHERE `subject` = &#x27;&#123;:s&#125;&#x27;&quot;</span>.\</span><br><span class="line">                    <span class="built_in">format</span>(self.HOST_TABLE, subject))</span><br><span class="line">        subject_id = self.cursor.fetchall()[<span class="number">0</span>][<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line">        <span class="comment"># hash</span></span><br><span class="line">        table_id = self._hash_id(subject) % self.number_of_split_tables + \</span><br><span class="line">            self.number_of_split_tables * subject_id // self.number_of_subjects_for_expansion</span><br><span class="line">        <span class="keyword">return</span> table_id</span><br><span class="line">    </span><br><span class="line">    <span class="comment"># ----------------------------------------------------</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">get_table_name</span>(<span class="params">self, subject</span>):</span></span><br><span class="line">        <span class="string">&quot;&quot;&quot; Get the subject&#x27;s table name</span></span><br><span class="line"><span class="string">        Parameters</span></span><br><span class="line"><span class="string">        ----------</span></span><br><span class="line"><span class="string">        subject : &#123;str&#125;</span></span><br><span class="line"><span class="string">        Returns</span></span><br><span class="line"><span class="string">        -------</span></span><br><span class="line"><span class="string">        table_name : &#123;str&#125;</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="keyword">return</span> self.SPLIT_TABLE.<span class="built_in">format</span>(self._table_id(subject_name))</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数据 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>grep, sed, awk</title>
      <link href="/2020/05/05/grep-sed-awk.html"/>
      <url>/2020/05/05/grep-sed-awk.html</url>
      
        <content type="html"><![CDATA[<ul><li><a href="#grep-globally-search-a-regular-expression-and-print">grep: Globally search a Regular Expression and Print</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95">基本用法</a></li><li><a href="#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E">参数说明</a></li></ul></li><li><a href="#sed-stream-editor">sed: Stream Editor</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95-1">基本用法</a></li><li><a href="#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E-1">参数说明</a></li><li><a href="#%E7%BC%96%E8%BE%91%E5%91%BD%E4%BB%A4">编辑命令</a></li><li><a href="#%E5%AE%9E%E4%BE%8B">实例</a></li></ul></li><li><a href="#awk--alfred-aho-peter-weinberger-brian-kernighan">awk:  Alfred Aho, Peter Weinberger, Brian Kernighan</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC%E7%94%A8%E6%B3%95-2">基本用法</a></li><li><a href="#%E5%8F%82%E6%95%B0%E8%AF%B4%E6%98%8E-2">参数说明</a></li><li><a href="#%E5%B8%B8%E7%94%A8%E5%86%85%E7%BD%AE%E5%8F%98%E9%87%8F">常用内置变量</a></li><li><a href="#%E8%AF%AD%E6%B3%95">语法</a><ul><li><a href="#%E8%BF%90%E7%AE%97%E7%AC%A6">运算符</a></li><li><a href="#beginend">BEGIN/END</a></li><li><a href="#%E5%88%86%E6%94%AF%E5%BE%AA%E7%8E%AF%E6%95%B0%E7%BB%84">分支、循环、数组</a><ul><li><a href="#%E5%88%86%E6%94%AF-if">分支: if</a></li><li><a href="#%E5%BE%AA%E7%8E%AF-do-while-for">循环: do while, for</a></li><li><a href="#%E6%95%B0%E7%BB%84">数组</a></li></ul></li></ul></li><li><a href="#%E5%B8%B8%E7%94%A8%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%87%BD%E6%95%B0">常用字符串函数</a></li></ul></li></ul><h1><a href="https://www.gnu.org/software/grep/">grep: Globally search a Regular Expression and Print</a></h1><p>强大的文本搜索工具，它能使用特定模式<strong>匹配（包括正则表达式）查找文本</strong>，并默认输出匹配行到STDOUT。</p><h2 id="基本用法">基本用法</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ grep [-abcEFGhHilLnqrsvVwxy][-A&lt;显示列数&gt;][-B&lt;显示列数&gt;][-C&lt;显示列数&gt;][-d&lt;进行动作&gt;][-e&lt;范本样式&gt;][-f&lt;范本文件&gt;][--<span class="built_in">help</span>][范本样式][文件或目录...]</span><br></pre></td></tr></table></figure><h2 id="参数说明">参数说明</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">$ grep --<span class="built_in">help</span></span><br><span class="line">Usage: grep [OPTION]... PATTERN [FILE]...</span><br><span class="line">Search <span class="keyword">for</span> PATTERN <span class="keyword">in</span> each FILE.</span><br><span class="line">Example: grep -i <span class="string">&#x27;hello world&#x27;</span> menu.h main.c</span><br><span class="line"></span><br><span class="line">Pattern selection and interpretation:</span><br><span class="line">  -E, --extended-regexp     PATTERN is an extended regular expression</span><br><span class="line">  -F, --fixed-strings       PATTERN is a <span class="built_in">set</span> of newline-separated strings</span><br><span class="line">  -G, --basic-regexp        PATTERN is a basic regular expression (default)</span><br><span class="line">  -P, --perl-regexp         PATTERN is a Perl regular expression</span><br><span class="line">  -e, --regexp=PATTERN      use PATTERN <span class="keyword">for</span> matching                            <span class="comment"># -e 将PATTERN作为正则表达式</span></span><br><span class="line">  -f, --file=FILE           obtain PATTERN from FILE</span><br><span class="line">  -i, --ignore-case         ignore <span class="keyword">case</span> distinctions                            <span class="comment"># -i 忽略大小写</span></span><br><span class="line">  -w, --word-regexp         force PATTERN to match only whole words</span><br><span class="line">  -x, --line-regexp         force PATTERN to match only whole lines</span><br><span class="line">  -z, --null-data           a data line ends <span class="keyword">in</span> 0 byte, not newline</span><br><span class="line"></span><br><span class="line">Miscellaneous:</span><br><span class="line">  -s, --no-messages         suppress error messages</span><br><span class="line">  -v, --invert-match        select non-matching lines                           <span class="comment"># -v 反向匹配，输出不包含PATTERN的文本行</span></span><br><span class="line">  -V, --version             display version information and <span class="built_in">exit</span></span><br><span class="line">      --<span class="built_in">help</span>                display this <span class="built_in">help</span> text and <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">Output control:</span><br><span class="line">  -m, --max-count=NUM       stop after NUM selected lines</span><br><span class="line">  -b, --byte-offset         <span class="built_in">print</span> the byte offset with output lines</span><br><span class="line">  -n, --line-number         <span class="built_in">print</span> line number with output lines                 <span class="comment"># -n 输出匹配的文本行的行标</span></span><br><span class="line">      --line-buffered       flush output on every line</span><br><span class="line">  -H, --with-filename       <span class="built_in">print</span> file name with output lines</span><br><span class="line">  -h, --no-filename         suppress the file name prefix on output</span><br><span class="line">      --label=LABEL         use LABEL as the standard input file name prefix</span><br><span class="line">  -o, --only-matching       show only the part of a line matching PATTERN</span><br><span class="line">  -q, --quiet, --silent     suppress all normal output</span><br><span class="line">      --binary-files=TYPE   assume that binary files are TYPE;</span><br><span class="line">                            TYPE is <span class="string">&#x27;binary&#x27;</span>, <span class="string">&#x27;text&#x27;</span>, or <span class="string">&#x27;without-match&#x27;</span></span><br><span class="line">  -a, --text                equivalent to --binary-files=text                   <span class="comment"># -a 将二进制文件内容作为text进行搜索</span></span><br><span class="line">  -I                        equivalent to --binary-files=without-match</span><br><span class="line">  -d, --directories=ACTION  how to handle directories;</span><br><span class="line">                            ACTION is <span class="string">&#x27;read&#x27;</span>, <span class="string">&#x27;recurse&#x27;</span>, or <span class="string">&#x27;skip&#x27;</span></span><br><span class="line">  -D, --devices=ACTION      how to handle devices, FIFOs and sockets;</span><br><span class="line">                            ACTION is <span class="string">&#x27;read&#x27;</span> or <span class="string">&#x27;skip&#x27;</span></span><br><span class="line">  -r, --recursive           like --directories=recurse                          <span class="comment"># -r 在目录下递归搜索</span></span><br><span class="line">  -R, --dereference-recursive  likewise, but follow all symlinks</span><br><span class="line">      --include=FILE_PATTERN  search only files that match FILE_PATTERN</span><br><span class="line">      --exclude=FILE_PATTERN  skip files and directories matching FILE_PATTERN</span><br><span class="line">      --exclude-from=FILE   skip files matching any file pattern from FILE</span><br><span class="line">      --exclude-dir=PATTERN  directories that match PATTERN will be skipped.</span><br><span class="line">  -L, --files-without-match  <span class="built_in">print</span> only names of FILEs with no selected lines   <span class="comment"># -L 输出不包含能匹配PATTERN内容的文件名</span></span><br><span class="line">  -l, --files-with-matches  <span class="built_in">print</span> only names of FILEs with selected lines       <span class="comment"># -l 输出包含能匹配PATTERN内容的文件名</span></span><br><span class="line">  -c, --count               <span class="built_in">print</span> only a count of selected lines per FILE       <span class="comment"># -c 输出匹配到的文本行的数目</span></span><br><span class="line">  -T, --initial-tab         make tabs line up (<span class="keyword">if</span> needed)</span><br><span class="line">  -Z, --null                <span class="built_in">print</span> 0 byte after FILE name</span><br><span class="line"></span><br><span class="line">Context control:</span><br><span class="line">  -B, --before-context=NUM  <span class="built_in">print</span> NUM lines of leading context                  <span class="comment"># -B 显示查找到的某行字符串外，还显示之前&lt;NUM&gt;行</span></span><br><span class="line">  -A, --after-context=NUM   <span class="built_in">print</span> NUM lines of trailing context                 <span class="comment"># -A 显示查找到的某行字符串外，还显示随后&lt;NUM&gt;行</span></span><br><span class="line">  -C, --context=NUM         <span class="built_in">print</span> NUM lines of output context                   <span class="comment"># -C 显示查找到的某行字符串外，还显示之前和随后&lt;NUM&gt;行</span></span><br><span class="line">  -NUM                      same as --context=NUM</span><br><span class="line">      --color[=WHEN],</span><br><span class="line">      --colour[=WHEN]       use markers to highlight the matching strings;</span><br><span class="line">                            WHEN is <span class="string">&#x27;always&#x27;</span>, <span class="string">&#x27;never&#x27;</span>, or <span class="string">&#x27;auto&#x27;</span></span><br><span class="line">  -U, --binary              <span class="keyword">do</span> not strip CR characters at EOL (MSDOS/Windows)</span><br><span class="line"></span><br><span class="line">When FILE is <span class="string">&#x27;-&#x27;</span>, <span class="built_in">read</span> standard input.  With no FILE, <span class="built_in">read</span> <span class="string">&#x27;.&#x27;</span> <span class="keyword">if</span></span><br><span class="line">recursive, <span class="string">&#x27;-&#x27;</span> otherwise.  With fewer than two FILEs, assume -h.</span><br><span class="line">Exit status is 0 <span class="keyword">if</span> any line is selected, 1 otherwise;</span><br><span class="line"><span class="keyword">if</span> any error occurs and -q is not given, the <span class="built_in">exit</span> status is 2.</span><br><span class="line"></span><br><span class="line">Report bugs to: bug-grep@gnu.org</span><br><span class="line">GNU grep home page: &lt;http://www.gnu.org/software/grep/&gt;</span><br><span class="line">General <span class="built_in">help</span> using GNU software: &lt;http://www.gnu.org/gethelp/&gt;</span><br></pre></td></tr></table></figure><h1>sed: Stream Editor</h1><p>利用脚本来<strong>编辑文本文件</strong>，主要用来自动编辑一个或多个文件，简化对文件的反复操作、编写转换程序等。它执行的操作为</p><ol><li>一次从输入中读取一行数据；</li><li>根据提供的编辑器命令匹配数据；</li><li>按照命令修改流中的数据；</li><li>将新的数据输出到STDOUT，不改变原来的文本文件。</li></ol><h2 id="基本用法-2">基本用法</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sed [-e &lt;script&gt;][-f &lt;script文件&gt;][文本文件]</span><br></pre></td></tr></table></figure><ul><li><code>&lt;script&gt;</code>为字符串格式的编辑命令，多条命令间以<code>;</code>分隔，或者用<code>bash</code>中的次提示符分隔命令；</li><li><code>&lt;script文件&gt;</code>表示记录编辑命令的文件名，为与<code>shell</code>脚本区分，一般用<code>.sed</code>作为文件后缀名</li></ul><h2 id="参数说明-2">参数说明</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sed --<span class="built_in">help</span></span></span><br><span class="line">Usage: sed [OPTION]... &#123;script-only-if-no-other-script&#125; [input-file]...</span><br><span class="line"></span><br><span class="line">  -n, --quiet, --silent</span><br><span class="line">                 suppress automatic printing of pattern space</span><br><span class="line">  -e script, --expression=script                                            # -e 从命令行读取执行命令，单条编辑命令时可省略</span><br><span class="line">                 add the script to the commands to be executed</span><br><span class="line">  -f script-file, --file=script-file                                        # -f 从文件中读取执行命令</span><br><span class="line">                 add the contents of script-file to the commands to be executed</span><br><span class="line">  --follow-symlinks</span><br><span class="line">                 follow symlinks when processing in place</span><br><span class="line">  -i[SUFFIX], --in-place[=SUFFIX]                                           # -i 直接修改文本内容</span><br><span class="line">                 edit files in place (makes backup if SUFFIX supplied)</span><br><span class="line">  -l N, --line-length=N</span><br><span class="line">                 specify the desired line-wrap length for the `l&#x27; command</span><br><span class="line">  --posix</span><br><span class="line">                 disable all GNU extensions.</span><br><span class="line">  -E, -r, --regexp-extended</span><br><span class="line">                 use extended regular expressions in the script</span><br><span class="line">                 (for portability use POSIX -E).</span><br><span class="line">  -s, --separate</span><br><span class="line">                 consider files as separate rather than as a single,</span><br><span class="line">                 continuous long stream.</span><br><span class="line">      --sandbox</span><br><span class="line">                 operate in sandbox mode.</span><br><span class="line">  -u, --unbuffered</span><br><span class="line">                 load minimal amounts of data from the input files and flush</span><br><span class="line">                 the output buffers more often</span><br><span class="line">  -z, --null-data</span><br><span class="line">                 separate lines by NUL characters</span><br><span class="line">      --help     display this help and exit</span><br><span class="line">      --version  output version information and exit</span><br><span class="line"></span><br><span class="line">If no -e, --expression, -f, or --file option is given, then the first</span><br><span class="line">non-option argument is taken as the sed script to interpret.  All</span><br><span class="line">remaining arguments are names of input files; if no input files are</span><br><span class="line">specified, then the standard input is read.</span><br><span class="line"></span><br><span class="line">GNU sed home page: &lt;http://www.gnu.org/software/sed/&gt;.</span><br><span class="line">General help using GNU software: &lt;http://www.gnu.org/gethelp/&gt;.</span><br><span class="line">E-mail bug reports to: &lt;bug-sed@gnu.org&gt;.</span><br></pre></td></tr></table></figure><h2 id="编辑命令">编辑命令</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># `a`: 在指定行后添加行，注意若希望添加多行，行间用`\n`进行分隔，而开头和结尾无需添加`\n`；</span></span><br><span class="line">$ sed -e <span class="string">&quot;FROM[,TO] a [CONTENT]&quot;</span> FILENAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># `i`: 在指定行前添加行</span></span><br><span class="line">$ sed -e <span class="string">&quot;FROM[,TO] i [CONTENT]&quot;</span> FILENAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># `d`: 将指定行删除</span></span><br><span class="line">$ sed -e <span class="string">&quot;FROM[,TO] d&quot;</span> FILENAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># `c`: 取代指定行内容</span></span><br><span class="line">$ sed -e <span class="string">&quot;FROM[,TO] c [CONTENT]&quot;</span> FILENAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># `s`: 部分数据的搜索和取代</span></span><br><span class="line">$ sed -e <span class="string">&quot;FROM[,TO] s/[PATTERN]/[CONTENT]/g&quot;</span> FILENAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># `p`: 打印输出指定行</span></span><br><span class="line">$ sed -n -e <span class="string">&quot;FROM[,TO] p&quot;</span> FILENAME</span><br><span class="line"></span><br><span class="line"><span class="comment"># `q`: 退出，终止命令</span></span><br><span class="line">$ sed -e <span class="string">&quot;[COMMANDS;]q&quot;</span> FILENAME</span><br></pre></td></tr></table></figure><h2 id="实例">实例</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 新建文本`test_sed.txt`</span></span><br><span class="line">$ <span class="keyword">for</span> (( i=1; i&lt;=5; i++ )) &#123;</span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;line <span class="variable">$i</span>&quot;</span> &gt;&gt; test_sed.txt</span><br><span class="line">&gt; &#125;</span><br><span class="line">$ cat test_sed.txt</span><br><span class="line">line 1</span><br><span class="line">line 2</span><br><span class="line">line 3</span><br><span class="line">line 4</span><br><span class="line">line 5</span><br><span class="line"></span><br><span class="line"><span class="comment"># ================= 基本操作 ==================</span></span><br><span class="line"><span class="comment"># ------------------ 打印行 -------------------</span></span><br><span class="line"><span class="comment"># 输出第3~5行，若不添加`-n`会输出全部内容</span></span><br><span class="line">$ sed -n -e <span class="string">&quot;3,5 p&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># ------------------ 添加行 -------------------</span></span><br><span class="line"><span class="comment"># 在第3行后添加一行</span></span><br><span class="line">$ sed -e <span class="string">&quot;3 a newline&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># 在3~5每行后添加一行</span></span><br><span class="line">$ sed -e <span class="string">&quot;3,5 a newline&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># ------------------ 插入行 -------------------</span></span><br><span class="line"><span class="comment"># 在第3行前添加一行</span></span><br><span class="line">$ sed -e <span class="string">&quot;3 i newline&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># 在第3行后添加两行</span></span><br><span class="line">$ sed -e <span class="string">&quot;3 a newline1\nnewline2&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># ------------------ 删除行 -------------------</span></span><br><span class="line"><span class="comment"># 删除第3行</span></span><br><span class="line">$ sed -e <span class="string">&quot;3 d&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># 删除第3~5行</span></span><br><span class="line">$ sed -e <span class="string">&quot;3,5 d&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># 删除第3行到最后行</span></span><br><span class="line">$ sed -e <span class="string">&quot;3,$ d&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># ------------------ 替换行 -------------------</span></span><br><span class="line"><span class="comment"># 替换第3行</span></span><br><span class="line">$ sed -e <span class="string">&quot;3 c replace&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># 替换第3~5行</span></span><br><span class="line">$ sed -e <span class="string">&quot;3,5 c replace&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># ------------- 查找替换部分文本 ---------------</span></span><br><span class="line"><span class="comment"># 替换第3行中的`li`为`LI`</span></span><br><span class="line">$ sed -e <span class="string">&quot;3 s/li/LI/g&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># ----------------- 多点编辑 ------------------</span></span><br><span class="line"><span class="comment"># 删除第3行到末尾行内容，并把`line`替换为`LINE`</span></span><br><span class="line">$ sed -e <span class="string">&quot;3,$ d; s/line/LINE/g&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line">$ $ sed -e <span class="string">&quot;3,$ d&quot;</span> -e <span class="string">&quot;s/line/LINE/g&quot;</span> test_sed.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># ============== 搜索并执行命令 ===============</span></span><br><span class="line"><span class="comment"># ---------------- 打印匹配行 -----------------</span></span><br><span class="line"><span class="comment"># 输出包含`3`的关键行，若不添加`-n`同时会输出所有行</span></span><br><span class="line">$ sed -n -e <span class="string">&quot;/3/p&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># ---------------- 删除匹配行 -----------------</span></span><br><span class="line"><span class="comment"># 删除包含`3`的关键行</span></span><br><span class="line">$ sed -e <span class="string">&quot;/3/d&quot;</span> test_sed</span><br><span class="line"><span class="comment"># ---------------- 替换匹配行 -----------------</span></span><br><span class="line"><span class="comment"># 将包含`3`的关键行中，`line`替换为`this line`</span></span><br><span class="line">$ sed -e <span class="string">&quot;/3/&#123;s/line/this line/&#125;&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># 将包含`3`的关键行中，`line`替换为`this line`，并且只输出该行</span></span><br><span class="line">$ sed -n -e <span class="string">&quot;/3/&#123;s/line/this line/; p; &#125;&quot;</span> test_sed.txt</span><br><span class="line"></span><br><span class="line"><span class="comment"># =============== in-place操作 ===============</span></span><br><span class="line"><span class="comment"># 直接修改文本内容，`line`替换为`this line`</span></span><br><span class="line">$ sed -i -e <span class="string">&quot;s/line/LINE/g&quot;</span> test_sed.txt</span><br><span class="line"><span class="comment"># 注意重定向操作可能出现错误</span></span><br><span class="line">$ sed -e <span class="string">&quot;s/line/LINE/g&quot;</span> test_sed.txt &gt;  test_sed.txt   <span class="comment"># 导致文本为空</span></span><br><span class="line">$ sed -e <span class="string">&quot;s/line/LINE/g&quot;</span> test_sed.txt &gt;&gt; test_sed.txt   <span class="comment"># 正常追加</span></span><br></pre></td></tr></table></figure><h1>awk:  Alfred Aho, Peter Weinberger, Brian Kernighan</h1><p>逐行扫描指定文件，寻<strong>找匹配特定模式的行，并在这些行上进行想要的操作</strong>。若未指定匹配模式，将会对所有行进行操作(即默认全部行)；若未指定处理方法，将会被输出到STDOUT(即默认为<code>print</code>)。</p><h2 id="基本用法-3">基本用法</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">awk [选项参数] <span class="string">&#x27;script&#x27;</span> var=value file(s)</span><br><span class="line">或</span><br><span class="line">awk [选项参数] -f scriptfile var=value file(s)</span><br></pre></td></tr></table></figure><h2 id="参数说明-3">参数说明</h2><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">$ awk --<span class="built_in">help</span></span><br><span class="line">Usage: awk [POSIX or GNU style options] -f progfile [--] file ...</span><br><span class="line">Usage: awk [POSIX or GNU style options] [--] <span class="string">&#x27;program&#x27;</span> file ...</span><br><span class="line">POSIX options:          GNU long options: (standard)</span><br><span class="line">        -f progfile             --file=progfile         <span class="comment"># 从文本读取awk命令</span></span><br><span class="line">        -F fs                   --field-separator=fs    <span class="comment"># 字符分隔符，即改行文本以该符号作为分隔，例如$PATH中的`:`</span></span><br><span class="line">        -v var=val              --assign=var=val</span><br><span class="line">Short options:          GNU long options: (extensions)</span><br><span class="line">        -b                      --characters-as-bytes</span><br><span class="line">        -c                      --traditional</span><br><span class="line">        -C                      --copyright</span><br><span class="line">        -d[file]                --dump-variables[=file]</span><br><span class="line">        -D[file]                --debug[=file]</span><br><span class="line">        -e <span class="string">&#x27;program-text&#x27;</span>       --<span class="built_in">source</span>=<span class="string">&#x27;program-text&#x27;</span></span><br><span class="line">        -E file                 --<span class="built_in">exec</span>=file</span><br><span class="line">        -g                      --gen-pot</span><br><span class="line">        -h                      --<span class="built_in">help</span></span><br><span class="line">        -i includefile          --include=includefile</span><br><span class="line">        -l library              --load=library</span><br><span class="line">        -L[fatal|invalid]       --lint[=fatal|invalid]</span><br><span class="line">        -M                      --bignum</span><br><span class="line">        -N                      --use-lc-numeric</span><br><span class="line">        -n                      --non-decimal-data</span><br><span class="line">        -o[file]                --pretty-print[=file]</span><br><span class="line">        -O                      --optimize</span><br><span class="line">        -p[file]                --profile[=file]</span><br><span class="line">        -P                      --posix</span><br><span class="line">        -r                      --re-interval</span><br><span class="line">        -S                      --sandbox</span><br><span class="line">        -t                      --lint-old</span><br><span class="line">        -V                      --version</span><br><span class="line"></span><br><span class="line">To report bugs, see node `Bugs<span class="string">&#x27; in `gawk.info&#x27;</span>, <span class="built_in">which</span> is</span><br><span class="line">section `Reporting Problems and Bugs<span class="string">&#x27; in the printed version.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">gawk is a pattern scanning and processing language.</span></span><br><span class="line"><span class="string">By default it reads standard input and writes standard output.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Examples:</span></span><br><span class="line"><span class="string">        gawk &#x27;</span>&#123; sum += <span class="variable">$1</span> &#125;; END &#123; <span class="built_in">print</span> sum &#125;<span class="string">&#x27; file</span></span><br><span class="line"><span class="string">        gawk -F: &#x27;</span>&#123; <span class="built_in">print</span> <span class="variable">$1</span> &#125;<span class="string">&#x27; /etc/passwd</span></span><br></pre></td></tr></table></figure><h2 id="常用内置变量">常用内置变量</h2><table><thead><tr><th>变量名</th><th>说明</th></tr></thead><tbody><tr><td>$0</td><td>当前记录</td></tr><tr><td>$1 ~ $n</td><td>当前记录被FS分隔后，第n个字段</td></tr><tr><td>NF</td><td>当前记录中字段个数</td></tr><tr><td>NR</td><td>已经读出的记录数</td></tr><tr><td>FS</td><td>字段分隔符，默认为空格</td></tr><tr><td>RS</td><td>记录分隔符，默认为换行符</td></tr><tr><td>OFS</td><td>输出字段分隔符，默认为空格</td></tr><tr><td>ORS</td><td>输出记录分隔符，默认为换行符</td></tr></tbody></table><blockquote><p>默认情况下，按换行符分隔记录、按空格分隔字段，即记录为单行文本、字段为文本单词。</p></blockquote><h2 id="语法">语法</h2><h3 id="运算符">运算符</h3><table><thead><tr><th>运算符</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>赋值</td></tr><tr><td>+=, -=, *=, %=, ^=, **=</td><td>赋值运算</td></tr><tr><td>||, &amp;&amp;, !</td><td>逻辑或，逻辑与，逻辑非</td></tr><tr><td>~, !~</td><td>匹配和不匹配正则表达式</td></tr><tr><td>&lt;, &lt;=, &gt;=, !=, ==</td><td>关系运算符；可以作为字符串比较，也可以用作数值比较；两个都为数字才为数值比较；字符串按字典序比较</td></tr><tr><td>+, -, *, /</td><td>加减乘除，所有用作算术运算符进行操作，操作数自动转为数值，<strong>所有非数值都变为0</strong></td></tr><tr><td>&amp;</td><td>求余</td></tr><tr><td>^, ***</td><td>求幂</td></tr><tr><td>++, –</td><td>前缀或后缀自增、自减</td></tr><tr><td>$n</td><td>字段引用</td></tr><tr><td>空格</td><td>字符串连接符</td></tr><tr><td>?:</td><td>三目运算符</td></tr><tr><td>ln</td><td>数组中是否存在某键值</td></tr></tbody></table><h3 id="BEGIN-END">BEGIN/END</h3><p>在<code>BEGIN/END</code>代码块内的命令，只会在开始/结束处理输入文件的文本时执行一次。<code>BEGIN</code>块一般用作初始化<code>FS</code>、打印页眉、初始化全局变量等；<code>END</code>一般用于打印计算结果或输出摘要。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 统计`/etc/passwd`记录数</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;count = 0&#125; &#123;count++&#125; END&#123;print count&#125;&#x27;</span> /etc/passwd</span><br><span class="line"></span><br><span class="line"><span class="comment"># 统计`/etc/passwd`字段数</span></span><br><span class="line">$ awk <span class="string">&#x27;BEGIN&#123;count = 0; FS=&quot;:&quot;&#125; &#123;count += NF&#125; END&#123;print count&#125;&#x27;</span> /etc/passwd</span><br></pre></td></tr></table></figure><h3 id="分支、循环、数组">分支、循环、数组</h3><h4 id="分支-if">分支: if</h4><p>类似C的<code>if</code>语句</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.awk</span><br><span class="line">BEGIN &#123;</span><br><span class="line">        FS = <span class="string">&quot;:&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$1</span> == <span class="string">&quot;louishsu&quot;</span>)&#123;</span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$2</span> == <span class="string">&quot;x&quot;</span>)&#123;</span><br><span class="line">                        <span class="built_in">print</span> <span class="string">&quot;louishsu x&quot;</span></span><br><span class="line">                &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                        <span class="built_in">print</span> <span class="string">&quot;louishsu _&quot;</span></span><br><span class="line">                &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> ( <span class="variable">$1</span> == <span class="string">&quot;mysql&quot;</span>)&#123;</span><br><span class="line">                <span class="built_in">print</span> <span class="string">&quot;mysql&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ awk -f test.awk /etc/passwd</span><br></pre></td></tr></table></figure><h4 id="循环-do-while-for">循环: do while, for</h4><p>可通过<code>break/continue</code>控制循环</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.awk</span><br><span class="line">BEGIN &#123;</span><br><span class="line">        FS = <span class="string">&quot;:&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;----------------&quot;</span></span><br><span class="line">        count = 0</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">                <span class="built_in">print</span> <span class="variable">$count</span></span><br><span class="line">                count++</span><br><span class="line">        &#125; <span class="keyword">while</span> (count &lt; 3)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$ awk -f test.awk /etc/passwd</span><br></pre></td></tr></table></figure><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.awk</span><br><span class="line">BEGIN &#123;</span><br><span class="line">        FS = <span class="string">&quot;:&quot;</span></span><br><span class="line">&#125;</span><br><span class="line">&#123;</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&quot;----------------&quot;</span></span><br><span class="line">        <span class="keyword">for</span> (count = 0; count &lt; 3; count++) &#123;</span><br><span class="line">                <span class="built_in">print</span> <span class="variable">$count</span></span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="数组">数组</h4><p><code>awk</code>中的数组都是关联数组，数字索引也会转变为字符串索引</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.awk</span><br><span class="line">&#123;</span><br><span class="line">    cities[1] = <span class="string">&quot;beijing&quot;</span></span><br><span class="line">    cities[2] = <span class="string">&quot;shanghai&quot;</span></span><br><span class="line">    cities[<span class="string">&quot;three&quot;</span>] = <span class="string">&quot;guangzhou&quot;</span></span><br><span class="line">    <span class="keyword">for</span>( c <span class="keyword">in</span> cities) &#123;</span><br><span class="line">        <span class="built_in">print</span> cities[c]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">print</span> cities[1]</span><br><span class="line">    <span class="built_in">print</span> cities[<span class="string">&quot;1&quot;</span>]</span><br><span class="line">    <span class="built_in">print</span> cities[<span class="string">&quot;three&quot;</span>]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="常用字符串函数">常用字符串函数</h2><table><thead><tr><th>函数</th><th>说明</th></tr></thead><tbody><tr><td><code>sub(r, s, [t])</code></td><td>在整个<code>t</code>中，用<code>s</code>代替<code>r</code>；<code>t</code>缺省为<code>$0</code>；返回替换数量</td></tr><tr><td><code>gsub(r, s, [t])</code></td><td><code>r</code>被作为正则表达式，其余同<code>sub</code>函数</td></tr><tr><td><code>index(s1, s2)</code></td><td>查找并返回<code>s2</code>在<code>s1</code>中的位置(从1开始编号)；若不存在则返回0</td></tr><tr><td><code>match(s, r)</code></td><td>在<code>s</code>中匹配正则表达式<code>r</code>(从1开始编号)；若未找到匹配返回-1</td></tr><tr><td><code>length [(s)]</code></td><td>返回<code>s</code>字符串长度，缺省为<code>$0</code></td></tr><tr><td><code>substr(s, m, [n])</code></td><td>返回从<code>m</code>开始，长度为<code>n</code>的子字符串；不指定<code>n</code>截取到字符串末尾</td></tr><tr><td><code>split(s, a, [r])</code></td><td>根据<code>r</code>指定的拓展正则表达式或<code>FS</code>，将字符串<code>s</code>分割为数组元素<code>a[1], a[2], ..., a[n]</code>；返回<code>n</code></td></tr><tr><td><code>tolower(s), toupper(s)</code></td><td>全部转换为小写/大写字母，大小写映射由当前语言环境的<code>LC_CTYPE</code>范畴定义</td></tr><tr><td><code>sprintf(fmt, ...)</code></td><td>根据<code>fmt</code>格式化字符串并返回</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Shell Programming</title>
      <link href="/2020/05/04/Shell-Programming.html"/>
      <url>/2020/05/04/Shell-Programming.html</url>
      
        <content type="html"><![CDATA[<h1>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#shell%E5%9F%BA%E7%A1%80">Shell基础</a><ul><li><a href="#%E5%B8%B8%E7%94%A8%E6%8C%87%E4%BB%A4">常用指令</a></li><li><a href="#%E7%88%B6%E5%AD%90shell">父子shell</a></li><li><a href="#%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F">环境变量</a></li><li><a href="#%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91">输入/输出重定向</a><ul><li><a href="#%E6%89%A7%E8%A1%8C%E6%97%B6%E9%87%8D%E5%AE%9A%E5%90%91">执行时重定向</a><ul><li><a href="#%E8%BE%93%E5%85%A5%E9%87%8D%E5%AE%9A%E5%90%91">输入重定向</a></li><li><a href="#%E8%BE%93%E5%87%BA%E9%87%8D%E5%AE%9A%E5%90%91">输出重定向</a></li><li><a href="#%E9%94%99%E8%AF%AF%E9%87%8D%E5%AE%9A%E5%90%91">错误重定向</a></li></ul></li><li><a href="#%E8%84%9A%E6%9C%AC%E4%B8%AD%E9%87%8D%E5%AE%9A%E5%90%91">脚本中重定向</a><ul><li><a href="#%E8%BE%93%E5%85%A5%E8%BE%93%E5%87%BA">输入/输出</a></li><li><a href="#%E8%87%AA%E5%AE%9A%E4%B9%89%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6">自定义文件描述符</a></li><li><a href="#%E9%87%8D%E5%AE%9A%E5%90%91%E5%88%B0%E5%B7%B2%E6%9C%89%E6%96%87%E4%BB%B6%E6%8F%8F%E8%BF%B0%E7%AC%A6">重定向到已有文件描述符</a></li></ul></li></ul></li><li><a href="#%E7%AE%A1%E9%81%93">管道</a></li></ul></li><li><a href="#%E5%8F%98%E9%87%8F">变量</a><ul><li><a href="#%E5%AD%97%E7%AC%A6%E4%B8%B2">字符串</a></li><li><a href="#%E5%8F%98%E9%87%8F%E5%8F%82%E6%95%B0">变量参数</a></li><li><a href="#%E6%95%B0%E7%BB%84%E5%8F%82%E6%95%B0">数组参数</a></li></ul></li><li><a href="#%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92">参数传递</a><ul><li><a href="#%E4%BD%8D%E7%BD%AE%E5%8F%82%E6%95%B0">位置参数</a></li><li><a href="#%E5%91%BD%E5%90%8D%E5%8F%82%E6%95%B0">命名参数</a></li></ul></li><li><a href="#%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5">用户输入</a><ul><li><a href="#%E5%9F%BA%E6%9C%AC%E8%BE%93%E5%85%A5-read">基本输入: read</a></li><li><a href="#%E6%96%87%E4%BB%B6%E8%BE%93%E5%85%A5-cat--read">文件输入: cat | read</a></li></ul></li><li><a href="#%E8%84%9A%E6%9C%AC%E9%80%80%E5%87%BA-exit">脚本退出: exit</a></li><li><a href="#%E5%91%BD%E4%BB%A4%E6%9B%BF%E6%8D%A2--command-">命令替换: ( command )</a></li><li><a href="#%E8%BF%90%E7%AE%97%E5%92%8C%E6%B5%8B%E8%AF%95">运算和测试</a><ul><li><a href="#%E6%95%B0%E5%AD%A6%E8%BF%90%E7%AE%97">数学运算</a><ul><li><a href="#-expr-expression-">$( expr expression )</a></li><li><a href="#-expression-">$[ expression ]</a></li><li><a href="#let-expression--expression-">let expression, $(( expression ))</a></li><li><a href="#%E5%86%85%E5%BB%BA%E8%AE%A1%E7%AE%97%E5%99%A8bc">内建计算器bc</a></li></ul></li><li><a href="#%E6%B5%8B%E8%AF%95%E5%91%BD%E4%BB%A4-test-expression--expression-">测试命令: test expression, [ expression ]</a><ul><li><a href="#%E6%95%B0%E5%80%BC%E6%B5%8B%E8%AF%95--eq--ne--gt--ge--lt--le">数值测试: -eq, -ne, -gt, -ge, -lt, -le</a></li><li><a href="#%E5%AD%97%E7%AC%A6%E6%B5%8B%E8%AF%95------n---z">字符测试: =, !=, &lt;, &gt;, -n  -z</a></li><li><a href="#%E6%96%87%E4%BB%B6%E6%B5%8B%E8%AF%95--e--d--f-">文件测试: -e, -d, -f, …</a></li><li><a href="#%E5%A4%8D%E5%90%88%E6%9D%A1%E4%BB%B6%E6%B5%8B%E8%AF%95---o----a--">复合条件测试: !, -o / ||, -a / &amp;&amp;</a></li></ul></li></ul></li><li><a href="#%E7%BB%93%E6%9E%84%E5%8C%96%E5%91%BD%E4%BB%A4">结构化命令</a><ul><li><a href="#%E5%88%86%E6%94%AF">分支</a><ul><li><a href="#if-then-elif-else-fi">if-then-elif-else-fi</a></li><li><a href="#case-in">case-in</a></li></ul></li><li><a href="#%E5%BE%AA%E7%8E%AF">循环</a><ul><li><a href="#for-do-done">for-do-done</a></li><li><a href="#while-do-done">while-do-done</a></li><li><a href="#until-do-done">until-do-done</a></li><li><a href="#%E5%BE%AA%E7%8E%AF%E6%8E%A7%E5%88%B6-break-continue">循环控制: break, continue</a></li></ul></li></ul></li><li><a href="#%E5%87%BD%E6%95%B0">函数</a><ul><li><a href="#%E5%88%9B%E5%BB%BA%E5%92%8C%E8%B0%83%E7%94%A8%E5%87%BD%E6%95%B0">创建和调用函数</a></li><li><a href="#%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92-1">参数传递</a><ul><li><a href="#%E4%BD%9C%E7%94%A8%E5%9F%9F-local">作用域: local</a></li><li><a href="#%E5%8F%98%E9%87%8F%E5%8F%82%E6%95%B0-1">变量参数</a></li><li><a href="#%E6%95%B0%E7%BB%84%E5%8F%82%E6%95%B0-1">数组参数</a></li></ul></li><li><a href="#%E8%BF%94%E5%9B%9E%E5%80%BC-return-echo">返回值: return, echo</a></li></ul></li><li><a href="#%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB-source">文件包含: source</a></li><li><a href="#%E6%80%BB%E7%BB%93">总结</a></li></ul><h1>Shell基础</h1><h2 id="常用指令">常用指令</h2><p><a href="https://www.runoob.com/linux/linux-command-manual.html">Linux 命令大全 - 菜鸟教程</a></p><h2 id="父子shell">父子shell</h2><p>在当前shell中打开其他shell时，会创建新的shell程序，称为子shell(chile shell)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">$ ps --forest</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">    6 tty1     00:00:00 bash</span><br><span class="line">   66 tty1     00:00:00  \_ ps</span><br><span class="line">$ bash          <span class="comment"># 子shell1</span></span><br><span class="line">$ ps --forest</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">    6 tty1     00:00:00 bash</span><br><span class="line">   75 tty1     00:00:00  \_ bash</span><br><span class="line">  125 tty1     00:00:00      \_ ps</span><br><span class="line">$ bash          <span class="comment"># 子shell1的子shell</span></span><br><span class="line">$ ps --forest</span><br><span class="line">  PID TTY          TIME CMD</span><br><span class="line">    6 tty1     00:00:00 bash</span><br><span class="line">   75 tty1     00:00:00  \_ bash</span><br><span class="line">  126 tty1     00:00:00      \_ bash</span><br><span class="line">  174 tty1     00:00:00          \_ ps</span><br><span class="line">$ <span class="built_in">exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">$ <span class="built_in">exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>通过<strong>进程列表</strong>调用命令可创建子shell，将多条命令以<code>';'</code>作为间隔，放置在<code>'()'</code>中执行。进程列表是一种命令分组，另一种命令分组是在<code>'&#123;&#125;'</code>中执行，但不会创建子shell。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">pwd</span>; ls; ps -f; <span class="built_in">echo</span> <span class="variable">$BASH_SUBSHELL</span></span><br><span class="line">/home/louishsu</span><br><span class="line">Downloads  anaconda3  backup</span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">louishsu     6     5  0 09:35 tty1     00:00:00 -bash</span><br><span class="line">louishsu   176     6  0 09:48 tty1     00:00:00 ps -f</span><br><span class="line">0</span><br><span class="line">$ <span class="comment"># 进程列表</span></span><br><span class="line">$ (<span class="built_in">pwd</span>; ls; ps -f; <span class="built_in">echo</span> <span class="variable">$BASH_SUBSHELL</span>)</span><br><span class="line">/home/louishsu</span><br><span class="line">Downloads  anaconda3  backup</span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">louishsu     6     5  0 09:35 tty1     00:00:00 -bash</span><br><span class="line">louishsu   177     6  0 09:49 tty1     00:00:00 -bash   <span class="comment"># 创建了子shell</span></span><br><span class="line">louishsu   179   177  0 09:49 tty1     00:00:00 ps -f</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p>在shell脚本中，经常使用子shell进行<strong>多进程处理</strong>，但是会明显拖慢处理速度，一种高效的使用方法是<strong>后台模式</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># 将命令置入后台模式</span></span><br><span class="line">$ sleep 10 &amp;    <span class="comment"># 置入后台，终端仍可I/O</span></span><br><span class="line">[1] 191</span><br><span class="line">$ ps -f</span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">louishsu     6     5  0 09:35 tty1     00:00:00 -bash</span><br><span class="line">louishsu   191     6  0 09:51 tty1     00:00:00 sleep 10</span><br><span class="line">louishsu   192     6  0 09:51 tty1     00:00:00 ps -f</span><br><span class="line">$ <span class="built_in">jobs</span></span><br><span class="line">[1]+  Running                 sleep 10 &amp;</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 将进程列表置入后台模式</span></span><br><span class="line">$ (sleep 10 ; <span class="built_in">echo</span> <span class="variable">$BASH_SUBSHELL</span> ; sleep 10) &amp;</span><br><span class="line">[2] 193</span><br><span class="line">[1]   Done                    sleep 10</span><br><span class="line">$ ps -f</span><br><span class="line">UID        PID  PPID  C STIME TTY          TIME CMD</span><br><span class="line">louishsu     6     5  0 09:35 tty1     00:00:00 -bash</span><br><span class="line">louishsu   193     6  0 09:53 tty1     00:00:00 -bash   <span class="comment"># 创建了子shell</span></span><br><span class="line">louishsu   194   193  1 09:53 tty1     00:00:00 sleep 10</span><br><span class="line">louishsu   195     6  0 09:53 tty1     00:00:00 ps -f</span><br><span class="line">$ <span class="built_in">jobs</span></span><br><span class="line">[2]+  Running                 ( sleep 10; <span class="built_in">echo</span> <span class="variable">$BASH_SUBSHELL</span>; sleep 10 ) &amp;</span><br></pre></td></tr></table></figure><h2 id="环境变量">环境变量</h2><p><strong>环境变量</strong>(environment variable)用于存储有关shell会话和工作环境的信息，分为<strong>局部变量</strong>和<strong>全局变量</strong>。<strong>局部变量</strong>只对创建它们的shell可见；<strong>全局变量</strong>对shell会话和所生成的子shell都是可见的，用<code>printenv</code>或<code>env</code>输出全局变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ env | less</span><br><span class="line">CONDA_SHLVL=1</span><br><span class="line">LS_COLORS=rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:<span class="keyword">do</span>=01;35:bd=40;33;01:<span class="built_in">cd</span>=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.Z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:</span><br><span class="line">CONDA_EXE=/home/louishsu/anaconda3/bin/conda</span><br><span class="line">HOSTTYPE=x86_64</span><br><span class="line">LESSCLOSE=/usr/bin/lesspipe %s %s</span><br><span class="line">[...]</span><br><span class="line"></span><br><span class="line">$ printenv  <span class="comment"># 同上</span></span><br><span class="line">$ printenv HOME <span class="comment"># 显示单个变量只能用printenv</span></span><br><span class="line">/home/louishsu</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$HOME</span>    <span class="comment"># 需加上$符</span></span><br><span class="line">/home/louishsu</span><br></pre></td></tr></table></figure><p>注意变量的<strong>作用域</strong></p><ol><li>局部环境变量在各进程内是独立的，即父子进程间变量无关联；</li><li>设定全局环境变量的进程所创建的子进程中，全局环境变量可见；</li><li>子进程只能暂时修改变量(包括删除)，退出后父进程内变量不改变。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># 在子shell中该变量不可见</span></span><br><span class="line">$ bash</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">$ <span class="comment"># 子shell中定义局部变量，在退出后父shell内也不可见</span></span><br><span class="line">$ var=5</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">5</span><br><span class="line">$ <span class="built_in">exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">$ <span class="comment"># 且父shell变量未改变</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">hello world!</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 设置为全局变量</span></span><br><span class="line">$ <span class="built_in">export</span> var   <span class="comment"># 注意无需`$`</span></span><br><span class="line">$ <span class="comment"># 在子shell中该变量可见</span></span><br><span class="line">$ bash</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">hello world!</span><br><span class="line">$ <span class="comment"># 子shell中修改全局变量，父shell变量未改变</span></span><br><span class="line">$ var=5</span><br><span class="line">$ <span class="built_in">exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">hello world!</span><br></pre></td></tr></table></figure><p>以设置环境变量<code>PATH</code>变量为例，用<code>'$'</code>读取变量值，<code>':'</code>作为分割符进行拼接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">[...]:/home/louishsu/Downloads/kibana-6.6.0-linux-x86_64/bin</span><br><span class="line">$ <span class="built_in">export</span> PATH=<span class="variable">$PATH</span>:/home/louishsu/Downloads</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$PATH</span></span><br><span class="line">[...]:/home/louishsu/Downloads/kibana-6.6.0-linux-x86_64/bin:/home/louishsu/Downloads</span><br></pre></td></tr></table></figure><blockquote><p>若<strong>希望<code>PATH</code>变量持久化</strong>，将<code>export</code>命令记录在以下几个文件中(无需全部记录)。<br>以下是shell默认的主启动文件，在每次登录Linux时执行(<strong>系统级</strong>)，在Ubuntu系统中，该文件内部执行调用文件<code>/etc/bash.bashrc</code></p><ul><li><code>/etc/profile</code></li></ul><p>以下四个文件作用相同，都是<strong>用户级</strong>的启动文件，一般大多数Linux发行版都只用到一到两个。shell会按照<code>.bash_profile</code>、<code>.bash_login</code>、<code>.profile</code>的顺序，<strong>执行第一个找到的文件(其余的被省略)</strong>。注意<code>.bashrc</code>是在以上三个文件中被执行的。</p><ul><li><code>$HOME/.bash_profile</code></li><li><code>$HOME/.bash_login</code></li><li><code>$HOME/.profile</code></li><li><code>$HOME/.bashrc</code></li></ul><p>但是如果bash是作为<strong>交互式shell</strong>启动，只会检查执行<code>$HOME/.bashrc</code>，而<code>/etc/profile</code>和<code>$HOME/.profile</code>等均被忽略。</p></blockquote><h2 id="输入-输出重定向">输入/输出重定向</h2><p>通过输入/输出重定向，可将标准输入/标准输出重定向到另一个位置(如文件)。Linux将每个对象视作文件处理，用<strong>文件描述符</strong>(file descriptor)来标识文件对象。文件描述符是一个非负整数，每个进程一次最多可以有9个文件描述符。其中比较特殊的是标准输入(STDIN, 0)、标准输出(STDOUT, 1)、标准错误(STDERR, 2)。</p><h3 id="执行时重定向">执行时重定向</h3><h4 id="输入重定向">输入重定向</h4><p>输入重定向是<strong>将文件内容重定向到命令</strong>，符号是<code>'&lt;'</code>，例如用<code>wc</code>对文本进行计数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ wc &lt; .bashrc</span><br><span class="line">157  636 5119   <span class="comment"># 文本行数、词数、字节数</span></span><br></pre></td></tr></table></figure><p>还有一种是<strong>内联输入重定向</strong>(inline input redirection)，符号是<code>'&lt;&lt;'</code>，无需使用文件进行重定向，直接从stdin读取数据，必须指定一个文本标记来标记输入的开始和结尾。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wc &lt;&lt; <span class="string">EOF     # 标记符，也可定义为其他文本</span></span><br><span class="line"><span class="string">&gt; this is</span></span><br><span class="line"><span class="string">&gt; inline</span></span><br><span class="line"><span class="string">&gt; input redirection</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line">3  5 34</span><br></pre></td></tr></table></figure><h4 id="输出重定向">输出重定向</h4><p><strong>将命令输出发送到文件中</strong>，符号是<code>'&gt;'</code>，会覆盖已有数据，可以用<code>'&gt;&gt;'</code>进行内容追加而不覆盖</p><blockquote><p>注意，错误信息未被重定向。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;hello!&quot;</span> &gt; inputRedirection. txt</span><br><span class="line">$ cat inputRedirection. txt</span><br><span class="line">hello!</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;world&quot;</span> &gt; inputRedirection. txt</span><br><span class="line">$ cat inputRedirection. txt</span><br><span class="line">world</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;hello&quot;</span> &gt;&gt; inputRedirection. txt</span><br><span class="line">$ cat inputRedirection. txt</span><br><span class="line">world</span><br><span class="line">hello</span><br></pre></td></tr></table></figure><h4 id="错误重定向">错误重定向</h4><p>一般错误输出和正常输出都会显示在屏幕上，但如果需要将错误信息重定向，则可通过指定文件描述符。例如重定向错误到文本<code>err.logs</code>，而其余正常输出，可通过<code>2&gt;</code>指定文本文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wget 2&gt; err.logs</span><br><span class="line">$ cat err.logs      <span class="comment"># 查看文本内容</span></span><br><span class="line">wget: missing URL</span><br><span class="line">Usage: wget [OPTION]... [URL]...</span><br><span class="line"></span><br><span class="line">Try `wget --<span class="built_in">help</span><span class="string">&#x27; for more options.</span></span><br></pre></td></tr></table></figure><p>同时将正常输出重定向到文本<code>out.logs</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ wget 1&gt; out.logs 2&gt; err.logs </span><br><span class="line">$ cat out.logs  <span class="comment"># 空</span></span><br><span class="line">$ cat err.logs</span><br><span class="line">wget: missing URL</span><br><span class="line">Usage: wget [OPTION]... [URL]...</span><br><span class="line"></span><br><span class="line">Try `wget --<span class="built_in">help</span><span class="string">&#x27; for more options.</span></span><br></pre></td></tr></table></figure><p>若想同时重定向输出和错误到文本<code>outerr.logs</code>，通过<code>&amp;&gt;</code>指定</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ wget &amp;&gt; outerr.logs</span><br><span class="line">$ cat outerr.logs</span><br><span class="line">wget: missing URL</span><br><span class="line">Usage: wget [OPTION]... [URL]...</span><br><span class="line"></span><br><span class="line">Try `wget --<span class="built_in">help</span><span class="string">&#x27; for more options.</span></span><br></pre></td></tr></table></figure><h3 id="脚本中重定向">脚本中重定向</h3><h4 id="输入-输出">输入/输出</h4><p>在脚本中向文本描述符<code>desc</code>输人/输出的命令如下，注意空格。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">command</span> &gt;&amp;desc</span><br><span class="line"><span class="built_in">command</span> &lt;&amp;desc</span><br></pre></td></tr></table></figure><p>例如向标准错误<code>STDERR</code>输出数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[Error]: to file err.logs&quot;</span> &gt;&amp;2    <span class="comment"># STDERR</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[Warining]: to file out.logs&quot;</span>     <span class="comment"># default STDOUT</span></span><br></pre></td></tr></table></figure><p>如果执行时不指定错误重定向，将被默认打印到屏幕上(默认错误与输出打印到同一位置，即屏幕上)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh</span><br><span class="line">[Error]: to file err.logs</span><br><span class="line">[Warining]: to file out.logs</span><br></pre></td></tr></table></figure><p>若指定错误重定向，即可输出到文本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh 2&gt; err.logs</span><br><span class="line">[Warining]: to file out.logs</span><br><span class="line">$ cat err.logs</span><br><span class="line">[Error]: to file err.logs</span><br></pre></td></tr></table></figure><h4 id="自定义文件描述符">自定义文件描述符</h4><p>可通过<code>exec</code>自定义文件描述符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exec</span> desc&lt; filename     <span class="comment"># 从文件创建输入重定向</span></span><br><span class="line"><span class="built_in">exec</span> desc&gt; filename     <span class="comment"># 从文件创建输出重定向</span></span><br><span class="line"><span class="built_in">exec</span> desc&lt;&gt; filename    <span class="comment"># 从文件创建输入输出重定向</span></span><br><span class="line"><span class="built_in">exec</span> desc&gt;&amp;-            <span class="comment"># 重定向到`-`，关闭文件描述符</span></span><br></pre></td></tr></table></figure><p>例如<code>in.logs</code>原始文件内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ cat in.logs</span><br><span class="line">Do not go gentle into that good night,</span><br><span class="line">Old age should burn and rave at close of day;</span><br><span class="line">Rage, rage against the dying of the light.</span><br></pre></td></tr></table></figure><p>编写脚本，从<code>in.logs</code>创建输入输出重定向，并将文件描述符定义为3</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">exec</span> 3&lt;&gt; in.logs</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Read poem:&quot;</span>       <span class="comment"># stdout</span></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line &lt;&amp;3; <span class="keyword">do</span> <span class="comment"># get line from descriptor 3</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$line</span>      <span class="comment"># stdout</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Write poem:&quot;</span>      <span class="comment"># stdout</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Excellent!&quot;</span> &gt;&amp;3   <span class="comment"># write line to descriptor 3</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh</span><br><span class="line">Read poem:</span><br><span class="line">Do not go gentle into that good night,</span><br><span class="line">Old age should burn and rave at close of day;</span><br><span class="line">Rage, rage against the dying of the light.</span><br><span class="line">Write poem:</span><br></pre></td></tr></table></figure><p>再次查看<code>in.logs</code>文件内容</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ cat in.logs</span><br><span class="line">Do not go gentle into that good night,</span><br><span class="line">Old age should burn and rave at close of day;</span><br><span class="line">Rage, rage against the dying of the light.</span><br><span class="line">Excellent!            <span class="comment"># 追加内容</span></span><br></pre></td></tr></table></figure><p>又如，将<code>STDIN, STDOUT, STDERR</code>均重定向到各自文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输入重定向</span></span><br><span class="line"><span class="built_in">exec</span> 0&lt; in.logs</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$line</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出重定向</span></span><br><span class="line"><span class="built_in">exec</span> 1&gt; out.logs</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[Warining]: to file out.logs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 错误重定向</span></span><br><span class="line"><span class="built_in">exec</span> 2&gt; err.logs</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;[Error]: to file err.logs&quot;</span> &gt;&amp;2</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ cat in.logs</span><br><span class="line">Do not go gentle into that good night,</span><br><span class="line">Old age should burn and rave at close of day;</span><br><span class="line">Rage, rage against the dying of the light.</span><br><span class="line"></span><br><span class="line">$ ./test.sh</span><br><span class="line">Do not go gentle into that good night,</span><br><span class="line">Old age should burn and rave at close of day;</span><br><span class="line">Rage, rage against the dying of the light.</span><br><span class="line"></span><br><span class="line">$ cat out.logs</span><br><span class="line">[Warining]: to file out.logs</span><br><span class="line">$ cat err.logs</span><br><span class="line">[Error]: to file err.logs</span><br></pre></td></tr></table></figure><h4 id="重定向到已有文件描述符">重定向到已有文件描述符</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">exec</span> descNew&gt;&amp;desc      <span class="comment"># 创建输出重定向</span></span><br><span class="line"><span class="built_in">exec</span> descNew&lt;&amp;desc      <span class="comment"># 创建输入重定向</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># 重定向3到STDOUT3</span></span><br><span class="line"><span class="built_in">exec</span> 3&gt;&amp;1               </span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;To STDOUT&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;To desc 3&quot;</span> &gt;&amp;3    <span class="comment"># 输出到文本描述符3</span></span><br></pre></td></tr></table></figure><p>可以看到执行后，输出到3的数据也被显示到STDOUT中</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh</span><br><span class="line">To STDOUT</span><br><span class="line">To desc 3</span><br></pre></td></tr></table></figure><h2 id="管道">管道</h2><p>管道可将一个命令的输出作为另一个命令的输入，是将第一个命令重定向到第二个命令，称为<strong>管道连接</strong>(piping)。Linux系统会同时调用多个命令，在内部将他们连接，而不是依次执行(管道通信)。例如，用<code>apt-get</code>搜索<code>openssl</code>安装包，排序<code>sort</code>后通过<code>less</code>查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ apt search openssl | grep openssl* | sort | less</span><br><span class="line">  Asynchronous event notification library (openssl)</span><br><span class="line">  D version of the C headers <span class="keyword">for</span> openssl</span><br><span class="line">  Loadable module <span class="keyword">for</span> openssl implementing GOST algorithms</span><br><span class="line">  Puppet module <span class="keyword">for</span> managing openssl configuration</span><br><span class="line">aolserver4-nsopenssl/bionic,bionic 3.0beta26-6 amd64</span><br><span class="line">bruteforce-salted-openssl/bionic,bionic 1.4.0-1build1 amd64</span><br><span class="line">dlang-openssl/bionic,bionic 1.1.5+1.0.1g-1 all</span><br><span class="line">jruby-openssl/bionic-updates,bionic-security 0.9.21-2~18.04 all</span><br><span class="line">lcmaps-openssl-interface/bionic,bionic 1.6.6-2build1 all</span><br><span class="line">libcrypt-openssl-bignum-perl/bionic,bionic 0.09-1build1 amd64</span><br><span class="line">libcrypt-openssl-dsa-perl/bionic,bionic 0.19-1build2 amd64</span><br><span class="line">[...]</span><br></pre></td></tr></table></figure><h1>变量</h1><p>除了环境变量，shell支持在脚本中定义和使用<strong>用户变量</strong>，临时存储数据。</p><ul><li>变量名可以由字母、数字和下划线组成，长度不超过20，首个字符不能以数字开头，区分大小写，不可使用保留关键字；</li><li>在赋值时同样地，赋值符两侧不能出现空格；</li><li>shell脚本会自动决定变量值的数据类型，在脚本结束时所有用户变量被删除；</li><li>注意<code>'$'</code>的使用：引用变量值时需要，而引用变量进行赋值等操作时不需要。  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ var1=1; var2=2</span><br><span class="line">$ <span class="built_in">echo</span> var1     <span class="comment"># var1被视作字符串</span></span><br><span class="line">var1</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var1</span></span><br><span class="line">1</span><br><span class="line">$ var1=var2     <span class="comment"># var1内容更改为字符串var2</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var1</span></span><br><span class="line">var2</span><br><span class="line">$ var1=<span class="variable">$var2</span>    <span class="comment"># var1内容更改为变量var2的值</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var1</span></span><br><span class="line">2</span><br></pre></td></tr></table></figure></li><li>变量名外面的花括号界定符，加花括号是为了帮助解释器识别变量的边界，比如  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> name <span class="keyword">in</span> Jack Tom Bob; <span class="keyword">do</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;This is <span class="variable">$nameBoy</span>&quot;</span>   <span class="comment"># nameBoy被视作变量名</span></span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">This is</span><br><span class="line">This is</span><br><span class="line">This is</span><br><span class="line">$ <span class="keyword">for</span> name <span class="keyword">in</span> Jack Tom Bob; <span class="keyword">do</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;This is <span class="variable">$&#123;name&#125;</span>Boy&quot;</span> <span class="comment"># name被视作变量名，自动拼接字符串</span></span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">This is JackBoy</span><br><span class="line">This is TomBoy</span><br><span class="line">This is BobBoy</span><br></pre></td></tr></table></figure></li></ul><h2 id="字符串">字符串</h2><p>字符串是shell编程中最常用最有用的数据类型，定义字符串时，可以选择单引号、双引号、无引号，但是有部分限制：<strong>单引号内引用变量值无效，且不能使用转义字符</strong>。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ name=louishsu</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&#x27;This is \&quot;$name\&quot;&#x27;</span>      <span class="comment"># 单引号内引用变量值无效，且不能使用转义字符</span></span><br><span class="line">This is \&quot;<span class="variable">$name</span>\&quot;</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;This is \&quot;<span class="variable">$name</span>\&quot;&quot;</span>      <span class="comment"># 双引号则反之</span></span><br><span class="line">This is <span class="string">&quot;louishsu&quot;</span></span><br><span class="line">$ <span class="built_in">echo</span> -e <span class="string">&#x27;This is \&quot;$name\&quot;&#x27;</span>   <span class="comment"># echo开启转义也无效</span></span><br><span class="line">This is \&quot;<span class="variable">$name</span>\&quot;</span><br><span class="line">$ <span class="built_in">echo</span> -e <span class="string">&quot;This is \&quot;<span class="variable">$name</span>\&quot;&quot;</span>   <span class="comment"># echo开启转义有效</span></span><br><span class="line">This is <span class="string">&quot;louishsu&quot;</span></span><br></pre></td></tr></table></figure><p>字符串可进行拼接</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ name=louishsu</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;Hello, &quot;</span><span class="variable">$name</span><span class="string">&quot;!&quot;</span></span><br><span class="line">Hello, louishsu!</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;Hello, <span class="variable">$name</span>!&quot;</span></span><br><span class="line">Hello, louishsu!</span><br></pre></td></tr></table></figure><p>字符串长度、子字符串、查找字符串</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># 字符串长度</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;#name&#125;</span>     </span><br><span class="line">7</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 尝试使用下标</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;name[0]&#125;</span>   </span><br><span class="line">louishsu</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;name[1]&#125;</span></span><br><span class="line">            <span class="comment"># 输出回车</span></span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 截取子字符串</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;name:0:5&#125;</span>  <span class="comment"># 从0开始，截取5个字符</span></span><br><span class="line">louis</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;name:5:3&#125;</span>  <span class="comment"># 从5开始，截取3个字符</span></span><br><span class="line">hsu</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 查找字符串</span></span><br><span class="line">$ <span class="built_in">echo</span> `expr index <span class="variable">$name</span> su` <span class="comment"># 查找s或u</span></span><br><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="变量参数">变量参数</h2><p>以下介绍如何<strong>定义变量</strong>及<strong>删除变量</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># 未创建变量</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">            <span class="comment"># 输出回车</span></span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 创建变量var，注意赋值符两侧不能有空格</span></span><br><span class="line">$ var=/home/louishsu</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">/home/louishsu</span><br><span class="line">$ <span class="comment"># 变量可用作路径等</span></span><br><span class="line">$ ls <span class="variable">$var</span></span><br><span class="line">Downloads  anaconda3  backup</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 创建带空格的字符串变量</span></span><br><span class="line">$ var=<span class="string">&quot;hello world!&quot;</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">hello world!</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 删除变量</span></span><br><span class="line">$ <span class="built_in">unset</span> var <span class="comment"># 注意无需`$`</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">            <span class="comment"># 输出回车</span></span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 只读变量</span></span><br><span class="line">$ var=1</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span></span><br><span class="line">1</span><br><span class="line">$ <span class="built_in">readonly</span> var  <span class="comment"># 设置为只读</span></span><br><span class="line">$ var=2         <span class="comment"># 不可更改</span></span><br><span class="line">-bash: var: <span class="built_in">readonly</span> variable</span><br><span class="line">$ <span class="built_in">unset</span> var     <span class="comment"># 不可删除</span></span><br><span class="line">-bash: <span class="built_in">unset</span>: var: cannot <span class="built_in">unset</span>: <span class="built_in">readonly</span> variable</span><br></pre></td></tr></table></figure><h2 id="数组参数">数组参数</h2><p>shell可使用<strong>数组</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># 定义数组变量</span></span><br><span class="line">var=(1 2 3 4 5)</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span> <span class="comment"># 无法全部打印输出</span></span><br><span class="line">1</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 以下标获取数组元素(0开始)</span></span><br><span class="line">$ <span class="comment"># 缺少`&#123;&#125;`界定符</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var</span>[1]  </span><br><span class="line">1[1]        <span class="comment"># 失败</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;var[1]&#125;</span></span><br><span class="line">2           <span class="comment"># 成功</span></span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 打印输出全部元素</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;var[*]&#125;</span></span><br><span class="line">1 2 3 4 5</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 获取数组长度</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;#var&#125;</span></span><br><span class="line">1           <span class="comment"># 失败</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;#var[*]&#125;</span></span><br><span class="line">5           <span class="comment"># 成功</span></span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 删除数组元素后，令人疑惑的地方，需注意</span></span><br><span class="line">$ <span class="built_in">unset</span> var[1]</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;var[1]&#125;</span></span><br><span class="line">            <span class="comment"># 输出回车</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;var[*]&#125;</span></span><br><span class="line">1 3 4 5</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;#var[*]&#125;</span></span><br><span class="line">4</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 删除数组</span></span><br><span class="line">$ <span class="built_in">unset</span> var</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$&#123;var[*]&#125;</span></span><br><span class="line">            <span class="comment"># 输出回车</span></span><br></pre></td></tr></table></figure><h1>参数传递</h1><h2 id="位置参数">位置参数</h2><p>在执行脚本时，可将命令行参数传递给脚本使用，通过位置参数调用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印输出参数</span></span><br><span class="line"><span class="comment"># $0: 脚本文件名</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The filename of script is <span class="variable">$0</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The basename is <span class="subst">$( basename $0 )</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># $#: 参数个数</span></span><br><span class="line"><span class="comment"># $1, ..., $&#123;10&#125;, ...: 位置参数</span></span><br><span class="line"><span class="built_in">echo</span> -n <span class="string">&quot;There are <span class="variable">$#</span> parameters supplied， which are:&quot;</span></span><br><span class="line"><span class="keyword">for</span> ((i = 1; i &lt;= <span class="variable">$#</span>; i++)); <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> -n <span class="variable">$&#123;!i&#125;</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 若不加引号，则以下两种输出结果相同</span></span><br><span class="line"><span class="comment"># 获取参数列表</span></span><br><span class="line"><span class="comment"># $*: 将参数视作字符串整体</span></span><br><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> <span class="string">&quot;$*&quot;</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$param</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="comment"># $@: 将参数视作字符串内独立的单词</span></span><br><span class="line"><span class="keyword">for</span> param <span class="keyword">in</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>; <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$param</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取最后一个变量</span></span><br><span class="line"><span class="comment"># echo &quot;The last parameter is $&#123;$#&#125;&quot;    # 错误，&#123;&#125;内不能带$</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The last parameter is <span class="variable">$&#123;!#&#125;</span>&quot;</span></span><br><span class="line">argc=<span class="variable">$#</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;The last parameter is <span class="variable">$argc</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh 1 2 3</span><br><span class="line">The filename of script is ./test.sh</span><br><span class="line">The basename is test.sh</span><br><span class="line">There are 3 parameters supplied， <span class="built_in">which</span> are:123</span><br><span class="line">1 2 3</span><br><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">The last parameter is 3</span><br><span class="line">The last parameter is 3</span><br></pre></td></tr></table></figure><h2 id="命名参数">命名参数</h2><ol><li><p>通过<code>shift</code>命令处理<br>调用一次<code>shift</code>命令，<code>$1</code>参数被删除，其余所有参数向左移动，即<code>$2</code>移动到<code>$1</code>，<code>$3</code>移动到<code>$2</code>中，以此类推。例如，某脚本需处理命令行参数<code>-a -b 3 -c -d</code>，其中<code>-b</code>为命名参数，则脚本如下编写</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> [ -n <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]       <span class="comment"># 不可缺少引号&quot;&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">        -a) <span class="built_in">echo</span> <span class="string">&quot;Option -a&quot;</span> ;;</span><br><span class="line">        -b)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Option -b&quot;</span></span><br><span class="line">            <span class="built_in">shift</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;Value of option -b is: <span class="variable">$1</span>&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        -c) <span class="built_in">echo</span> <span class="string">&quot;Option -c&quot;</span>;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;Invalid parameters&quot;</span>;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line">    <span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh -a -b 5 -c</span><br><span class="line">Option -a</span><br><span class="line">Option -b</span><br><span class="line">Value of option -b is: 5</span><br><span class="line">Option -c</span><br></pre></td></tr></table></figure></li><li><p>通过<code>getopt</code>命令处理</p><p><code>getopt</code>命令简单使用格式如下</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">getopt optstring parameters</span><br></pre></td></tr></table></figure><p>例如解析<code>-a -b 3 -c -d</code>，指定<code>optsting</code>为<code>ab:cd</code>，其中<code>:</code>表示该处包含参数值，在输出<code>--</code>后的参数均视作位置参数</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ getopt ab:<span class="built_in">cd</span> -a -b 5 -c -d 1 2 3</span><br><span class="line">-a -b 5 -c -d -- 1 2 3</span><br></pre></td></tr></table></figure><p>配合<code>set</code>命令，将脚本原始的命令行参数解析</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">set</span> -- $( getopt -q ab:<span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span> )</span><br></pre></td></tr></table></figure><p>脚本如下</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -- $( getopt ab:<span class="built_in">cd</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span> )</span><br><span class="line"><span class="keyword">while</span> [ -n <span class="string">&quot;<span class="variable">$1</span>&quot;</span> ]       <span class="comment"># 不可缺少引号&quot;&quot;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">        <span class="keyword">case</span> <span class="string">&quot;<span class="variable">$1</span>&quot;</span> <span class="keyword">in</span></span><br><span class="line">                -a) <span class="built_in">echo</span> <span class="string">&quot;Option -a&quot;</span> ;;</span><br><span class="line">                -b)</span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">&quot;Option -b&quot;</span></span><br><span class="line">                        <span class="built_in">shift</span></span><br><span class="line">                        <span class="built_in">echo</span> <span class="string">&quot;Value of option -b is: <span class="variable">$1</span>&quot;</span></span><br><span class="line">                        ;;</span><br><span class="line">                -c) <span class="built_in">echo</span> <span class="string">&quot;Option -c&quot;</span>;;</span><br><span class="line">                --) <span class="built_in">break</span> ;;</span><br><span class="line">                *) <span class="built_in">echo</span> <span class="string">&quot;Invalid parameter: <span class="variable">$1</span>&quot;</span>;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">        <span class="built_in">shift</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh -a -b 5 -c -d</span><br><span class="line">Option -a</span><br><span class="line">Option -b</span><br><span class="line">Value of option -b is: 5</span><br><span class="line">Option -c</span><br><span class="line">Invalid parameter: -d</span><br><span class="line"></span><br><span class="line">$ ./test.sh -a -b5 -<span class="built_in">cd</span></span><br><span class="line">Option -a</span><br><span class="line">Option -b</span><br><span class="line">Value of option -b is: 5</span><br><span class="line">Option -c</span><br><span class="line">Invalid parameter: -d</span><br><span class="line"></span><br><span class="line">$ ./test.sh -ab5 -<span class="built_in">cd</span></span><br><span class="line">Option -a</span><br><span class="line">Option -b</span><br><span class="line">Value of option -b is: 5</span><br><span class="line">Option -c</span><br><span class="line">Invalid parameter: -d</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 但是如下失败</span></span><br><span class="line">$ ./test.sh -ab5cd</span><br><span class="line">Option -a</span><br><span class="line">Option -b</span><br><span class="line">Value of option -b is: 5cd</span><br></pre></td></tr></table></figure></li></ol><h1>用户输入</h1><p><code>read</code>命令可提供用户输入接口，从标准输入或文件描述符中接受输入，实现脚本可交互。</p><h2 id="基本输入-read">基本输入: read</h2><p><code>read</code>可指定多个变量，将输入的每个数据依次分配给各个变量，若变量数目不够则将剩余数据全部放入最后一个变量，如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">read</span> first last age</span><br><span class="line">louis hsu 25</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$first</span> <span class="variable">$last</span>, aged <span class="variable">$age</span>&quot;</span></span><br><span class="line">louis hsu, aged 25</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">read</span> first last age</span><br><span class="line">louis hsu 25 coolman</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$age</span>&quot;</span></span><br><span class="line">25 coolman</span><br></pre></td></tr></table></figure><p>指定<code>-p</code>，可输出命令提示符</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">read</span> -p <span class="string">&quot;Who are you? &quot;</span> first last age</span><br><span class="line">Who are you? louis hsu 25</span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$first</span> <span class="variable">$last</span>, aged <span class="variable">$age</span>&quot;</span></span><br><span class="line">louis hsu, aged 25</span><br></pre></td></tr></table></figure><p>指定<code>-t</code>进行超时处理</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">read</span> -t 5 first last age      <span class="comment"># 5秒</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$first</span> <span class="variable">$last</span>, aged <span class="variable">$age</span>&quot;</span></span><br><span class="line"> , aged</span><br></pre></td></tr></table></figure><p>指定<code>-s</code>，隐藏输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">read</span> -s -p <span class="string">&quot;Enter your passwd: &quot;</span> passwd</span><br><span class="line">Enter your passwd:      <span class="comment"># 输入`______`</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$passwd</span></span><br><span class="line">______</span><br></pre></td></tr></table></figure><h2 id="文件输入-cat-read">文件输入: cat | read</h2><p>配合<code>cat</code>指令，通过管道，实现文件输入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ cat test.txt | <span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="variable">$line</span></span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">hello</span><br><span class="line">world</span><br><span class="line">louishu</span><br><span class="line">25</span><br><span class="line">coolman</span><br></pre></td></tr></table></figure><p>或者通过重定向实现。</p><h1>脚本退出: exit</h1><p>shell中运行的命令都使用<strong>退出状态码</strong>(exit status)作为运行结果标识符，为0~255的整数，可通过<code>$?</code>查看上个执行命令的退出状态码。按照惯例成功运行命令后的退出状态码为0，常用的如下</p><table><thead><tr><th>状态码</th><th>描述</th></tr></thead><tbody><tr><td>0</td><td>命令成功执行</td></tr><tr><td>1</td><td>一般性未知错误</td></tr><tr><td>2</td><td>不适合的shell命令</td></tr><tr><td>126</td><td>命令不可执行</td></tr><tr><td>127</td><td>未查找到命令</td></tr><tr><td>128</td><td>无效的退出参数</td></tr><tr><td>128+x</td><td>与linux信号x相关的严重错误</td></tr><tr><td>130</td><td>通过ctrl+c终止的命令</td></tr><tr><td>255</td><td>正常范围之外的退出状态码</td></tr></tbody></table><p>shell脚本会以最后一个命令的退出码退出，用户也可通过<code>exit</code>命令指定。注意若退出结果超过255，会返回该值对256的模。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="comment"># 正常退出</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;hello world!&quot;</span>; <span class="built_in">echo</span> $?</span><br><span class="line">hello world!</span><br><span class="line">0</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 未查找到命令</span></span><br><span class="line">$ unknown <span class="built_in">command</span>; <span class="built_in">echo</span> $?</span><br><span class="line"></span><br><span class="line">Command <span class="string">&#x27;unknown&#x27;</span> not found, but can be installed with:</span><br><span class="line"></span><br><span class="line">sudo apt install fastlink</span><br><span class="line"></span><br><span class="line">127</span><br><span class="line"></span><br><span class="line">$ <span class="comment"># 一般性未知错误</span></span><br><span class="line">$ wget; <span class="built_in">echo</span> $?</span><br><span class="line">wget: missing URL</span><br><span class="line">Usage: wget [OPTION]... [URL]...</span><br><span class="line"></span><br><span class="line">Try `wget --<span class="built_in">help</span><span class="string">&#x27; for more options.</span></span><br><span class="line"><span class="string">1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">$ # 用户指定退出码</span></span><br><span class="line"><span class="string">$ cat test.sh</span></span><br><span class="line"><span class="string">#!/bin/bash</span></span><br><span class="line"><span class="string">echo &quot;hello world!&quot;</span></span><br><span class="line"><span class="string">exit 777</span></span><br><span class="line"><span class="string">$ bash test.sh ; echo $?</span></span><br><span class="line"><span class="string">hello world!</span></span><br><span class="line"><span class="string">9       # 777 % 256</span></span><br></pre></td></tr></table></figure><h1>命令替换: ( command )</h1><p>shell脚本最有用的特性是<strong>将命令输出赋值给变量</strong>，有两种方法可以实现</p><ol><li>反引号字符<code>'</code></li><li><code>( command )</code>格式，<code>$</code>进行取值</li></ol><p>例如，以时间信息创建文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ time=$(date +%y%m%d)  <span class="comment"># 或 time=`date +%y%m%d`</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$time</span></span><br><span class="line">200505</span><br><span class="line">$ touch <span class="variable">$&#123;time&#125;</span>.txt</span><br><span class="line">$ ls</span><br><span class="line">200505.txt</span><br></pre></td></tr></table></figure><h1>运算和测试</h1><h2 id="数学运算">数学运算</h2><h3 id="expr-expression">$( expr expression )</h3><p><strong>仅支持整数运算</strong>。支持逻辑操作符<code>|, &amp;</code>、比较操作符<code>&lt;, &lt;=, &gt;, &gt;=, =, !=</code>、运算操作符<code>+, -, *, /, %</code>(注意乘号符需进行转义<code>\*</code>)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ var1=4; var2=5</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> $(expr <span class="variable">$var1</span> + <span class="variable">$var2</span>)</span><br><span class="line">9</span><br><span class="line">$ <span class="built_in">echo</span> $(expr <span class="variable">$var1</span> - <span class="variable">$var2</span>)</span><br><span class="line">-1</span><br><span class="line">$ <span class="built_in">echo</span> $(expr <span class="variable">$var1</span> / <span class="variable">$var2</span>)</span><br><span class="line">0</span><br><span class="line">$ <span class="built_in">echo</span> $(expr <span class="variable">$var1</span> * <span class="variable">$var2</span>)</span><br><span class="line">expr: syntax error</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> $(expr <span class="variable">$var1</span> \* <span class="variable">$var2</span>)</span><br><span class="line">20</span><br></pre></td></tr></table></figure><p>此外还支持部分字符串操作</p><h3 id="expression">$[ expression ]</h3><p>用<code>[ operation ]</code>格式将数学表达式包围，<code>$</code>进行取值，此时乘号符无需进行转义。支持高级运算，如幂运算<code>**</code>、移位运算<code>&gt;&gt;, &lt;&lt;</code>、位运算<code>&amp;, |, ~</code>、逻辑运算<code>&amp;&amp;, ||, !</code>等</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ var1=4; var2=5</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> $(expr <span class="variable">$var1</span> \* <span class="variable">$var2</span>)</span><br><span class="line">20</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> + <span class="variable">$var2</span> ]</span><br><span class="line">9</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> - <span class="variable">$var2</span> ]</span><br><span class="line">-1</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> / <span class="variable">$var2</span> ]</span><br><span class="line">0</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> * <span class="variable">$var2</span> ]</span><br><span class="line">20</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> ** <span class="variable">$var2</span> ]</span><br><span class="line">1024</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> &lt;&lt; <span class="variable">$var2</span> ]</span><br><span class="line">128</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> &gt;&gt; <span class="variable">$var2</span> ]</span><br><span class="line">0</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> &amp; <span class="variable">$var2</span> ]</span><br><span class="line">4</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> | <span class="variable">$var2</span> ]</span><br><span class="line">5</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> &amp;&amp; <span class="variable">$var2</span> ]</span><br><span class="line">1</span><br><span class="line">$ <span class="built_in">echo</span> $[ <span class="variable">$var1</span> || <span class="variable">$var2</span> ]</span><br><span class="line">1$ <span class="built_in">echo</span> $[ ! <span class="variable">$var1</span> ]</span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="let-expression-expression">let expression, $(( expression ))</h3><p><code>let expression</code>等价于<code>(( expression ))</code>，都支持一次性计算多个表达式，以最后一个表达式的值作为整个命令的执行结果。不同之处是，<code>let</code>以空格作为分隔符，<code>(())</code>以<code>,</code>作为分隔符。显然前者没有后者灵活。  同样的，<code>(( expression ))</code>用<code>$</code>进行表达式的取值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ var1=4; var2=5</span><br><span class="line">$ <span class="built_in">echo</span> <span class="built_in">let</span> <span class="variable">$var1</span>+<span class="variable">$var2</span></span><br><span class="line"><span class="built_in">let</span> 4+5         <span class="comment"># 被视作字符串</span></span><br><span class="line">$ <span class="built_in">let</span> sum=<span class="variable">$var1</span>+<span class="variable">$var2</span>; <span class="built_in">echo</span> <span class="variable">$sum</span>     <span class="comment"># sum保存变量</span></span><br><span class="line">9</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">echo</span> $(( <span class="variable">$var1</span>+<span class="variable">$var2</span> ))</span><br><span class="line">9</span><br></pre></td></tr></table></figure><p>可快速实现变量自增、自减操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ i=0</span><br><span class="line">$ <span class="built_in">let</span> i+=1; <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">1</span><br><span class="line">$ (( i++ )); <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">2</span><br><span class="line">$ (( i-- )); <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">1</span><br><span class="line">$ (( ++i )); <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">2</span><br><span class="line">$ (( --i )); <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><h3 id="内建计算器bc">内建计算器bc</h3><p>内建计算器支持浮点运算，实际上是一种编程语言，bash计算器能识别</p><ul><li>数字(整数、浮点数)</li><li>变量(简单变量、数组)</li><li>注释(<code>#</code>或<code>/* */</code>格式)</li><li>表达式</li><li>编程语句(如<code>if-then</code>)</li><li>函数</li></ul><p>浮点运算的精度通过内建变量<code>scale</code>控制，表示保留的小数位数，默认值是0</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ bc</span><br><span class="line">bc 1.07.1</span><br><span class="line">Copyright 1991-1994, 1997, 1998, 2000, 2004, 2006, 2008, 2012-2017 Free Software Foundation, Inc.</span><br><span class="line">This is free software with ABSOLUTELY NO WARRANTY.</span><br><span class="line">For details <span class="built_in">type</span> `warranty<span class="string">&#x27;.</span></span><br><span class="line"><span class="string">scale       # 显示当前scale</span></span><br><span class="line"><span class="string">0</span></span><br><span class="line"><span class="string">var1=4; var2=5</span></span><br><span class="line"><span class="string">var1 / var2</span></span><br><span class="line"><span class="string">0</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">scale=2     # scale指定为2</span></span><br><span class="line"><span class="string">var1 / var2</span></span><br><span class="line"><span class="string">.80</span></span><br><span class="line"><span class="string">quit        # 退出</span></span><br></pre></td></tr></table></figure><p>在脚本中使用<code>bc</code>命令有两种方式</p><ol><li><p>单行运算：<br>通过<strong>命令替换</strong>和<strong>管道</strong>实现，格式为<br><code>variable=$( echo &quot;options; expression&quot; | bc )</code><br>例如</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ var1=4; var2=5</span><br><span class="line">$ var3=$( <span class="built_in">echo</span> <span class="string">&quot;scale=2; <span class="variable">$var1</span> / <span class="variable">$var2</span>&quot;</span> | bc )</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var3</span></span><br><span class="line">.80</span><br></pre></td></tr></table></figure></li><li><p>多行运算：<br>通过<strong>命令替换</strong>和<strong>内联输入重定向</strong>实现，格式为</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">variable=$(bc &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">options</span></span><br><span class="line"><span class="string">statements</span></span><br><span class="line"><span class="string">expressions</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>需要注意的是，<code>bc</code>内部变量和shell变量是独立的，变量名可重复使用，例如</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">$ var3=$(bc &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">&gt; scale=2</span></span><br><span class="line"><span class="string">&gt; $var1 / $var2     # 引用shell变量</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line">&gt; )</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var3</span></span><br><span class="line">.80                 <span class="comment"># 输出shell变量运算结果</span></span><br><span class="line"></span><br><span class="line">$ var3=$(bc &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">&gt; scale=2</span></span><br><span class="line"><span class="string">&gt; var1=5; var2=4    # 重新定义变量</span></span><br><span class="line"><span class="string">&gt; var1 / var2</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line">&gt; )</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var3</span></span><br><span class="line">1.25                <span class="comment"># 输出bc变量运算结果</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var1</span>        <span class="comment"># 不会修改shell变量</span></span><br><span class="line">4</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var2</span></span><br><span class="line">5</span><br><span class="line"></span><br><span class="line">$ var3=$(bc &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">&gt; scale=2</span></span><br><span class="line"><span class="string">&gt; var1=5; var2=4    # 重新定义变量</span></span><br><span class="line"><span class="string">&gt; $var1 / $var2     # 引用shell变量</span></span><br><span class="line"><span class="string">&gt; EOF</span></span><br><span class="line">&gt; )</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var3</span></span><br><span class="line">.80                 <span class="comment"># 输出shell变量运算结果</span></span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var1</span>        <span class="comment"># 不会修改shell变量</span></span><br><span class="line">4</span><br><span class="line">$ <span class="built_in">echo</span> <span class="variable">$var2</span></span><br><span class="line">5</span><br></pre></td></tr></table></figure></li></ol><h2 id="测试命令-test-expression-expression">测试命令: test expression, [ expression ]</h2><p>测试命令用于检查某个条件是否成立，它可以进行数值、字符和文件三个方面的测试，还可进行复合测试，可通过<code>test</code>命令或<code>[ option ]</code>实现</p><h3 id="数值测试-eq-ne-gt-ge-lt-le">数值测试: -eq, -ne, -gt, -ge, -lt, -le</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-eq</td><td>等于则为真</td></tr><tr><td>-ne</td><td>不等于则为真</td></tr><tr><td>-gt</td><td>大于则为真</td></tr><tr><td>-ge</td><td>大于等于则为真</td></tr><tr><td>-lt</td><td>小于则为真</td></tr><tr><td>-le</td><td>小于等于则为真</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ var1=4; var2=5</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">if</span> <span class="built_in">test</span> <span class="variable">$var1</span> -le <span class="variable">$var2</span>; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;less&quot;</span></span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;greater&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">less</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">if</span> [ <span class="variable">$var1</span> -le <span class="variable">$var2</span> ]; <span class="keyword">then</span>      <span class="comment"># 注意空格</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;less&quot;</span></span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;greater&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">less</span><br></pre></td></tr></table></figure><h3 id="字符测试-n-z">字符测试: =, !=, &lt;, &gt;, -n  -z</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>=</td><td>等于则为真</td></tr><tr><td>!=</td><td>不等于则为真</td></tr><tr><td>&lt;</td><td>小于则为真</td></tr><tr><td>&gt;</td><td>大于则为真</td></tr><tr><td>-n</td><td>长度非0或未定义，则为真</td></tr><tr><td>-z</td><td>长度为0则为真</td></tr></tbody></table><p>注意：</p><ul><li>大于号<code>&gt;</code>和小于号<code>&lt;</code>必须转义，否则被视作重定向符，字符串值视作文件名；</li><li>大写字母被认为是小于小写字母的。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ var1=<span class="string">&quot;Test&quot;</span>; var2=<span class="string">&quot;test&quot;</span></span><br><span class="line"></span><br><span class="line">$ <span class="keyword">if</span> <span class="built_in">test</span> <span class="variable">$var1</span> \&lt; <span class="variable">$var2</span>; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;less&quot;</span></span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;greater&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">less</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">if</span> [ <span class="variable">$var1</span> \&lt; <span class="variable">$var2</span> ]; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;less&quot;</span></span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;greater&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">less</span><br></pre></td></tr></table></figure><p>注意，若在比较数值时采用<code>&lt;, &gt;</code>等符号，会将数值视作字符串，同样也存在未转义识别为重定向符的问题</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">if</span> [ 4 &gt; 5 ]; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;4 is greater than 5&quot;</span></span><br><span class="line">&gt; <span class="keyword">elif</span> [ 4 = 5 ]; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;4 is equal to 5&quot;</span></span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;4 is less than 5&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">4 is greater than 5</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">if</span> [ 4 -gt 5 ]; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;4 is greater than 5&quot;</span></span><br><span class="line">&gt; <span class="keyword">elif</span> [ 4 -eq 5 ]; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;4 is equal to 5&quot;</span></span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;4 is less than 5&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">4 is less than 5</span><br><span class="line"></span><br><span class="line">$ ls</span><br><span class="line">5       <span class="comment"># 新建文件5</span></span><br></pre></td></tr></table></figure><h3 id="文件测试-e-d-f-…">文件测试: -e, -d, -f, …</h3><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>-e file</td><td>如果文件存在则为真</td></tr><tr><td>-d file</td><td>如果文件存在且为目录则为真</td></tr><tr><td>-f file</td><td>如果文件存在且为普通文件则为真</td></tr><tr><td>-s file</td><td>如果文件存在且至少有一个字符则为真</td></tr><tr><td>-c file</td><td>如果文件存在且为字符型特殊文件则为真</td></tr><tr><td>-b file</td><td>如果文件存在且为块特殊文件则为真</td></tr><tr><td>-r file</td><td>如果文件存在且可读则为真</td></tr><tr><td>-w file</td><td>如果文件存在且可写则为真</td></tr><tr><td>-x file</td><td>如果文件存在且可执行则为真</td></tr><tr><td>-O file</td><td>如果文件存在且属于当前用户所有则为真</td></tr><tr><td>-G file</td><td>如果文件存在且默认组与当前用户相同则为真</td></tr><tr><td>file1 -nt file2</td><td>文件1比文件2新则为真</td></tr><tr><td>file1 -ot file2</td><td>文件1比文件2旧则为真</td></tr></tbody></table><h3 id="复合条件测试-o-a">复合条件测试: !, -o / ||, -a / &amp;&amp;</h3><table><thead><tr><th>运算符</th><th>说明</th><th>举例</th></tr></thead><tbody><tr><td>!</td><td>非运算，表达式为 true 则返回 false，否则返回 true。</td><td>[ ! false ] 返回 true。</td></tr><tr><td>-o / <code>||</code></td><td>或运算，有一个表达式为 true 则返回 true，满足就近原则，即运算符前表达式为真则跳过后一表达式</td><td>[ condition1 -o condition1 ] 或 [ condition1 ] <code>||</code> [ condition1 ]</td></tr><tr><td>-a / &amp;&amp;</td><td>与运算，两个表达式都为 true 才返回 true。</td><td>[ condition1 -a condition1 ] 或 [ condition1 ] &amp;&amp; [ condition1 ]</td></tr></tbody></table><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">if</span> [ <span class="variable">$var1</span> -le <span class="variable">$var2</span> -o <span class="variable">$var3</span> -le <span class="variable">$var4</span> ]; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;condition 1&quot;</span></span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;condition 2&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">condition 1</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">if</span> [ <span class="variable">$var1</span> -le <span class="variable">$var2</span> ] || [ <span class="variable">$var3</span> -le <span class="variable">$var4</span> ]; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;condition 1&quot;</span></span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;condition 2&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">condition 1</span><br></pre></td></tr></table></figure><h1>结构化命令</h1><h2 id="分支">分支</h2><h3 id="if-then-elif-else-fi">if-then-elif-else-fi</h3><p>完整的<code>if-then</code>语句如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition/<span class="built_in">command</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    commands    <span class="comment"># 多个命令</span></span><br><span class="line"><span class="keyword">elif</span> condition/<span class="built_in">command</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    commands</span><br><span class="line">[...]           <span class="comment"># 多个elif分支</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    commands</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure><p>注意，<code>if</code>后可<strong>接命令或测试语句</strong>，当所接命令退出码为0时判定为真，测试语句逻辑为真时判定为真。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">if</span> <span class="built_in">pwd</span>; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;pwd successfully exit&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">/home/louishsu</span><br><span class="line"><span class="built_in">pwd</span> successfully <span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line">$ <span class="keyword">if</span> [ 4 -gt 5 ]; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;4 is greater than 5&quot;</span></span><br><span class="line">&gt; <span class="keyword">elif</span> [ 4 -eq 5 ]; <span class="keyword">then</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;4 is equal to 5&quot;</span></span><br><span class="line">&gt; <span class="keyword">else</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;4 is less than 5&quot;</span></span><br><span class="line">&gt; <span class="keyword">fi</span></span><br><span class="line">4 is less than 5</span><br></pre></td></tr></table></figure><p>支持<strong>针对字符串比较的高级特性</strong>，如模式匹配，使用<code>[[ expression ]]</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">if</span> [[ <span class="variable">$USER</span> == l* ]]; <span class="keyword">then</span> <span class="comment"># 双等号</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;This is louishsu!&quot;</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">This is louishsu!</span><br></pre></td></tr></table></figure><h3 id="case-in">case-in</h3><p>多选择语句，可以用<code>case</code>匹配一个值与一个模式，如果匹配成功，执行相匹配的命令。取值将检测匹配的每一个模式。一旦模式匹配，则执行完匹配模式相应命令后不再继续其他模式。如果无一匹配模式，使用星号 * 捕获该值，再执行后面的命令。完整格式如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> variable <span class="keyword">in</span></span><br><span class="line">pattern1)       <span class="comment"># 以右括号结束</span></span><br><span class="line">    commands</span><br><span class="line">    ;;          <span class="comment"># 以;;结束，表示 break</span></span><br><span class="line">pattern2)</span><br><span class="line">    commands</span><br><span class="line">    ;;</span><br><span class="line">[...]</span><br><span class="line">patternN)</span><br><span class="line">    commands</span><br><span class="line">    ;;</span><br><span class="line">*)              <span class="comment"># 无一匹配模式</span></span><br><span class="line">    commands</span><br><span class="line">    ;;</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ var=3</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">case</span> <span class="variable">$var</span> <span class="keyword">in</span></span><br><span class="line">&gt; 1) <span class="built_in">echo</span> <span class="string">&quot;1&quot;</span></span><br><span class="line">&gt; ;;</span><br><span class="line">&gt; 2) <span class="built_in">echo</span> <span class="string">&quot;2&quot;</span></span><br><span class="line">&gt; ;;</span><br><span class="line">&gt; 3) <span class="built_in">echo</span> <span class="string">&quot;3&quot;</span></span><br><span class="line">&gt; ;;</span><br><span class="line">&gt; 4) <span class="built_in">echo</span> <span class="string">&quot;4&quot;</span></span><br><span class="line">&gt; ;;</span><br><span class="line">&gt; *) <span class="built_in">echo</span> <span class="string">&quot;others&quot;</span></span><br><span class="line">&gt; <span class="keyword">esac</span></span><br><span class="line">3</span><br></pre></td></tr></table></figure><h2 id="循环">循环</h2><h3 id="for-do-done">for-do-done</h3><ol><li><p>迭代</p><p>用于迭代列表，<code>in</code>列表是可选的，如果不用它，for循环使用命令行的位置参数。在迭代结束后，<code>variable</code>保存<code>itemN</code>的值且在不修改的情况下一直有效。</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> variable <span class="keyword">in</span> item1 item2 ... itemN   <span class="comment"># 注意无`()`</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    commands</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>以输出数字列表为例</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> number <span class="keyword">in</span> 1 2 3; <span class="keyword">do</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;The number is <span class="variable">$number</span>&quot;</span></span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">The number is 1</span><br><span class="line">The number is 2</span><br><span class="line">The number is 3</span><br><span class="line"></span><br><span class="line">$ nums=(1 2 3)</span><br><span class="line"><span class="comment"># $ for number in $nums; do     # 一种错误做法，只会输出1</span></span><br><span class="line">$ <span class="keyword">for</span> number <span class="keyword">in</span> <span class="variable">$&#123;nums[*]&#125;</span>; <span class="keyword">do</span>  <span class="comment"># 迭代数组</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;The number is <span class="variable">$number</span>&quot;</span></span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">The number is 1</span><br><span class="line">The number is 2</span><br><span class="line">The number is 3</span><br></pre></td></tr></table></figure><p>迭代字符串与数组有所不同</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ str=<span class="string">&quot;I am louishsu&quot;</span></span><br><span class="line">$ <span class="keyword">for</span> wd <span class="keyword">in</span> <span class="variable">$str</span>; <span class="keyword">do</span>        <span class="comment"># 迭代字符串</span></span><br><span class="line"><span class="comment"># $ for wd in $&#123;str[*]&#125;; do # 同上，也可迭代字符串</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="variable">$wd</span></span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">I</span><br><span class="line">am</span><br><span class="line">louishsu</span><br></pre></td></tr></table></figure><p>还可迭代输出命令结果、通配符等，<code>in</code>后可接多个命令或目录</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">for</span> file <span class="keyword">in</span> $( ls; <span class="built_in">pwd</span> ); <span class="keyword">do</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$file</span>&quot;</span></span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">Downloads</span><br><span class="line">anaconda3</span><br><span class="line">backup</span><br><span class="line">/home/louishsu</span><br><span class="line"></span><br><span class="line">$ <span class="keyword">for</span> file <span class="keyword">in</span> /home/louishsu/*; <span class="keyword">do</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">/home/louishsu/Downloads</span><br><span class="line">/home/louishsu/anaconda3</span><br><span class="line">/home/louishsu/backup</span><br></pre></td></tr></table></figure></li><li><p>C/C++风格</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (( variable assignment ; condition ; iteration process ))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    commands</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><p>注意</p><ul><li>变量赋值可带等号；</li><li><code>condition</code>中变量不需<code>$</code>；</li><li>可同时定义两个变量。</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> (( i=0, j=0; i&lt;3 &amp;&amp; j&lt;4; i++, j+=2 )); <span class="keyword">do</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="variable">$i</span>, <span class="variable">$j</span></span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">0, 0</span><br><span class="line">1, 2</span><br></pre></td></tr></table></figure></li></ol><h3 id="while-do-done">while-do-done</h3><p>基本格式如下，在<code>condition</code>为假时停止循环</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    commands</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ var=0</span><br><span class="line">$ <span class="keyword">while</span> <span class="built_in">echo</span> <span class="variable">$var</span> &amp;&amp; [ <span class="variable">$var</span> -le 3 ]; <span class="keyword">do</span> </span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;loop&quot;</span></span><br><span class="line">&gt; (( var++ ))</span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">0</span><br><span class="line">loop</span><br><span class="line">1</span><br><span class="line">loop</span><br><span class="line">2</span><br><span class="line">loop</span><br><span class="line">3</span><br><span class="line">loop</span><br><span class="line">4       <span class="comment"># 注意$var为4时，`echo $var`执行了一次</span></span><br></pre></td></tr></table></figure><h3 id="until-do-done">until-do-done</h3><p>基本格式如下，与<code>while</code>相反，在<code>condition</code>为真时停止循环</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">until condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    commands</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ var=0</span><br><span class="line">$ until <span class="built_in">echo</span> <span class="variable">$var</span> &amp;&amp; [ <span class="variable">$var</span> -le 3 ]; <span class="keyword">do</span></span><br><span class="line">&gt; <span class="built_in">echo</span> <span class="string">&quot;loop&quot;</span></span><br><span class="line">&gt; (( var++ ))</span><br><span class="line">&gt; <span class="keyword">done</span></span><br><span class="line">0</span><br></pre></td></tr></table></figure><h3 id="循环控制-break-continue">循环控制: break, continue</h3><p>循环控制语句，包括<code>break/continue</code>，作用同C/C++或Python，不做过多介绍</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;输入 1 到 5 之间的数字:&quot;</span></span><br><span class="line">    <span class="built_in">read</span> aNum</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">        1|2|3|4|5) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字为 <span class="variable">$aNum</span>!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字不是 1 到 5 之间的! 游戏结束&quot;</span></span><br><span class="line">            <span class="built_in">break</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">while</span> :</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;输入 1 到 5 之间的数字: &quot;</span></span><br><span class="line">    <span class="built_in">read</span> aNum</span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$aNum</span> <span class="keyword">in</span></span><br><span class="line">        1|2|3|4|5) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字为 <span class="variable">$aNum</span>!&quot;</span></span><br><span class="line">        ;;</span><br><span class="line">        *) <span class="built_in">echo</span> <span class="string">&quot;你输入的数字不是 1 到 5 之间的!&quot;</span></span><br><span class="line">            <span class="built_in">continue</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;游戏结束&quot;</span>     <span class="comment"># 永远不会执行</span></span><br><span class="line">        ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h1>函数</h1><h2 id="创建和调用函数">创建和调用函数</h2><p>创建函数格式如下，注意函数名唯一，且shell中的函数支持<strong>递归调用</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> func &#123;</span><br><span class="line">    commands</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>调用函数时，在行中指定函数即可，但是函数定义必须在调用之前</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">commands</span><br><span class="line">[...]</span><br><span class="line">func</span><br><span class="line">[...]</span><br><span class="line">commands</span><br></pre></td></tr></table></figure><h2 id="参数传递">参数传递</h2><h3 id="作用域-local">作用域: local</h3><p>默认情况下，脚本中定义的任何变量都是<strong>全局变量</strong>(包括函数体内定义的变量)，可以在函数体中读取全局变量进行操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> func &#123;</span><br><span class="line">        var1=3  <span class="comment"># 修改全局变量</span></span><br><span class="line">        var2=4  <span class="comment"># 定义全局变量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅定义var1</span></span><br><span class="line">var1=2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span>, <span class="variable">$var2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数中定义var2，仍为全局变量</span></span><br><span class="line">func</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span>, <span class="variable">$var2</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh</span><br><span class="line">2,</span><br><span class="line">3, 4</span><br></pre></td></tr></table></figure><p>在函数体内可定义局部变量，使用<code>local</code>关键字，注意</p><ol><li>局部变量在函数体外不可见；</li><li>即使声明相同名称的局部变量，shell也会保证两个变量是分离的。</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> func &#123;</span><br><span class="line">        <span class="built_in">local</span> var1=3    <span class="comment"># 定义局部变量</span></span><br><span class="line">        <span class="built_in">local</span> var2=4    <span class="comment"># 定义局部变量</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 仅定义var1</span></span><br><span class="line">var1=2</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span>, <span class="variable">$var2</span>&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 函数中定义var2</span></span><br><span class="line">func</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span>, <span class="variable">$var2</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh</span><br><span class="line">2,</span><br><span class="line">2,</span><br></pre></td></tr></table></figure><h3 id="变量参数-2">变量参数</h3><p>类似shell脚本的参数传递，函数同样使用标准的参数环境变量进行参数传递，用<code>$0</code>表示函数名，<code>$1, $2, ...</code>表示参数，用<code>$#</code>获取参数数目，用<code>$*/$@</code>获取全部参数。</p><p>由于函数使用特殊参数环境变量进行参数传递，因此无法直接获取脚本在命令行中的参数值，两者不关联。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> func &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;These are function parameters: $*&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;There are <span class="variable">$#</span> parameters&quot;</span></span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;The last parameter is: <span class="variable">$&#123;!#&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;These are script parameters: $*\n&quot;</span></span><br><span class="line">func 5 6 7</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh 1 2 3</span><br><span class="line">These are script parameters: 1 2 3</span><br><span class="line"></span><br><span class="line">These are <span class="keyword">function</span> parameters: 5 6 7</span><br><span class="line">There are 3 parameters</span><br><span class="line">The last parameter is: 7</span><br></pre></td></tr></table></figure><h3 id="数组参数-2">数组参数</h3><p>与函数传递数组，不能简单通过数组名进行；利用命令替换获取返回数组。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> func &#123;</span><br><span class="line">        <span class="built_in">local</span> array=( $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$@</span>&quot;</span>) )</span><br><span class="line">        <span class="keyword">for</span> (( i = 0; i &lt; <span class="variable">$&#123;#array[*]&#125;</span>; i++ )) &#123;</span><br><span class="line">                (( array[<span class="variable">$i</span>]++ ))</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;array[*]&#125;</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">array=(1 2 3)</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Input: <span class="variable">$&#123;array[*]&#125;</span>&quot;</span></span><br><span class="line"></span><br><span class="line">ret=( $( func $(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;array[*]&#125;</span>&quot;</span>) ) )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Output: <span class="variable">$&#123;ret[*]&#125;</span>&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh</span><br><span class="line">Input: 1 2 3</span><br><span class="line">Output: 2 3 4</span><br></pre></td></tr></table></figure><h2 id="返回值-return-echo">返回值: return, echo</h2><ol><li><p><strong>默认退出状态码</strong><br>若函数<strong>未指定返回语句<code>return</code></strong>，则执行结束后标准变量<code>$?</code>内存储函数最后一条命令的退出码状态。</p></li><li><p><strong>指定返回值</strong><br>使用<code>return</code>退出函数并<strong>返回指定的退出状态码</strong>，同样地保存在标准变量<code>$?</code>中，但是用这种方式获取返回值需要注意以下两点</p><ul><li>函数退出后立即取返回值，<strong>防止被覆盖</strong>；</li><li><strong>退出码范围</strong>是0~255；</li><li>若函数中命令执行错误导致提前退出函数，则此时<code>$?</code>中为错误状态码，不可作为函数输出。</li></ul> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> add &#123;</span><br><span class="line">        <span class="built_in">return</span> $[ <span class="variable">$1</span> + <span class="variable">$2</span> ]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var1=4; var2=5</span><br><span class="line">add <span class="variable">$var1</span> <span class="variable">$var2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span> + <span class="variable">$var2</span> = $?&quot;</span></span><br></pre></td></tr></table></figure> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh</span><br><span class="line">4 + 5 = 9</span><br></pre></td></tr></table></figure></li><li><p>用命令替换<strong>获取函数输出</strong>作为返回值<br>这种方式可以避免与状态码复用，还可以返回如浮点、字符串等类型</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> add &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;$[ <span class="variable">$1</span> + <span class="variable">$2</span> ]&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">var1=4; var2=5</span><br><span class="line">sum=$( add <span class="variable">$var1</span> <span class="variable">$var2</span> )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$var1</span> + <span class="variable">$var2</span> = <span class="variable">$sum</span>&quot;</span></span><br></pre></td></tr></table></figure><p>注意到，函数中的<code>echo</code>并没有输出到<code>STDOUT</code>中</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">    $ ./test.sh</span><br><span class="line">    4 + 5 = 9</span><br><span class="line">    ```    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 文件包含: source</span></span><br><span class="line"></span><br><span class="line">用`<span class="built_in">source</span>`命令在当前shell上下文中执行命令，而不是创建新shell，其快捷别名为**点操作符**(dot operator)</span><br><span class="line"></span><br><span class="line">例如创建函数脚本`funcs.sh`</span><br><span class="line">``` bash</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="keyword">function</span> add &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;$[ <span class="variable">$1</span> + <span class="variable">$2</span> ]&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">function</span> sub &#123;</span><br><span class="line">        <span class="built_in">echo</span> <span class="string">&quot;$[ <span class="variable">$1</span> - <span class="variable">$2</span>  ]&quot;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ol><p>在<code>test.sh</code>中调用函数</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment"># source funcs.sh</span></span><br><span class="line">. funcs.sh</span><br><span class="line"></span><br><span class="line">var1=4; var2=5</span><br><span class="line">sum=$( add <span class="variable">$var1</span> <span class="variable">$var2</span> )</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Sum of <span class="variable">$var1</span> and <span class="variable">$var2</span> is <span class="variable">$sum</span>.&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ./test.sh</span><br><span class="line">Sum of 4 and 5 is 9.</span><br></pre></td></tr></table></figure><h1>总结</h1><ol><li>注意区分各类括号的使用<ul><li>变量取值：<code>$&#123; variable &#125;</code></li><li>命令替换：<code>$( command )</code></li><li>整数计算：<code>$[ expression ]</code></li><li>多行整数计算：<code>$(( expression1, expression2, ... ))</code></li><li>测试：<code>[ expression ]</code></li><li>高级字符串比较测试：<code>[[ expression ]]</code></li></ul></li><li>注意数值比较和字符串比较的差异</li><li>重定向中符号的使用</li><li>注意函数参数的传递</li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>经典机器学习算法推导汇总</title>
      <link href="/2020/02/10/%E7%BB%8F%E5%85%B8%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%8E%A8%E5%AF%BC%E6%B1%87%E6%80%BB.html"/>
      <url>/2020/02/10/%E7%BB%8F%E5%85%B8%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E7%AE%97%E6%B3%95%E6%8E%A8%E5%AF%BC%E6%B1%87%E6%80%BB.html</url>
      
        <content type="html"><![CDATA[<h1>目录</h1><ul><li><a href="#%E7%9B%AE%E5%BD%95">目录</a></li><li><a href="#%E5%89%8D%E8%A8%80">前言</a></li><li><a href="#mlemap">MLE/MAP</a><ul><li><a href="#%E6%9C%80%E5%A4%A7%E4%BC%BC%E7%84%B6%E4%BC%B0%E8%AE%A1mle">最大似然估计(MLE)</a></li><li><a href="#%E6%9C%80%E5%A4%A7%E5%90%8E%E9%AA%8C%E6%A6%82%E7%8E%87%E4%BC%B0%E8%AE%A1map">最大后验概率估计(MAP)</a></li></ul></li><li><a href="#%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92%E9%80%BB%E8%BE%91%E6%96%AF%E8%92%82%E5%9B%9E%E5%BD%92">线性回归/逻辑斯蒂回归</a><ul><li><a href="#%E7%BA%BF%E6%80%A7%E5%9B%9E%E5%BD%92">线性回归</a></li><li><a href="#%E9%80%BB%E8%BE%91%E6%96%AF%E8%92%82%E5%9B%9E%E5%BD%92lr">逻辑斯蒂回归(LR)</a></li></ul></li><li><a href="#%E6%9C%B4%E7%B4%A0%E8%B4%9D%E5%8F%B6%E6%96%AF">朴素贝叶斯</a></li><li><a href="#pcalda">PCA/LDA</a><ul><li><a href="#pca">PCA</a><ul><li><a href="#%E8%AE%A1%E7%AE%97%E6%AD%A5%E9%AA%A4">计算步骤</a></li><li><a href="#%E8%AF%81%E6%98%8E">证明</a></li></ul></li><li><a href="#lda">LDA</a><ul><li><a href="#%E8%AE%A1%E7%AE%97%E6%AD%A5%E9%AA%A4-1">计算步骤</a></li><li><a href="#%E8%AF%81%E6%98%8E-1">证明</a></li></ul></li></ul></li><li><a href="#emgmm">EM/GMM</a><ul><li><a href="#em%E7%AE%97%E6%B3%95">EM算法</a></li><li><a href="#gmm%E6%A8%A1%E5%9E%8B">GMM模型</a></li></ul></li><li><a href="#svm">SVM</a><ul><li><a href="#kkt%E6%9D%A1%E4%BB%B6">KKT条件</a></li><li><a href="#%E6%A0%B8%E6%8A%80%E5%B7%A7">核技巧</a></li><li><a href="#%E5%88%86%E7%B1%BB%E9%97%AE%E9%A2%98">分类问题</a><ul><li><a href="#%E7%BA%BF%E6%80%A7%E5%8F%AF%E5%88%86">线性可分</a></li><li><a href="#%E7%BA%BF%E6%80%A7%E4%B8%8D%E5%8F%AF%E5%88%86">线性不可分</a></li></ul></li><li><a href="#%E5%9B%9E%E5%BD%92%E9%97%AE%E9%A2%98">回归问题</a></li><li><a href="#%E6%B1%82%E8%A7%A3%E4%BC%98%E5%8C%96%E9%97%AE%E9%A2%98">求解优化问题</a></li></ul></li><li><a href="#%E8%81%9A%E7%B1%BB">聚类</a><ul><li><a href="#%E8%B7%9D%E7%A6%BB%E5%BA%A6%E9%87%8F">距离度量</a></li><li><a href="#kmeans">KMeans</a></li><li><a href="#spectral">Spectral</a></li></ul></li><li><a href="#%E5%86%B3%E7%AD%96%E6%A0%91">决策树</a><ul><li><a href="#id3">ID3</a></li><li><a href="#c45">C4.5</a></li><li><a href="#cart">CART</a></li><li><a href="#rf">RF</a></li></ul></li></ul><div style="page-break-after: always;"></div><h1>前言</h1><p>本文只做复习使用，只给出关键算法描述和证明。</p><h1>MLE/MAP</h1><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个样本对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(X^{(i)}, y^{(i)}), i = 1, \cdots, N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>∈</mo><mo stretchy="false">{</mo><msub><mi>C</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">y \in \{C_k, k = 1, \cdots, K\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span>，要求估计参数模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X | \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>的参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>，使之最能描述给定数据分布。</p><h2 id="最大似然估计-MLE">最大似然估计(MLE)</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>优化目标：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>定义：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∏</mo><mi>i</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>取对数：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>求取极值：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>θ</mi></mrow></mfrac><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo>⇒</mo><mover accent="true"><mi>θ</mi><mo>^</mo></mover></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    优化目标：&amp; \hat{\theta} = \arg \max P(D | \theta) \\    定义：&amp; L(D | \theta) = P(D | \theta) = \prod_i P(X^{(i)} | \theta) \\    取对数：&amp; \log L(D | \theta) = \sum_i \log P(X^{(i)} | \theta) \\    求取极值：&amp; \frac{\partial}{\partial \theta} \log L(D | \theta) = 0 \Rightarrow \hat{\theta}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.2307em;vertical-align:-4.3653em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.8653em;"><span style="top:-7.2789em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord cjk_fallback">优化目标：</span></span></span><span style="top:-5.5689em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord cjk_fallback">定义：</span></span></span><span style="top:-2.9412em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord cjk_fallback">取对数：</span></span></span><span style="top:0.0079em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord cjk_fallback">求取极值：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.3653em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.8653em;"><span style="top:-7.2789em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-5.5689em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-2.9412em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:0.0079em;"><span class="pstrut" style="height:3.3714em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.3653em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="最大后验概率估计-MAP">最大后验概率估计(MAP)</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>优化目标：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mover accent="true"><mi>θ</mi><mo>^</mo></mover><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><mi>D</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>其中：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mtext>为给定的参数先验概率分布</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>定义：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∏</mo><mi>i</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>⋅</mo><mi>P</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>取对数：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>+</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>求取极值：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>θ</mi></mrow></mfrac><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><mi>D</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo>⇒</mo><mover accent="true"><mi>θ</mi><mo>^</mo></mover></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    优化目标：&amp; \hat{\theta} = \arg \max P(\theta | D) \\    其中：&amp; P(\theta | D) = \frac{P(D | \theta) P(\theta)}{P(D)} \\    &amp; P(\theta)为给定的参数先验概率分布 \\    定义：&amp; L(\theta | D) = P(D | \theta) P(\theta) = \prod_i P(X^{(i)} | \theta) \cdot P(\theta) \\    取对数：&amp;  \log L(\theta | D) = \sum_i \log P(X^{(i)} | \theta) + \log P(\theta) \\    求取极值：&amp; \frac{\partial}{\partial \theta} \log L(\theta | D) = 0 \Rightarrow \hat{\theta}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:13.3937em;vertical-align:-6.4468em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.9468em;"><span style="top:-9.416em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord cjk_fallback">优化目标：</span></span></span><span style="top:-7.329em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord cjk_fallback">其中：</span></span></span><span style="top:-5.253em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"></span></span><span style="top:-3.5429em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord cjk_fallback">定义：</span></span></span><span style="top:-0.9153em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord cjk_fallback">取对数：</span></span></span><span style="top:2.0338em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord cjk_fallback">求取极值：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.4468em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.9468em;"><span style="top:-9.416em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-7.329em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-5.253em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord cjk_fallback">为给定的参数先验概率分布</span></span></span><span style="top:-3.5429em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-0.9153em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:2.0338em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9579em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span><span style="top:-3.2634em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.4468em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><h1>线性回归/逻辑斯蒂回归</h1><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个样本对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(X^{(i)}, y^{(i)}), i = 1, \cdots, N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span>，记样本矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>N</mi><mo>×</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{N \times n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>。</p><h2 id="线性回归">线性回归</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>标签信息：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>y</mi><mo>∈</mo><msup><mi mathvariant="script">R</mi><mn>1</mn></msup><mtext>，定义模型：</mtext><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msub><mo>=</mo><msubsup><mi>w</mi><mrow><mi>n</mi><mo>×</mo><mn>1</mn></mrow><mi>T</mi></msubsup><msub><mi>x</mi><mrow><mi>n</mi><mo>×</mo><mn>1</mn></mrow></msub><mo>+</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>增广后：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msub><mo>=</mo><msubsup><mi>w</mi><mrow><mi>n</mi><mo>×</mo><mn>1</mn></mrow><mi>T</mi></msubsup><msub><mi>x</mi><mrow><mi>n</mi><mo>×</mo><mn>1</mn></mrow></msub><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>w</mi><mn>1</mn></msub><mo>=</mo><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>x</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>M</mi><mi>S</mi><mi>E</mi><mtext>作为损失，则总体损失：</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>L</mi><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>求取梯度：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>梯度下降：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>w</mi><mi>j</mi></msub><mo>:</mo><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    标签信息：&amp; y \in \mathcal{R}^1，    定义模型：\hat{y}_{1\times 1} = w_{n \times 1}^T x_{n \times 1} + b \\     增广后：&amp; \hat{y}_{1\times 1} = w_{n \times 1}^T x_{n \times 1} \begin{cases} w_1 = b \\ x_1 = 1 \end{cases} \\    MSE作为损失，则总体损失：&amp; L(\hat{y}, y) = \frac{1}{N} \sum_{i=1}^N \frac{1}{2} (\hat{y}^{(i)} - y^{(i)})^2 \\    求取梯度：&amp; \frac{\partial L}{\partial w_j} =         \frac{1}{N} \sum_{i=1}^N (\hat{y}^{(i)} - y^{(i)}) \frac{\partial \hat{y}^{(i)}}{\partial w_j} =         \frac{1}{N} \sum_{i=1}^N (\hat{y}^{(i)} - y^{(i)}) x^{(i)}_j \Rightarrow \\    梯度下降：&amp; w_j := w_j - \alpha \frac{\partial L}{\partial w_j}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:14.3069em;vertical-align:-6.9035em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.4035em;"><span style="top:-10.3405em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord cjk_fallback">标签信息：</span></span></span><span style="top:-7.9305em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord cjk_fallback">增广后：</span></span></span><span style="top:-4.5521em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">MSE</span><span class="mord cjk_fallback">作为损失，则总体损失：</span></span></span><span style="top:-1.1461em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord cjk_fallback">求取梯度：</span></span></span><span style="top:1.803em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord cjk_fallback">梯度下降：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.9035em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.4035em;"><span style="top:-10.3405em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathcal">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span></span></span></span></span><span class="mord cjk_fallback">，定义模型：</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-7.9305em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3053em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.5521em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-1.1461em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:1.803em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.9035em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>若描述为矩阵</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>标签信息</mtext><mi>Y</mi><mo>∈</mo><msup><mi>R</mi><mi>N</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>定义模型：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mrow><mi>N</mi><mo>×</mo><mn>1</mn></mrow></msub><mo>=</mo><msub><mi>X</mi><mrow><mi>N</mi><mo>×</mo><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msub><msub><mi>w</mi><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mn>1</mn></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>总体损失：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>L</mi><mo stretchy="false">(</mo><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo>⋅</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mo>−</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><mo>⋅</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mo>−</mo><mi>Y</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mo>−</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mo stretchy="false">(</mo><mover accent="true"><mi>Y</mi><mo>^</mo></mover><mo separator="true">,</mo><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>N</mi></mrow></mfrac><mo stretchy="false">(</mo><msup><mi>w</mi><mi>T</mi></msup><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mi>w</mi><mo>−</mo><mn>2</mn><msup><mi>Y</mi><mi>T</mi></msup><mi>X</mi><mi>w</mi><mo>+</mo><msup><mi>Y</mi><mi>T</mi></msup><mi>Y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>求取梯度：</mtext><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><menclose notation="updiagonalstrike"><mn>2</mn></menclose><mi>N</mi></mrow></mfrac><mo stretchy="false">(</mo><menclose notation="updiagonalstrike"><mn>2</mn></menclose><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mi>w</mi><mo>−</mo><menclose notation="updiagonalstrike"><mn>2</mn></menclose><msup><mi>X</mi><mi>T</mi></msup><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>梯度下降：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>w</mi><mo>:</mo><mo>=</mo><mi>w</mi><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>解析解：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mover accent="true"><mi>w</mi><mo>^</mo></mover><mo>∗</mo></msup><mo>=</mo><munder><munder><mrow><mo stretchy="false">(</mo><msup><mi>X</mi><mi>T</mi></msup><mi>X</mi><mo>+</mo><mi>λ</mi><mi>I</mi><msup><mo stretchy="false">)</mo><mrow><mo>−</mo><mn>1</mn></mrow></msup><msup><mi>X</mi><mi>T</mi></msup></mrow><mo stretchy="true">⏟</mo></munder><msup><mi>X</mi><mo>+</mo></msup></munder><mi>Y</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \left.\begin{aligned}        &amp; 标签信息 Y \in R^{N} \\        定义模型：&amp; \hat{Y}_{N \times 1} = X_{N \times (n + 1)} w_{(n + 1) \times 1} \\        总体损失：&amp; L(\hat{Y}, Y) = \frac{1}{N} \cdot \frac{1}{2} || \hat{Y} - Y ||_2^2 =        \frac{1}{N} \cdot \frac{1}{2} (\hat{Y} - Y)^T(\hat{Y} - Y)    \end{aligned}\right\} \Rightarrow \\    L(\hat{Y}, Y) = \frac{1}{2 N} (w^T X^T X w - 2 Y^T X w + Y^T Y) \\    求取梯度： \frac{\partial L}{\partial w} = \frac{1}{\cancel{2} N} (\cancel{2} X^T X w - \cancel{2} X^T Y) = 0 \Rightarrow \\    \begin{cases}        梯度下降：&amp; w := w - \alpha \frac{\partial L}{\partial w} \\        解析解：&amp; \hat{w}^* = \underbrace{(X^T X + \lambda I)^{-1} X^T}_{X^+} Y     \end{cases}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:14.9305em;vertical-align:-7.2152em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.7152em;"><span style="top:-9.7152em;"><span class="pstrut" style="height:4.9828em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9828em;"><span style="top:-5.4129em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"></span></span><span style="top:-3.8061em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord cjk_fallback">定义模型：</span></span></span><span style="top:-1.8247em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord cjk_fallback">总体损失：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4828em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.9828em;"><span style="top:-5.4129em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mord cjk_fallback">标签信息</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;">R</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.8061em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.2222em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.8247em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4828em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-1.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.592em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-5.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-5.611em;"><span class="pstrut" style="height:4.9828em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">Xw</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">Xw</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span><span style="top:-3.2536em;"><span class="pstrut" style="height:4.9828em;"></span><span class="mord"><span class="mord cjk_fallback">求取梯度：</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8444em;"><span style="top:-3.0444em;"><span class="pstrut" style="height:3.0444em;"></span><span class="mord"><span class="mord">2</span></span></span><span class="svg-align" style="top:-2.8444em;"><span class="pstrut" style="height:3.0444em;"></span><span style="height:1.0444em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.0444em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8444em;"><span style="top:-3.0444em;"><span class="pstrut" style="height:3.0444em;"></span><span class="mord"><span class="mord">2</span></span></span><span class="svg-align" style="top:-2.8444em;"><span class="pstrut" style="height:3.0444em;"></span><span style="height:1.0444em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.0444em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">Xw</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8444em;"><span style="top:-3.0444em;"><span class="pstrut" style="height:3.0444em;"></span><span class="mord"><span class="mord">2</span></span></span><span class="svg-align" style="top:-2.8444em;"><span class="pstrut" style="height:3.0444em;"></span><span style="height:1.0444em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.0444em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:0.0824em;"><span class="pstrut" style="height:4.9828em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewbox="0 0 888.89 316" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewbox="0 0 888.89 316" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2689em;"><span style="top:-4.2689em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">梯度下降：</span></span></span><span style="top:-2.8289em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">解析解：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7689em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2689em;"><span style="top:-4.2689em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.8289em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6887em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-1.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7027em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span class="svg-align" style="top:-2.102em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">λ</span><span class="mord mathnormal" style="margin-right:0.07847em;">I</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.898em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5899em;"><span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7689em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:7.2152em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><h2 id="逻辑斯蒂回归-LR">逻辑斯蒂回归(LR)</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>标签信息：</mtext><mi>y</mi><mo>∈</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>定义模型：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>z</mi><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi>X</mi><mo>+</mo><mi>b</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtext>其中</mtext><mi>σ</mi><mo stretchy="false">(</mo><mi>z</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mi>z</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>样本</mtext><mi>X</mi><mtext>服从</mtext><mn>0</mn><mo>−</mo><mn>1</mn><mtext>分布：</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mo>−</mo><mi>y</mi></mrow></msup><mo stretchy="false">(</mo><mover accent="true"><mi>y</mi><mo>^</mo></mover><msup><mo stretchy="false">)</mo><mi>y</mi></msup><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mtext>为直接待估参数</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>M</mi><mi>L</mi><mi>E</mi><mtext>：</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∏</mo><mi>i</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>⇒</mo><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>优化目标：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mover accent="true"><mi>w</mi><mo>^</mo></mover><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>求取极值：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></msup><mo stretchy="false">(</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi>log</mi><mo>⁡</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mfrac><mo stretchy="false">(</mo><mo>−</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo stretchy="false">)</mo><mo>+</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mfrac><mn>1</mn><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mfrac><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>其中：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><msup><mi>σ</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mfrac><mrow><mi mathvariant="normal">∂</mi><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mo>−</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><menclose notation="downdiagonalstrike"><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></menclose><mo stretchy="false">)</mo><mfrac><mn>1</mn><menclose notation="updiagonalstrike"><mrow><mn>1</mn><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></menclose></mfrac><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><menclose notation="updiagonalstrike"><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow></menclose><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>+</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mfrac><mn>1</mn><menclose notation="updiagonalstrike"><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></menclose></mfrac><menclose notation="updiagonalstrike"><mrow><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></menclose><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><menclose notation="downdiagonalstrike"><mrow><mi>σ</mi><mo stretchy="false">(</mo><msup><mi>z</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></menclose><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mo stretchy="false">(</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mover accent="true"><mi>y</mi><mo>^</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><msubsup><mi>x</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>梯度下降：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>w</mi><mi>j</mi></msub><mo>:</mo><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><mi>α</mi><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>L</mi></mrow><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    标签信息： y \in \{0, 1\} \\    定义模型：&amp; \begin{cases} \hat{y} = \sigma(z) \\ z = w^T X + b \end{cases} \\    &amp; 其中 \sigma(z) = \frac{1}{1 + \exp(-z)} \\    样本X服从0-1分布：&amp; P(X) = (1 - \hat{y})^{1 - y} (\hat{y})^{y} (\hat{y}^{(i)}为直接待估参数) \\    MLE：&amp; L(D | w) = \prod_i P(X^{(i)}) \Rightarrow         \log L(D | w) = \sum_i \log P(X^{(i)}) \\    优化目标：&amp; \hat{w} = \arg \max L(D | w) = \arg \max \log L(D | w) \\    求取极值：&amp; \begin{aligned}        \frac{\partial L}{\partial w_j} &amp; =        \frac{\partial}{\partial w_j} \sum_i \log P(X^{(i)}) \\         &amp; = \frac{\partial}{\partial w_j} \sum_i \log (1 - \hat{y}^{(i)})^{1 - y^{(i)}} (\hat{y}^{(i)})^{y^{(i)}} \\        &amp; = \frac{\partial}{\partial w_j} \sum_i (1 - y^{(i)}) \log (1 - \hat{y}^{(i)}) + \frac{\partial}{\partial w_j} \sum_i y^{(i)} \log \hat{y}^{(i)} \\        &amp; = \sum_i (1 - y^{(i)}) \frac{1}{1 - \hat{y}^{(i)}} (- \frac{\partial y^{(i)}}{\partial w_j}) +             \sum_i y^{(i)} \frac{1}{\hat{y}^{(i)}} (\frac{\partial y^{(i)}}{\partial w_j})    \end{aligned} \\    其中：&amp; \frac{\partial y^{(i)}}{\partial w_j} = \sigma&#x27;(z^{(i)}) \frac{\partial z^{(i)}}{\partial w_j} = \sigma(z^{(i)}) (1 - \sigma(z^{(i)})) x^{(i)}_j \Rightarrow \\    &amp; \frac{\partial L}{\partial w_j} = \sum_i - (1 - \bcancel{y^{(i)}}) \frac{1}{\cancel{1 - \hat{y}^{(i)}}} \sigma(z^{(i)}) \cancel{(1 - \sigma(z^{(i)}))} x^{(i)}_j + \\        &amp; \sum_i y^{(i)} \frac{1}{\cancel{\hat{y}^{(i)}}} \cancel{\sigma(z^{(i)})} (1 - \bcancel{\sigma(z^{(i)})}) x^{(i)}_j         = \sum_i (y^{(i)} - \hat{y}^{(i)}) x^{(i)}_j \Rightarrow \\         梯度下降：&amp; w_j := w_j - \alpha \frac{\partial L}{\partial w_j}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:36.702em;vertical-align:-18.101em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:18.601em;"><span style="top:-26.006em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord cjk_fallback">标签信息：</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span><span style="top:-23.596em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord cjk_fallback">定义模型：</span></span></span><span style="top:-20.7245em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"></span></span><span style="top:-18.5505em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord cjk_fallback">样本</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord cjk_fallback">服从</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span><span class="mord cjk_fallback">分布：</span></span></span><span style="top:-16.8405em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mord cjk_fallback">：</span></span></span><span style="top:-14.4229em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord cjk_fallback">优化目标：</span></span></span><span style="top:-7.5179em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord cjk_fallback">求取极值：</span></span></span><span style="top:0.0921em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord cjk_fallback">其中：</span></span></span><span style="top:2.7357em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"></span></span><span style="top:5.6348em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"></span></span><span style="top:8.5839em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord cjk_fallback">梯度下降：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:18.101em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:17.101em;"><span style="top:-23.596em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-20.7245em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mord cjk_fallback">其中</span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-18.5505em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">为直接待估参数</span><span class="mclose">)</span></span></span><span style="top:-16.8405em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-14.4229em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span><span style="top:-7.5179em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.245em;"><span style="top:-8.4386em;"><span class="pstrut" style="height:3.565em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-5.4894em;"><span class="pstrut" style="height:3.565em;"></span><span class="mord"></span></span><span style="top:-2.5403em;"><span class="pstrut" style="height:3.565em;"></span><span class="mord"></span></span><span style="top:0.6023em;"><span class="pstrut" style="height:3.565em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.745em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:6.245em;"><span style="top:-8.4386em;"><span class="pstrut" style="height:3.565em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-5.4894em;"><span class="pstrut" style="height:3.565em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0897em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.0897em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.5403em;"><span class="pstrut" style="height:3.565em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:0.6023em;"><span class="pstrut" style="height:3.565em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8984em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8984em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.745em;"><span></span></span></span></span></span></span></span></span></span><span style="top:0.0921em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8019em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.565em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">))</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:2.7357em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">−</span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord cancel-lap"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.1324em;"><span class="pstrut" style="height:3.1324em;"></span><span class="mord cancel-pad"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-2.938em;"><span class="pstrut" style="height:3.1324em;"></span><span style="height:1.1324em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.1324em"><line x1="0" y1="0" x2="100%" y2="100%" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cancel-lap"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-3.0084em;"><span class="pstrut" style="height:3.0084em;"></span><span class="mord cancel-pad"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-2.814em;"><span class="pstrut" style="height:3.0084em;"></span><span style="height:1.0084em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.0084em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8984em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cancel-lap"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.188em;"><span class="pstrut" style="height:3.188em;"></span><span class="mord cancel-pad"><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">))</span></span></span><span class="svg-align" style="top:-2.938em;"><span class="pstrut" style="height:3.188em;"></span><span style="height:1.188em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.188em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mord">+</span></span></span><span style="top:5.6348em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.296em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord cancel-lap"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-3.0084em;"><span class="pstrut" style="height:3.0084em;"></span><span class="mord cancel-pad"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span class="svg-align" style="top:-2.814em;"><span class="pstrut" style="height:3.0084em;"></span><span style="height:1.0084em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.0084em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8984em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord cancel-lap"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.188em;"><span class="pstrut" style="height:3.188em;"></span><span class="mord cancel-pad"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span class="svg-align" style="top:-2.938em;"><span class="pstrut" style="height:3.188em;"></span><span style="height:1.188em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.188em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord cancel-lap"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.188em;"><span class="pstrut" style="height:3.188em;"></span><span class="mord cancel-pad"><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span class="svg-align" style="top:-2.938em;"><span class="pstrut" style="height:3.188em;"></span><span style="height:1.188em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="1.188em"><line x1="0" y1="0" x2="100%" y2="100%" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.25em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4231em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.413em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:8.5839em;"><span class="pstrut" style="height:8.245em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">:=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:18.101em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><h1>朴素贝叶斯</h1><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个样本对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(X^{(i)}, y^{(i)}), i = 1, \cdots, N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>∈</mo><mo stretchy="false">{</mo><msub><mi>C</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">y \in \{C_k, k = 1, \cdots, K\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span>。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>定义模型为条件概率分布：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>由贝叶斯公式：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>称：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>后验概率：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mi mathvariant="normal">∣</mi><mi>X</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>似然函数：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo stretchy="false">)</mo><mo>=</mo><msubsup><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mi>P</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mtext>朴素贝叶斯</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>先验概率：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>证据因子：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo>∑</mo><mi>k</mi></msub><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>C</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>C</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mover accent="true"><mi>y</mi><mo>^</mo></mover></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>C</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>C</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>k</mi></munder><munderover><mo>∏</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mo stretchy="false">(</mo><msub><mi>X</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi>Y</mi><mo>=</mo><msub><mi>C</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><mi>Y</mi><mo>=</mo><msub><mi>C</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    定义模型为条件概率分布：&amp; P(Y | X) \\    由贝叶斯公式：&amp; P(Y | X) = \frac{P(X | Y) P(Y)}{P(X)} \\    称：&amp; \begin{cases}        后验概率：&amp; P(Y | X) \\         似然函数：&amp; P(X | Y) = \prod_{j=1}^n P(X_j | Y) (朴素贝叶斯)\\         先验概率：&amp; P(Y) \\         证据因子：&amp; P(X) = \sum_k P(X | Y = C_k) P(Y = C_k)    \end{cases} \\    \hat{y} &amp; = \max_k P(X | Y = C_k) P(Y = C_k) \\     &amp; = \max_k \prod_{j=1}^n P(X_j | Y = C_k) P(Y = C_k)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:15.4841em;vertical-align:-7.492em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.9921em;"><span style="top:-12.284em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"><span class="mord cjk_fallback">定义模型为条件概率分布：</span></span></span><span style="top:-10.197em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"><span class="mord cjk_fallback">由贝叶斯公式：</span></span></span><span style="top:-5.829em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"><span class="mord cjk_fallback">称：</span></span></span><span style="top:-2.0571em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span></span></span><span style="top:0.6464em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:7.492em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.9921em;"><span style="top:-12.284em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span><span style="top:-10.197em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-5.829em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-1.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.592em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-5.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1319em;"><span style="top:-5.1319em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">后验概率：</span></span></span><span style="top:-3.6919em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">似然函数：</span></span></span><span style="top:-2.2481em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">先验概率：</span></span></span><span style="top:-0.8081em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord cjk_fallback">证据因子：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6319em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1319em;"><span style="top:-5.1319em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span><span style="top:-3.6919em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∏</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8043em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord cjk_fallback">朴素贝叶斯</span><span class="mclose">)</span></span></span><span style="top:-2.2481em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mclose">)</span></span></span><span style="top:-0.8081em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1864em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6319em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.0571em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:0.6464em;"><span class="pstrut" style="height:5.1319em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7521em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6514em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:7.492em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h1>PCA/LDA</h1><h2 id="PCA">PCA</h2><p>给定<strong>包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>个样本的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>维数据集</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msubsup><mi>X</mi><mrow><mi>N</mi><mo>×</mo><mn>1</mn></mrow><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>M</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{X_{N \times 1}^{(i)}, i = 1, \cdots, M\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3967em;vertical-align:-0.3519em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.4065em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3519em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mclose">}</span></span></span></span>构成样本矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>N</mi><mo>×</mo><mi>M</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">)</mo></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>⋯</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>M</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">X_{N \times M} = \begin{bmatrix}X^{(1)} &amp; X^{(2)} &amp; \cdots X^{(M)}\end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.248em;vertical-align:-0.374em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874em;"><span style="top:-2.986em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.374em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874em;"><span style="top:-2.986em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.374em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.874em;"><span style="top:-2.986em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.374em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span>，现希望求取主分量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>β</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">\beta_k, k = 1, \cdots, K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8778em;vertical-align:-0.1944em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>使得数据投影<strong>在各主分量上的散布最大/方差最大</strong>。</p><h3 id="计算步骤">计算步骤</h3><ol><li>计算维度间的<strong>协方差矩阵</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi mathvariant="normal">Σ</mi><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow></msub><mo>=</mo><mfrac><mn>1</mn><mi>M</mi></mfrac><mover accent="true"><mi>X</mi><mo>~</mo></mover><msup><mover accent="true"><mi>X</mi><mo>~</mo></mover><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">\Sigma_{N \times N} = \frac{1}{M} \tilde{X} \tilde{X}^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.2652em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mover accent="true"><mi>X</mi><mo>~</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><mover accent="true"><mi>X</mi><mo stretchy="true">‾</mo></mover><mo separator="true">,</mo><mover accent="true"><mi>X</mi><mo stretchy="true">‾</mo></mover><mo>=</mo><mfrac><mn>1</mn><mi>M</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>M</mi></msubsup><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\tilde{X}^{(i)} = X^{(i)} - \overline{X}, \overline{X} = \frac{1}{M} \sum_{i=1}^{M} X^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9202em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.9713em;vertical-align:-0.0833em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.0778em;vertical-align:-0.1944em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.8033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8833em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span><span style="top:-3.8033em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.3262em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>；</li><li>求矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord">Σ</span></span></span></span>的<strong>特征值分解</strong>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi><msub><mi>β</mi><mi>k</mi></msub><mo>=</mo><msub><mi>λ</mi><mi>k</mi></msub><msub><mi>β</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\Sigma \beta_k = \lambda_k \beta_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord">Σ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；</li><li>将特征对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>λ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi>β</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\lambda_k, \beta_k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>按特征值<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>λ</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">\lambda_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>降序排序后，选取前<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个<strong>主分量</strong>作为投影轴构成投影矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>B</mi><mrow><mi>N</mi><mo>×</mo><mi>K</mi></mrow></msub></mrow><annotation encoding="application/x-tex">B_{N \times K}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>；</li><li><strong>投影</strong>：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mrow><mi>K</mi><mo>×</mo><mi>M</mi></mrow></msub><mo>=</mo><msubsup><mi>B</mi><mrow><mi>N</mi><mo>×</mo><mi>K</mi></mrow><mi>T</mi></msubsup><msub><mi>X</mi><mrow><mi>N</mi><mo>×</mo><mi>M</mi></mrow></msub></mrow><annotation encoding="application/x-tex">S_{K \times M} = B_{N \times K}^T X_{N \times M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.175em;vertical-align:-0.3337em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4247em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3337em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>；<strong>重建</strong>；<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>X</mi><mo>^</mo></mover><mo>=</mo><msub><mi>B</mi><mrow><mi>N</mi><mo>×</mo><mi>K</mi></mrow></msub><msub><mi>S</mi><mrow><mi>K</mi><mo>×</mo><mi>M</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{X} = B_{N \times K} S_{K \times M}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9468em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0502em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">M</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>。</li></ol><h3 id="证明">证明</h3><ol><li><p>第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">1</span></span></span></span>主成分<br>优化目标为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>β</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><mn>1</mn></mspace></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \beta_1 &amp; = \arg \max ||S_1||_2^2 \\ s.t. &amp; \quad ||\beta_1||_2^2 = 1\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0482em;vertical-align:-1.2741em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7741em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3859em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2741em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7741em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3859em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2741em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>那么</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mi>S</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>S</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><msub><mi>β</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>β</mi><mn>1</mn><mi>T</mi></msubsup><munder><munder><mrow><mi>X</mi><msup><mi>X</mi><mi>T</mi></msup></mrow><mo stretchy="true">⏟</mo></munder><mi>C</mi></munder><msub><mi>β</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>C</mi><mo>=</mo><mi>X</mi><msup><mi>X</mi><mi>T</mi></msup><mo>=</mo><mi>W</mi><mi mathvariant="normal">Λ</mi><msup><mi>W</mi><mi>T</mi></msup></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>β</mi><mn>1</mn><mi>T</mi></msubsup><mi>W</mi><mi mathvariant="normal">Λ</mi><munder><munder><mrow><msup><mi>W</mi><mi>T</mi></msup><msub><mi>β</mi><mn>1</mn></msub></mrow><mo stretchy="true">⏟</mo></munder><msub><mi>α</mi><mn>1</mn></msub></munder><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>λ</mi><mi>i</mi></msub><msub><mi>α</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub><mo>≤</mo><msub><mi>λ</mi><mn>1</mn></msub><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>α</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>β</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>β</mi><mn>1</mn></msub><mo>=</mo><msubsup><mi>α</mi><mn>1</mn><mi>T</mi></msubsup><msup><mi>W</mi><mi>T</mi></msup><mi>W</mi><mi>α</mi><mo>=</mo><msubsup><mi>α</mi><mn>1</mn><mi>T</mi></msubsup><mi>α</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>α</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub><mo>=</mo><mn>1</mn><mo stretchy="false">(</mo><mtext>单位约束</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>≤</mo><msub><mi>λ</mi><mn>1</mn></msub><mspace width="1em"><mtext>为使</mtext><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mn>1</mn></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mtext>极大化，取</mtext></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>α</mi><mn>11</mn></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>α</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi></mrow></mstyle></mtd></mtr></mtable></mrow><mo>⇒</mo><msub><mi>β</mi><mn>1</mn></msub><mo>=</mo><mi>W</mi><msub><mi>α</mi><mn>1</mn></msub><mo>=</mo><msub><mi>w</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \left. \begin{aligned}        \left. \begin{aligned}            ||S_1||_2^2 &amp; = S_1^T S_1 \\            S_1 &amp; = X^T \beta_1        \end{aligned} \right\} \Rightarrow        ||S_1||_2^2 = \beta_1^T \underbrace{X X^T}_C \beta_1 \\        C = X X^T = W \Lambda W^T    \end{aligned} \right\} \Rightarrow \\    \left. \begin{aligned}        ||S_1||_2^2 = \beta_1^T W \Lambda \underbrace{W^T \beta_1}_{\alpha_1} = \sum_{i=1}^N \lambda_i \alpha_{1i} \leq \lambda_1 \sum_{i=1}^N \alpha_{1i} \\        \beta_1^T \beta_1 = \alpha_1^T W^T W \alpha = \alpha_1^T \alpha = \sum_{i=1}^N \alpha_{1i} = 1(单位约束)    \end{aligned} \right\} \Rightarrow \\    ||S_1||_2^2 \leq \lambda_1 \quad 为使||S_1||_2^2极大化，取 \\    \begin{cases}        \alpha_{11} = 1\\        \alpha_{1i} = 0, i = 2, 3, \cdots, N    \end{cases} \Rightarrow     \beta_1 = W \alpha_1 = w_1\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:17.3814em;vertical-align:-8.4407em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:8.9407em;"><span style="top:-11.9403em;"><span class="pstrut" style="height:5.7391em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7395em;"><span style="top:-4.7395em;"><span class="pstrut" style="height:3.8013em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8013em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3587em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3013em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8013em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3587em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3013em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">}</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-1.6737em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span class="svg-align" style="top:-2.352em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.648em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3263em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.2218em;"><span class="pstrut" style="height:3.8013em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">Λ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2395em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-5.6617em;"><span class="pstrut" style="height:5.7391em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7391em;"><span style="top:-5.7391em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">Λ</span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-1.6562em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:-0.0037em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span class="svg-align" style="top:-2.1576em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8424em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4439em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.1669em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord cjk_fallback">单位约束</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2391em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-1.366em;"><span class="pstrut" style="height:3.516em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:3.516em;"></span><span style="height:1.516em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.516em" style="width:0.8889em" viewbox="0 0 888.89 1516" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"/></svg></span></span><span style="top:-3.516em;"><span class="pstrut" style="height:3.516em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.658em;"><span class="pstrut" style="height:3.516em;"></span><span style="height:1.516em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.516em" style="width:0.8889em" viewbox="0 0 888.89 1516" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"/></svg></span></span><span style="top:-6.166em;"><span class="pstrut" style="height:3.516em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-1.2585em;"><span class="pstrut" style="height:5.7391em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">为使</span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">极大化，取</span></span></span><span style="top:1.1515em;"><span class="pstrut" style="height:5.7391em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.4407em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>第<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo stretchy="false">(</mo><mi>r</mi><mo>&gt;</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r(r&gt;1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>主成分<br>优化目标为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mi>β</mi><mi>r</mi></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>r</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"><msubsup><mi>β</mi><mi>r</mi><mi>T</mi></msubsup><msub><mi>β</mi><mi>i</mi></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>r</mi><mo>−</mo><mn>1</mn></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>β</mi><mi>r</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \beta_r &amp; = \arg \max ||S_r||_2^2 \\    s.t. &amp; \quad \beta_r^T \beta_i = 0, i = 1, \cdots, r - 1 \\    &amp; ||\beta_r||_2^2 = 1\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.5995em;vertical-align:-2.0498em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5498em;"><span style="top:-4.6857em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1343em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span></span></span><span style="top:-1.6102em;"><span class="pstrut" style="height:3em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0498em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5498em;"><span style="top:-4.6857em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.1343em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">1</span></span></span><span style="top:-1.6102em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0498em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>那么</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>r</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>S</mi><mi>r</mi><mi>T</mi></msubsup><msub><mi>S</mi><mi>r</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>S</mi><mi>r</mi></msub><mo>=</mo><msup><mi>X</mi><mi>T</mi></msup><msub><mi>β</mi><mi>r</mi></msub></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>r</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>β</mi><mi>r</mi><mi>T</mi></msubsup><munder><munder><mrow><mi>X</mi><msup><mi>X</mi><mi>T</mi></msup></mrow><mo stretchy="true">⏟</mo></munder><mi>C</mi></munder><msub><mi>β</mi><mi>r</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>C</mi><mo>=</mo><mi>X</mi><msup><mi>X</mi><mi>T</mi></msup><mo>=</mo><mi>W</mi><mi mathvariant="normal">Λ</mi><msup><mi>W</mi><mi>T</mi></msup></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>r</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><msubsup><mi>β</mi><mi>r</mi><mi>T</mi></msubsup><mi>W</mi><mi mathvariant="normal">Λ</mi><munder><munder><mrow><msup><mi>W</mi><mi>T</mi></msup><msub><mi>β</mi><mi>r</mi></msub></mrow><mo stretchy="true">⏟</mo></munder><msub><mi>α</mi><mi>r</mi></msub></munder><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>λ</mi><mi>i</mi></msub><msub><mi>α</mi><mrow><mi>r</mi><mi>i</mi></mrow></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>β</mi><mi>r</mi><mi>T</mi></msubsup><msub><mi>β</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>W</mi><msub><mi>α</mi><mi>r</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo stretchy="false">(</mo><msub><mi>w</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msub><mi>α</mi><mrow><mi>r</mi><mi>i</mi></mrow></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>i</mi><mo mathvariant="normal">≠</mo><mi>r</mi><mo stretchy="false">(</mo><mtext>正交约束</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>β</mi><mi>r</mi><mi>T</mi></msubsup><msub><mi>β</mi><mi>r</mi></msub><mo>=</mo><msubsup><mi>α</mi><mi>r</mi><mi>T</mi></msubsup><msup><mi>W</mi><mi>T</mi></msup><mi>W</mi><mi>α</mi><mo>=</mo><msubsup><mi>α</mi><mi>r</mi><mi>T</mi></msubsup><mi>α</mi><mo>=</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></munderover><msub><mi>α</mi><mrow><mn>1</mn><mi>i</mi></mrow></msub><mo>=</mo><mn>1</mn><mo stretchy="false">(</mo><mtext>单位约束</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>r</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mo>=</mo><msub><mi>λ</mi><mi>r</mi></msub><msub><mi>α</mi><mrow><mi>r</mi><mi>r</mi></mrow></msub><mspace width="1em"><mtext>为使</mtext><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>r</mi></msub><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup><mtext>极大化，取</mtext></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>α</mi><mrow><mi>r</mi><mi>r</mi></mrow></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>α</mi><mrow><mi>r</mi><mi>i</mi></mrow></msub><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mo mathvariant="normal">≠</mo><mi>r</mi></mrow></mstyle></mtd></mtr></mtable></mrow><mo>⇒</mo><msub><mi>β</mi><mi>r</mi></msub><mo>=</mo><mi>W</mi><msub><mi>α</mi><mi>r</mi></msub><mo>=</mo><msub><mi>w</mi><mi>r</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \left. \begin{aligned}        \left. \begin{aligned}            ||S_r||_2^2 = S_r^T S_r \\            S_r = X^T \beta_r        \end{aligned} \right\} \Rightarrow        ||S_r||_2^2 = \beta_r^T \underbrace{X X^T}_C \beta_r \\        C = X X^T = W \Lambda W^T    \end{aligned} \right\} \Rightarrow \\    \left. \begin{aligned}        ||S_r||_2^2 = \beta_r^T W \Lambda \underbrace{W^T \beta_r}_{\alpha_r} = \sum_{i=1}^N \lambda_i \alpha_{ri} \\        \beta_r^T \beta_i =(W \alpha_r)^T (w_i) = \alpha_{ri} = 0, i \neq r (正交约束) \\        \beta_r^T \beta_r = \alpha_r^T W^T W \alpha = \alpha_r^T \alpha = \sum_{i=1}^N \alpha_{1i} = 1(单位约束)    \end{aligned} \right\} \Rightarrow \\    ||S_r||_2^2 = \lambda_r \alpha_{rr} \quad 为使||S_r||_2^2极大化，取 \\    \begin{cases}        \alpha_{rr} = 1 \\        \alpha_{ri} = 0, i = \neq r    \end{cases} \Rightarrow     \beta_r = W \alpha_r = w_r\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:18.9327em;vertical-align:-9.2164em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:9.7164em;"><span style="top:-13.4917em;"><span class="pstrut" style="height:6.5148em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.7395em;"><span style="top:-4.7395em;"><span class="pstrut" style="height:3.8013em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8013em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.3587em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3013em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">}</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-1.6737em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span class="svg-align" style="top:-2.352em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.648em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3263em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.2218em;"><span class="pstrut" style="height:3.8013em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">Λ</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.2395em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-6.4374em;"><span class="pstrut" style="height:6.5148em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.5148em;"><span style="top:-6.5148em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord">Λ</span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-1.6562em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0037em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span class="svg-align" style="top:-2.1576em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8424em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4439em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.8795em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mopen">(</span><span class="mord cjk_fallback">正交约束</span><span class="mclose">)</span></span></span><span style="top:-1.3912em;"><span class="pstrut" style="height:3.8283em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord cjk_fallback">单位约束</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.0148em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.45em;"><span style="top:-1.366em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewbox="0 0 888.89 2416" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-4.416em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-5.558em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewbox="0 0 888.89 2416" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-7.966em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.95em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-1.2585em;"><span class="pstrut" style="height:6.5148em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">rr</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">为使</span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">极大化，取</span></span></span><span style="top:1.1515em;"><span class="pstrut" style="height:6.5148em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">rr</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span><span class="mord mathnormal mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="inner"><span class="mord"><span class="mrel"></span></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0528em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0037em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">r</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:9.2164em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li></ol><div style="page-break-after: always;"></div><h2 id="LDA">LDA</h2><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个样本对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(X^{(i)}, y^{(i)}), i = 1, \cdots, N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>∈</mo><mo stretchy="false">{</mo><msub><mi>C</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">y \in \{C_k, k = 1, \cdots, K\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span>，记样本矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>X</mi><mrow><mi>N</mi><mo>×</mo><mi>n</mi></mrow></msub></mrow><annotation encoding="application/x-tex">X_{N \times n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>。现利用类别信息求取投影主轴<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">u</span></span></span></span>，<strong>使得投影后类内散步小，类间散步大</strong>。</p><p>定义：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>总样本均值：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>μ</mi><mo>=</mo><mfrac><mn>1</mn><mi>N</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>N</mi></msubsup><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>类别样本均值：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>μ</mi><mi>k</mi></msub><mo>=</mo><mfrac><mn>1</mn><msub><mi>N</mi><mi>k</mi></msub></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><msub><mi>N</mi><mi>k</mi></msub></msubsup><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msub><mi>C</mi><mi>k</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>类内离差阵：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mrow><mi>W</mi><mo separator="true">,</mo><mi>n</mi><mo>×</mo><mi>n</mi></mrow></msub><mo>=</mo><msub><mo>∑</mo><mi>k</mi></msub><mfrac><msub><mi>N</mi><mi>k</mi></msub><mi>N</mi></mfrac><mrow><mo fence="true">[</mo><mfrac><mn>1</mn><msub><mi>N</mi><mi>k</mi></msub></mfrac><msub><mo>∑</mo><mi>i</mi></msub><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>类内离差阵：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mrow><mi>B</mi><mo separator="true">,</mo><mi>n</mi><mo>×</mo><mi>n</mi></mrow></msub><mo>=</mo><msub><mo>∑</mo><mi>k</mi></msub><mfrac><msub><mi>N</mi><mi>k</mi></msub><mi>N</mi></mfrac><mrow><mo fence="true">[</mo><mo stretchy="false">(</mo><msub><mi>μ</mi><mi>k</mi></msub><mo>−</mo><mi>μ</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mi>μ</mi><mi>k</mi></msub><mo>−</mo><mi>μ</mi><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}    总样本均值： &amp; \mu = \frac{1}{N} \sum_{i=1}^N X^{(i)} \\    类别样本均值： &amp; \mu_k = \frac{1}{N_k} \sum_{i=1}^{N_k} X^{(i)}, y^{(i)} = C_k \\    类内离差阵： &amp; S_{W, n \times n} = \sum_k \frac{N_k}{N} \left[         \frac{1}{N_k} \sum_i (X^{(i)} - \mu_k) (X^{(i)} - \mu_k)^T    \right] \\    类内离差阵： &amp; S_{B, n \times n} = \sum_k \frac{N_k}{N} \left[         (\mu_k - \mu) (\mu_k - \mu)^T     \right] \\\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.1389em;vertical-align:-2.8194em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-1.366em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.216em" style="width:0.8889em" viewbox="0 0 888.89 1216" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1216 H384z M384 0 H504 V1216 H384z"/></svg></span></span><span style="top:-3.216em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.358em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.216em" style="width:0.8889em" viewbox="0 0 888.89 1216" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1216 H384z M384 0 H504 V1216 H384z"/></svg></span></span><span style="top:-5.566em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3194em;"><span style="top:-5.4614em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord cjk_fallback">总样本均值：</span></span></span><span style="top:-4.0214em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord cjk_fallback">类别样本均值：</span></span></span><span style="top:-2.4206em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord cjk_fallback">类内离差阵：</span></span></span><span style="top:-0.7626em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord cjk_fallback">类内离差阵：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8194em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3194em;"><span style="top:-5.4614em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-4.0214em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4509em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9812em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4206em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1864em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8942em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4509em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span><span style="top:-0.7626em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1864em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8942em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4159em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:-0.109em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">μ</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8194em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><h3 id="计算步骤-2">计算步骤</h3><ol><li>计算类内/类间离差阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>W</mi></msub><mi mathvariant="normal">/</mi><msub><mi>S</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">S_W/S_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">/</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>；</li><li>计算矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>S</mi><mi>W</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><msub><mi>S</mi><mi>B</mi></msub></mrow><annotation encoding="application/x-tex">S_W^{-1}S_B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1478em;vertical-align:-0.2935em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8542em;"><span style="top:-2.4065em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2935em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的特征对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>λ</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>u</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(\lambda_i, u_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>；</li><li>将特征对按特征值降序排序，选取最大的特征值对应特征向量作为投影主轴，构成投影矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>U</mi><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">U_{n \times m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>；</li><li>投影到主轴上，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mover accent="true"><mi>X</mi><mo>^</mo></mover><mrow><mi>N</mi><mo>×</mo><mi>m</mi></mrow></msub><mo>=</mo><msub><mi>X</mi><mrow><mi>N</mi><mo>×</mo><mi>n</mi></mrow></msub><msub><mi>U</mi><mrow><mi>n</mi><mo>×</mo><mi>m</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\hat{X}_{N \times m} = X_{N \times n} U_{n \times m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1551em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9468em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.2523em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">^</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0785em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">U</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>。</li></ol><h3 id="证明-2">证明</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>将样本点</mtext><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mtext>投影到第一主轴</mtext><msub><mi>u</mi><mn>1</mn></msub><mtext>上有</mtext><mspace width="1em"><msup><mover accent="true"><mi>X</mi><mo>~</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mspace width="1em"><mtext>在投影空间有</mtext></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msup><mover accent="true"><mi>X</mi><mo>~</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mover accent="true"><mi>μ</mi><mo>~</mo></mover><mo>=</mo><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><mi>μ</mi><mo separator="true">,</mo><msub><mover accent="true"><mi>μ</mi><mo>~</mo></mover><mi>k</mi></msub><mo>=</mo><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>μ</mi><mi>k</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mover accent="true"><msub><mi>S</mi><mi>W</mi></msub><mo>~</mo></mover><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>k</mi></munder><mfrac><msub><mi>N</mi><mi>k</mi></msub><mi>N</mi></mfrac><mrow><mo fence="true">[</mo><mfrac><mn>1</mn><msub><mi>N</mi><mi>k</mi></msub></mfrac><munder><mo>∑</mo><mi>i</mi></munder><mo stretchy="false">(</mo><msup><mover accent="true"><mi>X</mi><mo>~</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msub><mover accent="true"><mi>μ</mi><mo>~</mo></mover><mi>k</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mover accent="true"><mi>X</mi><mo>~</mo></mover><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msub><mover accent="true"><mi>μ</mi><mo>~</mo></mover><mi>k</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><msub><mover accent="true"><msub><mi>S</mi><mi>B</mi></msub><mo>~</mo></mover><mrow><mn>1</mn><mo>×</mo><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>k</mi></munder><mfrac><msub><mi>N</mi><mi>k</mi></msub><mi>N</mi></mfrac><mrow><mo fence="true">[</mo><mo stretchy="false">(</mo><msub><mover accent="true"><mi>μ</mi><mo>~</mo></mover><mi>k</mi></msub><mo>−</mo><mover accent="true"><mi>μ</mi><mo>~</mo></mover><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msub><mover accent="true"><mi>μ</mi><mo>~</mo></mover><mi>k</mi></msub><mo>−</mo><mover accent="true"><mi>μ</mi><mo>~</mo></mover><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mover accent="true"><msub><mi>S</mi><mi>W</mi></msub><mo>~</mo></mover><mo>=</mo><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>W</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mover accent="true"><msub><mi>S</mi><mi>B</mi></msub><mo>~</mo></mover><mo>=</mo><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>B</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>定义优化目标为：</mtext><msub><mi>u</mi><mn>1</mn></msub><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>min</mi><mo>⁡</mo><mfrac><mover accent="true"><msub><mi>S</mi><mi>W</mi></msub><mo>~</mo></mover><mover accent="true"><msub><mi>S</mi><mi>B</mi></msub><mo>~</mo></mover></mfrac><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>min</mi><mo>⁡</mo><mfrac><mrow><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>W</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow><mrow><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>B</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>求取极值：</mtext><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>u</mi><mn>1</mn></msub></mrow></mfrac><mfrac><mrow><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>W</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow><mrow><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>B</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow></mfrac><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>B</mi></msub><msub><mi>u</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>2</mn><msub><mi>S</mi><mi>W</mi></msub><msub><mi>u</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>−</mo><mo stretchy="false">(</mo><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>W</mi></msub><msub><mi>u</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mn>2</mn><msub><mi>S</mi><mi>B</mi></msub><msub><mi>u</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><mrow><mo stretchy="false">(</mo><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>B</mi></msub><msub><mi>u</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow></mfrac><mo>=</mo><mn>0</mn><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>S</mi><mi>B</mi></msub><msub><mi>u</mi><mn>1</mn></msub><mo>=</mo><munder><munder><mfrac><mrow><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>B</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow><mrow><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>W</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow></mfrac><mo stretchy="true">⏟</mo></munder><msub><mi>λ</mi><mn>1</mn></msub></munder><msub><mi>S</mi><mi>W</mi></msub><msub><mi>u</mi><mn>1</mn></msub><mtext>，记</mtext><msub><mi>λ</mi><mn>1</mn></msub><mo>=</mo><mfrac><mrow><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>B</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow><mrow><msubsup><mi>u</mi><mn>1</mn><mi>T</mi></msubsup><msub><mi>S</mi><mi>W</mi></msub><msub><mi>u</mi><mn>1</mn></msub></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    将样本点X^{(i)}投影到第一主轴u_1上有 \quad \tilde{X}^{(i)} = u_1^T X^{(i)} \quad 在投影空间有 \\    \left.\begin{aligned}        \tilde{X}^{(i)} &amp; = u_1^T X^{(i)}, \tilde{\mu} = u_1^T \mu, \tilde{\mu}_k = u_1^T \mu_k \\        \tilde{S_W}_{1 \times 1} &amp; = \sum_k \frac{N_k}{N} \left[             \frac{1}{N_k} \sum_i (\tilde{X}^{(i)} - \tilde{\mu}_k) (\tilde{X}^{(i)} - \tilde{\mu}_k)^T         \right] \\        \tilde{S_B}_{1 \times 1} &amp; = \sum_k \frac{N_k}{N} \left[             (\tilde{\mu}_k - \tilde{\mu}) (\tilde{\mu}_k - \tilde{\mu})^T        \right]    \end{aligned}\right\} \Rightarrow    \begin{cases}        \tilde{S_W} = u_1^T S_W u_1 \\         \tilde{S_B} = u_1^T S_B u_1    \end{cases} \\    定义优化目标为：u_1 = \arg \min \frac{\tilde{S_W}}{\tilde{S_B}} = \arg \min \frac{u_1^T S_W u_1}{u_1^T S_B u_1} \\    求取极值：\frac{\partial}{\partial u_1} \frac{u_1^T S_W u_1}{u_1^T S_B u_1} = \frac{(u_1^T S_B u_1)(2 S_W u_1) - (u_1^T S_W u_1)(2 S_B u_1)}{(u_1^T S_B u_1)^2} = 0 \Rightarrow \\    S_B u_1 = \underbrace{\frac{u_1^T S_B u_1}{u_1^T S_W u_1}}_{\lambda_1} S_W u_1，记\lambda_1 = \frac{u_1^T S_B u_1}{u_1^T S_W u_1}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:19.7169em;vertical-align:-9.6085em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:10.1085em;"><span style="top:-15.3767em;"><span class="pstrut" style="height:6.2063em;"></span><span class="mord"><span class="mord cjk_fallback">将样本点</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">投影到第一主轴</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">上有</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mord cjk_fallback">在投影空间有</span></span></span><span style="top:-10.5105em;"><span class="pstrut" style="height:6.2063em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2063em;"><span style="top:-7.0183em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-4.6083em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2514em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258em;"><span></span></span></span></span></span></span></span></span><span style="top:-1.6458em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2514em;"><span style="top:-2.5003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">×</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7063em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2063em;"><span style="top:-7.0183em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">μ</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">μ</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.453em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.6083em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">μ</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1667em;"><span class="mord">~</span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">μ</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span><span style="top:-1.6458em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3603em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">μ</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">μ</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">μ</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">μ</span></span><span style="top:-3.35em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.2222em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7063em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.15em;"><span style="top:-1.366em;"><span class="pstrut" style="height:4.116em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:4.116em;"></span><span style="height:2.116em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.116em" style="width:0.8889em" viewbox="0 0 888.89 2116" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2116 H384z M384 0 H504 V2116 H384z"/></svg></span></span><span style="top:-4.116em;"><span class="pstrut" style="height:4.116em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-5.258em;"><span class="pstrut" style="height:4.116em;"></span><span style="height:2.116em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.116em" style="width:0.8889em" viewbox="0 0 888.89 2116" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2116 H384z M384 0 H504 V2116 H384z"/></svg></span></span><span style="top:-7.366em;"><span class="pstrut" style="height:4.116em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.65em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-4.907em;"><span class="pstrut" style="height:6.2063em;"></span><span class="mord"><span class="mord cjk_fallback">定义优化目标为：</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5972em;"><span style="top:-2.1898em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9202em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span style="top:-3.6023em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">~</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9602em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.2869em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.1092em;"><span class="pstrut" style="height:6.2063em;"></span><span class="mord"><span class="mord cjk_fallback">求取极值：</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.836em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.2869em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.2869em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7401em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:0.6885em;"><span class="pstrut" style="height:6.2063em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-1.2048em;"><span class="pstrut" style="height:3.5183em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3173em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.5183em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span class="svg-align" style="top:-1.8909em;"><span class="pstrut" style="height:3.5183em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.5183em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.2869em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.6274em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.4136em;"><span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，记</span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.2869em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8231em;"><span style="top:-2.4337em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.0448em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2663em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">W</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">u</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9794em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:9.6085em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><h1>EM/GMM</h1><h2 id="EM算法">EM算法</h2><p>给定包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>对样本数据<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(X^{(i)}, y^{(i)}), i = 1, \cdots, N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span>。设分类模型为概率模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X | \theta)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span>，其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span>待估。该模型包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>种<strong>隐藏变量</strong>状态<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>w</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{w_k, k = 1, \cdots, K\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span>。那么证明过程总结如下</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>M</mi><mi>L</mi><mi>E</mi><mo>⇒</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∏</mo><mi>i</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>⇒</mo><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>⇒</mo><mtext>优化目标：</mtext><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mtext>引入隐变量</mtext><msub><mi>w</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><mn>1</mn><mo stretchy="false">(</mo><mtext>引入迭代变量</mtext><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mi>log</mi><mo>⁡</mo><munder><mo>∑</mo><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>φ</mi><mo stretchy="false">(</mo><mo>⋅</mo><mo stretchy="false">)</mo><mtext>下凸</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mi>i</mi></msub><msub><mi>w</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo>⇒</mo><mi>φ</mi><mo stretchy="false">(</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>w</mi><mi>i</mi></msub><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo>≤</mo><munder><mo>∑</mo><mi>i</mi></munder><msub><mi>w</mi><mi>i</mi></msub><mi>φ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>J</mi><mi>e</mi><mi>n</mi><mi>s</mi><mi>e</mi><mi>n</mi><mtext>不等式</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>log</mi><mo>⁡</mo><mi>L</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><munder><mo>∑</mo><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow><mrow><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>=</mo><munder><munder><mrow><munder><mo>∑</mo><mi>i</mi></munder><munder><mo>∑</mo><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><msub><mi>E</mi><mi>w</mi></msub><mrow><mo fence="true">[</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow></munder></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><munder><munder><mrow><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><munder><mo>∑</mo><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><mi>H</mi><mrow><mo fence="true">[</mo><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow></munder></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>记</mtext><mspace width="1em"><mi>Q</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><msub><mi>E</mi><mi>w</mi></msub><mrow><mo fence="true">[</mo><mi>log</mi><mo>⁡</mo><mi>P</mi><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>⇒</mo><mtext>优化目标：</mtext><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi>Q</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>对</mtext><mi>Q</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mtext>求极值求解</mtext><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msup><mtext>。</mtext></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    MLE \Rightarrow L(D | \theta) = \prod_i P(X^{(i)} | \theta)     \Rightarrow \log L(D | \theta) = \sum_i \log P(X^{(i)} | \theta) \\     \Rightarrow 优化目标：\theta^{(t + 1)} = \arg \max \log L(D | \theta) \\ \\    \left. \begin{aligned}        P(X^{(i)} | \theta) = \sum_k P(X^{(i)}, w^{(i)}_k | \theta) (引入隐变量w_k) \\        \frac{P(w^{(i)}_k | \theta^{(t)})}{P(w^{(i)}_k | \theta^{(t)})} = 1 (引入迭代变量\theta^{(t)})    \end{aligned} \right\} \Rightarrow \\    \left. \begin{aligned}        \log L(D | \theta) = \sum_i             \log \sum_k                 P(X^{(i)}, w^{(i)}_k | \theta) \frac{P(w^{(i)}_k | \theta^{(t)})}{P(w^{(i)}_k | \theta^{(t)})} \\        \begin{cases}            \varphi(\cdot)下凸 \\ \sum_i w_i = 1        \end{cases} \Rightarrow \varphi(\sum_i w_i x_i) \leq \sum_i w_i \varphi(x_i) (Jensen不等式)    \end{aligned} \right\} \Rightarrow \\    \log L(D | \theta) = \sum_i \sum_k P(w^{(i)}_k | \theta^{(t)})         \log \frac{P(X^{(i)}, w^{(i)}_k | \theta)}{P(w^{(i)}_k | \theta^{(t)})} \\        = \underbrace{ \sum_i \sum_k P(w^{(i)}_k | \theta^{(t)})             \log P(X^{(i)}, w^{(i)}_k | \theta)}_{E_w\left[ \log P(X^{(i)}, w^{(i)}_k | \theta) \right]} \\        \underbrace{- \sum_i \sum_k P(w^{(i)}_k | \theta^{(t)})         \log P(w^{(i)}_k | \theta^{(t)})}_{H\left[ P(w^{(i)}_k | \theta^{(t)}) \right]} \\    记 \quad Q(\theta | \theta^{(t)}) = E_w\left[ \log P(X^{(i)}, w^{(i)}_k | \theta) \right] \\     \Rightarrow 优化目标：\theta^{(t + 1)} = \arg \max Q(\theta | \theta^{(t)}) \\    对Q(\theta | \theta^{(t)})求极值求解\theta^{(t + 1)}。\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:37.0261em;vertical-align:-18.2631em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:18.7631em;"><span style="top:-23.296em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">L</span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∏</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-20.7803em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord cjk_fallback">优化目标：</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span><span style="top:-19.2803em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"></span></span><span style="top:-15.3703em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2122em;"><span style="top:-5.8983em;"><span class="pstrut" style="height:3.7361em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord cjk_fallback">引入隐变量</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.56em;"><span class="pstrut" style="height:3.7361em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7361em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.2748em;"><span class="pstrut" style="height:3.0448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7361em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord cjk_fallback">引入迭代变量</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7122em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-1.366em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.216em" style="width:0.8889em" viewbox="0 0 888.89 1216" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1216 H384z M384 0 H504 V1216 H384z"/></svg></span></span><span style="top:-3.216em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.358em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.216em" style="width:0.8889em" viewbox="0 0 888.89 1216" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1216 H384z M384 0 H504 V1216 H384z"/></svg></span></span><span style="top:-5.566em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-8.7373em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5829em;"><span style="top:-5.5968em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7361em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.2748em;"><span class="pstrut" style="height:3.0448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7361em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.2447em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord">⋅</span><span class="mclose">)</span><span class="mord cjk_fallback">下凸</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.09618em;">J</span><span class="mord mathnormal">e</span><span class="mord mathnormal">n</span><span class="mord mathnormal">se</span><span class="mord mathnormal">n</span><span class="mord cjk_fallback">不等式</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.0829em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.55em;"><span style="top:-1.366em;"><span class="pstrut" style="height:3.516em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:3.516em;"></span><span style="height:1.516em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.516em" style="width:0.8889em" viewbox="0 0 888.89 1516" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"/></svg></span></span><span style="top:-3.516em;"><span class="pstrut" style="height:3.516em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.658em;"><span class="pstrut" style="height:3.516em;"></span><span style="height:1.516em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.516em" style="width:0.8889em" viewbox="0 0 888.89 1516" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1516 H384z M384 0 H504 V1516 H384z"/></svg></span></span><span style="top:-6.166em;"><span class="pstrut" style="height:3.516em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.05em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-3.6183em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7361em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.814em;"><span style="top:-2.989em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-3.2748em;"><span class="pstrut" style="height:3.0448em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7361em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2361em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-0.9662em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-0.1024em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0576em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="delimsizing size1 mtight"><span class="mtight">[</span></span></span><span class="mop mtight"><span class="mtight">l</span><span class="mtight">o</span><span class="mtight" style="margin-right:0.01389em;">g</span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:-0.0269em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mclose mtight">)</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="delimsizing size1 mtight"><span class="mtight">]</span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span class="svg-align" style="top:-1.0999em;"><span class="pstrut" style="height:3.05em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9501em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3501em;"><span></span></span></span></span></span></span></span><span style="top:3.734em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-0.1024em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="minner mtight"><span class="mopen sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="delimsizing size1 mtight"><span class="mtight">[</span></span></span><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:-0.0269em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mclose sizing reset-size3 size6 mtight delimcenter" style="top:0.075em;"><span class="delimsizing size1 mtight"><span class="mtight">]</span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span class="svg-align" style="top:-1.0999em;"><span class="pstrut" style="height:3.05em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9501em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.3501em;"><span></span></span></span></span></span></span></span><span style="top:8.5341em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="mord cjk_fallback">记</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">[</span></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">]</span></span></span></span></span><span style="top:10.4221em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord cjk_fallback">优化目标：</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:12.0201em;"><span class="pstrut" style="height:5.5829em;"></span><span class="mord"><span class="mord cjk_fallback">对</span><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">求极值求解</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord cjk_fallback">。</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:18.2631em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><h2 id="GMM模型">GMM模型</h2><p>高斯混合模型，具有如下概率形式</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><mi>μ</mi><mo separator="true">,</mo><mi mathvariant="normal">Σ</mi><mo stretchy="false">)</mo><mo>=</mo><munderover><mo>∑</mo><mrow><mi>k</mi><mo>=</mo><mn>1</mn></mrow><mi>K</mi></munderover><msub><mi>π</mi><mi>k</mi></msub><mi>N</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">P(X | \mu, \Sigma) = \sum_{k=1}^K \pi_k N(X | \mu_k, \Sigma_k) </annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord mathnormal">μ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">Σ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3.1304em;vertical-align:-1.3021em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8283em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></span></p><p>其中</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mo>∑</mo><mi>k</mi></msub><msub><mi>π</mi><mi>k</mi></msub><mo>=</mo><mn>1</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>N</mi><mo stretchy="false">(</mo><mi>X</mi><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mo stretchy="false">(</mo><mn>2</mn><mi>π</mi><msup><mo stretchy="false">)</mo><mrow><mi>d</mi><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mi mathvariant="normal">∣</mi><mi mathvariant="normal">Σ</mi><msup><mi mathvariant="normal">∣</mi><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow></mfrac><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">[</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>X</mi><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup><msubsup><mi mathvariant="normal">Σ</mi><mi>k</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><mi>X</mi><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}    \sum_k \pi_k = 1 \\    N(X | \mu_k, \Sigma_k) = \frac{1}{(2\pi)^{d/2}|\Sigma|^{1/2}}     \exp \left[        - \frac{1}{2} (X - \mu_k)^T \Sigma_k^{-1} (X - \mu_k)    \right]\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0084em;vertical-align:-1.2542em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7542em;"><span style="top:-3.7542em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1864em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.3142em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.6146em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">2</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mtight">/2</span></span></span></span></span></span></span></span></span><span class="mord mtight">∣Σ</span><span class="mord mtight"><span class="mord mtight">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">1/2</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5604em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8451em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8542em;"><span style="top:-2.3987em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.1031em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2542em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>用<strong>EM算法</strong>对参数进行估计</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><munder><mo>∑</mo><mi>k</mi></munder><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mi>log</mi><mo>⁡</mo><munder><munder><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo></mrow></munder></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><msubsup><mi>π</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mi>N</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msubsup><mi>μ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="normal">Σ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">)</mo></mrow><mrow><msub><mo>∑</mo><mi>j</mi></msub><msubsup><mi>π</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mi>N</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msubsup><mi>μ</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><msubsup><mi mathvariant="normal">Σ</mi><mi>j</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">)</mo></mrow></mfrac><mo>=</mo><msubsup><mi>γ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>P</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mo separator="true">,</mo><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>N</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>P</mi><mo stretchy="false">(</mo><msubsup><mi>w</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msubsup><mi mathvariant="normal">∣</mi><mi>θ</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mi>π</mi><mi>k</mi></msub></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>Q</mi><mo stretchy="false">(</mo><mi>θ</mi><mi mathvariant="normal">∣</mi><msup><mi>θ</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><munder><mo>∑</mo><mi>k</mi></munder><msubsup><mi>γ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mi>log</mi><mo>⁡</mo><msub><mi>π</mi><mi>k</mi></msub><mi>N</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msub><mi>μ</mi><mi>k</mi></msub><mo separator="true">,</mo><msub><mi mathvariant="normal">Σ</mi><mi>k</mi></msub><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>求解</mtext><mi>Q</mi><mtext>函数极值</mtext><mo>⇒</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi>μ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mfrac><mrow><msub><mo>∑</mo><mi>i</mi></msub><msubsup><mi>γ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><mrow><msub><mo>∑</mo><mi>i</mi></msub><msubsup><mi>γ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi mathvariant="normal">Σ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mfrac><mrow><msub><mo>∑</mo><mi>i</mi></msub><msubsup><mi>γ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msub><mi>μ</mi><mi>k</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup></mrow><mrow><msub><mo>∑</mo><mi>i</mi></msub><msubsup><mi>γ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msubsup><mi>π</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>t</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></msubsup><mo>=</mo><mfrac><mrow><msub><mo>∑</mo><mi>i</mi></msub><msubsup><mi>γ</mi><mi>k</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>t</mi><mo stretchy="false">)</mo></mrow></msubsup></mrow><mi>N</mi></mfrac></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \left. \begin{aligned}        Q(\theta|\theta^{(t)}) = \sum_i \sum_k P(w_k^{(i)}|\theta^{(t)}) \log \underbrace{P(x^{(i)} | w_k^{(i)}, \theta) P(w_k^{(i)} | \theta)}_{P(x^{(i)}, w_k^{(i)} | \theta)} \\        \begin{cases}            P(w_k^{(i)}|\theta^{(t)}) =             \frac{\pi_k^{(t)} N(x^{(i)}|\mu_k^{(t)}, \Sigma_k^{(t)})}            {\sum_j \pi_j^{(t)} N(x^{(i)}|\mu_j^{(t)}, \Sigma_j^{(t)})}            = \gamma^{(i)(t)}_k \\            P(x^{(i)} | w_k^{(i)}, \theta) = N(x^{(i)}|\mu_k, \Sigma_k) \\            P(w_k^{(i)} | \theta) = \pi_k        \end{cases}    \end{aligned} \right\} \Rightarrow \\    Q(\theta|\theta^{(t)}) = \sum_i \sum_k \gamma^{(i)(t)}_k \log \pi_k N(x^{(i)}|\mu_k, \Sigma_k) \\    求解Q函数极值 \Rightarrow    \begin{cases}        \mu_k^{(t+1)} = \frac{\sum_i \gamma^{(i)(t)}_k x^{(i)}}{\sum_i \gamma^{(i)(t)}_k} \\        \Sigma_k^{(t+1)} = \frac{\sum_i \gamma^{(i)(t)}_k (x^{(i)} - \mu_k) (x^{(i)} - \mu_k)^T}{\sum_i \gamma^{(i)(t)}_k} \\        \pi_k^{(t+1)} = \frac{\sum_i \gamma^{(i)(t)}_k}{N}    \end{cases}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:18.2522em;vertical-align:-8.8761em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:9.3761em;"><span style="top:-11.3761em;"><span class="pstrut" style="height:6.75em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.703em;"><span style="top:-8.4641em;"><span class="pstrut" style="height:4.8111em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-1.1541em;"><span class="pstrut" style="height:3.0448em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">P</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:-0.0269em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">θ</span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.0448em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span class="svg-align" style="top:-2.0955em;"><span class="pstrut" style="height:3.0448em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.0448em;"><span class="pstrut" style="height:3.0448em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9493em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1337em;"><span></span></span></span></span></span></span></span><span style="top:-3.2192em;"><span class="pstrut" style="height:4.8111em;"></span><span class="mord"><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8111em;"><span style="top:-4.8111em;"><span class="pstrut" style="height:3.2944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2944em;"><span style="top:-2.4486em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1496em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4603em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.2134em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4612em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.2134em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4612em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mtight">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.2134em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4612em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5531em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:-0.0359em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mtight">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8742em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.8921em;"><span class="pstrut" style="height:3.2944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-1.4153em;"><span class="pstrut" style="height:3.2944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3111em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.203em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.75em;"><span style="top:-1.366em;"><span class="pstrut" style="height:4.716em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:4.716em;"></span><span style="height:2.716em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.716em" style="width:0.8889em" viewbox="0 0 888.89 2716" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2716 H384z M384 0 H504 V2716 H384z"/></svg></span></span><span style="top:-4.716em;"><span class="pstrut" style="height:4.716em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-5.858em;"><span class="pstrut" style="height:4.716em;"></span><span style="height:2.716em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.716em" style="width:0.8889em" viewbox="0 0 888.89 2716" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2716 H384z M384 0 H504 V2716 H384z"/></svg></span></span><span style="top:-8.566em;"><span class="pstrut" style="height:4.716em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.25em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-5.7761em;"><span class="pstrut" style="height:6.75em;"></span><span class="mord"><span class="mord mathnormal">Q</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-0.9239em;"><span class="pstrut" style="height:6.75em;"></span><span class="mord"><span class="mord cjk_fallback">求解</span><span class="mord mathnormal">Q</span><span class="mord cjk_fallback">函数极值</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-1.366em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.216em" style="width:0.8889em" viewbox="0 0 888.89 1216" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1216 H384z M384 0 H504 V1216 H384z"/></svg></span></span><span style="top:-3.216em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.358em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.216em" style="width:0.8889em" viewbox="0 0 888.89 1216" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1216 H384z M384 0 H504 V1216 H384z"/></svg></span></span><span style="top:-5.566em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.2021em;"><span style="top:-5.2021em;"><span class="pstrut" style="height:3.2944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2944em;"><span style="top:-2.4486em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1496em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5531em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1496em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7944em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.1132em;"><span class="pstrut" style="height:3.2944em;"></span><span class="mord"><span class="mord"><span class="mord">Σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2944em;"><span style="top:-2.4486em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1496em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5531em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1496em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9667em;"><span style="top:-2.9667em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3488em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1512em;"><span></span></span></span></span></span></span><span class="mclose mtight"><span class="mclose mtight">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9191em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7944em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.0244em;"><span class="pstrut" style="height:3.2944em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3987em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2944em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5531em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight"><span class="mop op-symbol small-op mtight" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1496em;"><span style="top:-2.1786em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3214em;"><span></span></span></span></span></span></span><span class="mspace mtight" style="margin-right:0.1952em;"></span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0591em;"><span style="top:-2.1885em;margin-left:-0.0556em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.0591em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">t</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3472em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.7021em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:8.8761em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><h1>SVM</h1><h2 id="KKT条件">KKT条件</h2><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>w</mi><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>min</mi><mo>⁡</mo><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi><mspace width="1em"><msub><mi>h</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>m</mi></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>g</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>≤</mo><mn>0</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>p</mi></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>λ</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>+</mo><munder><mo>∑</mo><mi>j</mi></munder><msub><mi>λ</mi><mi>j</mi></msub><msub><mi>h</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>+</mo><munder><mo>∑</mo><mi>j</mi></munder><msub><mi>μ</mi><mi>j</mi></msub><mrow><mo fence="true">(</mo><msub><mi>g</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>+</mo><msup><mi>ϵ</mi><mn>2</mn></msup><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>⇒</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><mi>f</mi><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mo>∑</mo><mi>j</mi></msub><msub><mi>λ</mi><mi>j</mi></msub><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><msub><mi>h</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mo>∑</mo><mi>j</mi></msub><msub><mi>μ</mi><mi>j</mi></msub><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>w</mi></mrow></mfrac><msub><mi>g</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>h</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn><mo separator="true">,</mo><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>m</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>μ</mi><mi>j</mi></msub><msub><mi>g</mi><mi>j</mi></msub><mo stretchy="false">(</mo><mi>w</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>μ</mi><mi>j</mi></msub><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mi>j</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>p</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \left.\begin{aligned}        w = \arg \min f(w) \\        s.t. \quad h_j(w) = 0, j = 1, \cdots, m \\        g_j(w) \leq 0, j = 1, \cdots, p    \end{aligned}\right\} \Rightarrow \\    L(w, \lambda, \mu) = f(w) + \sum_j \lambda_j h_j(w) + \sum_j \mu_j \left(g_j(w) + \epsilon^2 \right) \\    \Rightarrow \begin{cases}        \frac{\partial}{\partial w} f(w) +             \sum_j \lambda_j \frac{\partial}{\partial w} h_j(w) +             \sum_j \mu_j \frac{\partial}{\partial w} g_j(w) = 0 \\        h_j(w) = 0, j = 1, \cdots, m \\        \left.\begin{aligned}            \mu_j g_j(w) = 0 \\             \mu_j \geq 0        \end{aligned} \right\}  j = 1, \cdots, p    \end{cases}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:13.7476em;vertical-align:-6.6238em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:7.1238em;"><span style="top:-9.8157em;"><span class="pstrut" style="height:5.1919em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.5em;"><span style="top:-4.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span></span></span><span style="top:-3.16em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span></span><span style="top:-1.66em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35em;"><span style="top:-2.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-2.192em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewbox="0 0 888.89 316" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.316em" style="width:0.8889em" viewbox="0 0 888.89 316" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V316 H384z M384 0 H504 V316 H384z"/></svg></span></span><span style="top:-4.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.85em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:-6.4657em;"><span class="pstrut" style="height:5.1919em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">λ</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span><span style="top:-1.56em;"><span class="pstrut" style="height:5.1919em;"></span><span class="mord"><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.95em;"><span style="top:-1.6em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.592em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.916em" style="width:0.8889em" viewbox="0 0 888.89 916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V916 H384z M384 0 H504 V916 H384z"/></svg></span></span><span style="top:-5.2em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1919em;"><span style="top:-5.9339em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">λ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-4.4901em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">m</span></span></span><span style="top:-2.3081em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-3.91em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">}</span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6919em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:6.6238em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="核技巧">核技巧</h2><p>设某函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\Phi(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span></span></span></span>，可将<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">x</span></span></span></span>从<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>维空间映射到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">n&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7519em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>维空间，定义两个向量的核函数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>κ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\kappa(x_i, x_j) = \Phi(x_i)^T \Phi(x_j)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0361em;vertical-align:-0.2861em;"></span><span class="mord mathnormal">κ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1274em;vertical-align:-0.2861em;"></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，常用和函数有</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>线性核：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>κ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><msubsup><mi>x</mi><mi>i</mi><mi>T</mi></msubsup><msub><mi>x</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>多项式核：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>κ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>γ</mi><msubsup><mi>x</mi><mi>i</mi><mi>T</mi></msubsup><msub><mi>x</mi><mi>j</mi></msub><mo>+</mo><mi>c</mi><msup><mo stretchy="false">)</mo><mi>n</mi></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>s</mi><mi>i</mi><mi>g</mi><mi>m</mi><mi>o</mi><mi>i</mi><mi>d</mi><mtext>核：</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>κ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>tanh</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>γ</mi><msubsup><mi>x</mi><mi>i</mi><mi>T</mi></msubsup><msub><mi>x</mi><mi>j</mi></msub><mo>+</mo><mi>c</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>拉普拉斯核：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>κ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mi>γ</mi><mfrac><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><mi>σ</mi></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>高斯核：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>κ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><msub><mi>x</mi><mi>j</mi></msub><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mi>γ</mi><mfrac><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>i</mi></msub><mo>−</mo><msub><mi>x</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}    线性核：&amp; \kappa(x_i, x_j) = x_i^T x_j \\    多项式核：&amp; \kappa(x_i, x_j) = (\gamma x_i^T x_j + c)^n \\    sigmoid核：&amp; \kappa(x_i, x_j) = \tanh (\gamma x_i^T x_j + c) \\    拉普拉斯核：&amp; \kappa(x_i, x_j) = \exp (- \gamma \frac{||x_i - x_j||}{\sigma}) \\    高斯核：&amp; \kappa(x_i, x_j) = \exp (- \gamma \frac{||x_i - x_j||^2}{2 \sigma^2}) \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.3476em;vertical-align:-3.4238em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.85em;"><span style="top:-1.366em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.816em" style="width:0.8889em" viewbox="0 0 888.89 1816" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1816 H384z M384 0 H504 V1816 H384z"/></svg></span></span><span style="top:-3.816em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.958em;"><span class="pstrut" style="height:3.816em;"></span><span style="height:1.816em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.816em" style="width:0.8889em" viewbox="0 0 888.89 1816" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1816 H384z M384 0 H504 V1816 H384z"/></svg></span></span><span style="top:-6.766em;"><span class="pstrut" style="height:3.816em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.35em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9238em;"><span style="top:-6.047em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord cjk_fallback">线性核：</span></span></span><span style="top:-4.607em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord cjk_fallback">多项式核：</span></span></span><span style="top:-3.167em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mord cjk_fallback">核：</span></span></span><span style="top:-1.7027em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord cjk_fallback">拉普拉斯核：</span></span></span><span style="top:-0.1395em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord cjk_fallback">高斯核：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4238em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.9238em;"><span style="top:-6.047em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord mathnormal">κ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-4.607em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord mathnormal">κ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span><span style="top:-3.167em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord mathnormal">κ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">tanh</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-2.4413em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2587em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">c</span><span class="mclose">)</span></span></span><span style="top:-1.7027em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord mathnormal">κ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0323em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣∣</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mord mtight">∣∣</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-0.1395em;"><span class="pstrut" style="height:3.1312em;"></span><span class="mord"><span class="mord mathnormal">κ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1312em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">∣∣</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span><span class="mord mtight">∣</span><span class="mord mtight"><span class="mord mtight">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-2.931em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.4238em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><h2 id="分类问题">分类问题</h2><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>对样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>y</mi><mo>∈</mo><mo stretchy="false">{</mo><mo>−</mo><mn>1</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{(X^{(i)}, y^{(i)}), i = 1, \cdots, N\}, y \in \{-1, 1\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">−</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span></span>，求取超平面<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">w^T \Phi(x) + b = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0</span></span></span></span>使样本点落在该超平面两侧。</p><h3 id="线性可分">线性可分</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>记</mtext><msub><mi>r</mi><mrow><mo>+</mo><mi mathvariant="normal">/</mi><mo>−</mo></mrow></msub><mtext>为分类平面到支持向量</mtext><msub><mi>x</mi><mrow><mo>+</mo><mi mathvariant="normal">/</mi><mo>−</mo></mrow></msub><mtext>的距离，则</mtext><mi>r</mi><mo>=</mo><msub><mi>r</mi><mo>+</mo></msub><mo>+</mo><msub><mi>r</mi><mo>−</mo></msub><mtext>，且</mtext><msub><mi>r</mi><mrow><mo>+</mo><mi mathvariant="normal">/</mi><mo>−</mo></mrow></msub><mo>=</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msub><mi>x</mi><mrow><mo>+</mo><mi mathvariant="normal">/</mi><mo>−</mo></mrow></msub><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mo>=</mo><mfrac><mn>1</mn><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>正</mtext><mi mathvariant="normal">/</mi><mtext>负样本分别满足</mtext><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo>&gt;</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo>&lt;</mo><mo>−</mo><mn>1</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>&lt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow><mo>⇒</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">]</mo><mo>≥</mo><mn>1</mn><mo stretchy="false">(</mo><mtext>包括支持向量</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \left.\begin{aligned}        记r_{+/-}为分类平面到支持向量x_{+/-}的距离，则r = r_+ + r_-，且r_{+/-} = \frac{|w^T \Phi(x_{+/-}) + b|}{||w||} = \frac{1}{||w||} \\        正/负样本分别满足\begin{cases}            w^T \Phi(x^{(i)}) + b &gt; 1 &amp; y^{(i)} &gt; 0 \\            w^T \Phi(x^{(i)}) + b &lt; -1 &amp; y^{(i)} &lt; 0         \end{cases} \Rightarrow y^{(i)} [w^T \Phi(x^{(i)}) + b] \geq 1(包括支持向量)    \end{aligned}\right\} \Rightarrow \\\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.4226em;vertical-align:-2.9613em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.4613em;"><span style="top:-5.4613em;"><span class="pstrut" style="height:5.3113em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3113em;"><span style="top:-5.4747em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord cjk_fallback">记</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">/</span><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">为分类平面到支持向量</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">/</span><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的距离，则</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2583em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">−</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">，且</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">/</span><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5865em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7452em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">+</span><span class="mord mtight">/</span><span class="mord mtight">−</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3552em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.4887em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord cjk_fallback">正</span><span class="mord">/</span><span class="mord cjk_fallback">负样本分别满足</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mopen">(</span><span class="mord cjk_fallback">包括支持向量</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8113em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.25em;"><span style="top:-1.366em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.216em" style="width:0.8889em" viewbox="0 0 888.89 1216" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1216 H384z M384 0 H504 V1216 H384z"/></svg></span></span><span style="top:-3.216em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.358em;"><span class="pstrut" style="height:3.216em;"></span><span style="height:1.216em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="1.216em" style="width:0.8889em" viewbox="0 0 888.89 1216" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V1216 H384z M384 0 H504 V1216 H384z"/></svg></span></span><span style="top:-5.566em;"><span class="pstrut" style="height:3.216em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.75em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.9613em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>优化目标：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>max</mi><mo>⁡</mo><mi>r</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">]</mo><mo>≥</mo><mn>1</mn></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>即：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>min</mi><mo>⁡</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">]</mo><mo>≥</mo><mn>1</mn></mspace></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    优化目标：&amp; \begin{aligned}            w, b &amp; = \arg \max r \\             s.t. &amp; \quad y^{(i)} [w^T \Phi(x^{(i)}) + b] \geq 1        \end{aligned} \\    即： &amp; \begin{aligned}            w, b &amp; = \arg \min \frac{1}{2} ||w||^2 \\ s.t. &amp; \quad y^{(i)} [w^T \Phi(x^{(i)}) + b] \geq 1        \end{aligned}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:7.6034em;vertical-align:-3.5517em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.0517em;"><span style="top:-6.4554em;"><span class="pstrut" style="height:4.2027em;"></span><span class="mord"><span class="mord cjk_fallback">优化目标：</span></span></span><span style="top:-2.6537em;"><span class="pstrut" style="height:4.2027em;"></span><span class="mord"><span class="mord cjk_fallback">即：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5517em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.0517em;"><span style="top:-6.4554em;"><span class="pstrut" style="height:4.2027em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.799em;"><span style="top:-3.959em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-2.361em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.299em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.799em;"><span style="top:-3.959em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span><span style="top:-2.361em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.299em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.6537em;"><span class="pstrut" style="height:4.2027em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2027em;"><span style="top:-4.2027em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-2.2787em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7027em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2027em;"><span style="top:-4.2027em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.2787em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7027em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.5517em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="线性不可分">线性不可分</h3><p>在线性可分支持向量机基础上，对每个样本添加松弛变量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>ϵ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">\epsilon^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.888em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>优化目标：</mtext><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>min</mi><mo>⁡</mo><mrow><mo fence="true">[</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo>+</mo><mi>C</mi><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>ϵ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">]</mo><mo>≥</mo><mn>1</mn><mo>−</mo><msup><mi>ϵ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msup><mi>ϵ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>≥</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    优化目标：\begin{aligned}            w, b &amp; = \arg \min \left[ \frac{1}{2} ||w||^2 + C \sum_i \epsilon^{(i)} \right] \\             s.t. &amp; \quad y^{(i)} [w^T \Phi(x^{(i)}) + b] \geq 1 - \epsilon^{(i)}            \\ &amp; \epsilon^{(i)} \geq 0        \end{aligned}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.8237em;vertical-align:-3.1618em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.6618em;"><span style="top:-5.6618em;"><span class="pstrut" style="height:5.5118em;"></span><span class="mord"><span class="mord cjk_fallback">优化目标：</span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5118em;"><span style="top:-5.5118em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-2.9962em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span></span></span><span style="top:-1.3982em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.0118em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.5118em;"><span style="top:-5.5118em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">]</span></span></span></span></span><span style="top:-2.9962em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-1.3982em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.0118em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.1618em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="回归问题">回归问题</h2><p>给定<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>对样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo><mo separator="true">,</mo><mi>y</mi><mo>∈</mo><mi>R</mi></mrow><annotation encoding="application/x-tex">\{(X^{(i)}, y^{(i)}), i = 1, \cdots, N\}, y \in R</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.00773em;">R</span></span></span></span>，求回归模型<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>y</mi><mo>^</mo></mover><mo>=</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">\hat{y} = w^T \Phi(x) + b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8889em;vertical-align:-0.1944em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.1944em;"><span class="mord">^</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.1944em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0913em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">b</span></span></span></span>，使得每个样本尽量拟合到该模型上，定义损失为</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>L</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><mi>b</mi><mi mathvariant="normal">∣</mi><mo>−</mo><mi>ϵ</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi mathvariant="normal">∣</mi><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><mi>b</mi><mi mathvariant="normal">∣</mi><mo>&gt;</mo><mi>ϵ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">L^{(i)} = \begin{cases}    |y^{(i)} - w^T \Phi(x^{(i)}) - b| - \epsilon &amp; |y^{(i)} - w^T \Phi(x^{(i)}) - b| &gt; \epsilon \\     0 &amp; otherwise\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.938em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">ϵ</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">ϵ</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">se</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><h2 id="求解优化问题">求解优化问题</h2><p>以线性可分支持向量机为例，讲解参数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>w</mi><mtext>，</mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">w， b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord cjk_fallback">，</span><span class="mord mathnormal">b</span></span></span></span>的优化方法</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mtext>优化目标：</mtext><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><mi>min</mi><mo>⁡</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">]</mo><mo>≥</mo><mn>1</mn></mspace></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">优化目标：\begin{aligned}    w, b &amp; = \arg \min \frac{1}{2} ||w||^2 \\     s.t. &amp; \quad y^{(i)} [w^T \Phi(x^{(i)}) + b] \geq 1\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.9054em;vertical-align:-1.7027em;"></span><span class="mord cjk_fallback">优化目标：</span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2027em;"><span style="top:-4.2027em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span></span></span><span style="top:-2.2787em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7027em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.2027em;"><span style="top:-4.2027em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span><span style="top:-2.2787em;"><span class="pstrut" style="height:3.3214em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.7027em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>拉格朗日函数：</mtext><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo>+</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mrow><mo fence="true">{</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">]</mo><mo fence="true">}</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>μ</mi><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></munder><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>μ</mi></munder><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>⇒</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>μ</mi><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>μ</mi></munder><munder><mrow><mi>min</mi><mo>⁡</mo></mrow><mrow><mi>w</mi><mo separator="true">,</mo><mi>b</mi></mrow></munder><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mtext>对偶问题</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>求解极值：</mtext><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo>+</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mrow><mo fence="true">{</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><msub><mi>w</mi><mi>j</mi></msub></mrow></mfrac><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo fence="true">}</mo></mrow><mo>=</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msub><mo stretchy="false">)</mo><mi>j</mi></msub></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mrow><mo fence="true">{</mo><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mfrac><mi mathvariant="normal">∂</mi><mrow><mi mathvariant="normal">∂</mi><mi>b</mi></mrow></mfrac><mi>b</mi><mo fence="true">}</mo></mrow><mo>=</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd></mtr></mtable></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>由</mtext><mi>K</mi><mi mathvariant="normal">.</mi><mi>K</mi><mi mathvariant="normal">.</mi><mi>T</mi><mtext>条件：</mtext><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msub><mo stretchy="false">)</mo><mi>j</mi></msub></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>w</mi><mi>j</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo stretchy="false">(</mo><mtext>极值条件</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">]</mo><mo>≤</mo><mn>0</mn><mo stretchy="false">(</mo><mtext>不等式约束</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mrow><mo fence="true">{</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">]</mo><mo fence="true">}</mo></mrow><mo>=</mo><mn>0</mn></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>&gt;</mo><mn>0</mn></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo stretchy="false">(</mo><mtext>优化目标</mtext><msup><mtext>取</mtext><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><msup><mo>=</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mtext>的必要条件</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    拉格朗日函数：L(w, b, \mu) = \frac{1}{2} ||w||^2 + \sum_i \mu^{(i)} \left\{ 1 - y^{(i)} [w^T \Phi(x^{(i)}) + b] \right\} \\    w, b, \mu = \arg \min_{w, b} \max_{\mu} L(w, b, \mu) \Rightarrow     w, b, \mu = \arg \max_{\mu} \min_{w, b} L(w, b, \mu)(对偶问题) \\    求解极值：\begin{cases}        \begin{aligned}            \frac{\partial}{\partial w_j} L(w, b, \mu) = \frac{1}{2} \frac{\partial}{\partial w_j} ||w||^2 +                 \sum_i \mu^{(i)} \left\{ - y^{(i)} \frac{\partial}{\partial w_j} w^T \Phi(x^{(i)}) \right\} = \\            w_j - \sum_i \mu^{(i)} y^{(i)} \Phi(x^{(i)})_j        \end{aligned} \\        \begin{aligned}            \frac{\partial}{\partial b} L(w, b, \mu) = \sum_i \mu^{(i)} \left\{ -y^{(i)} \frac{\partial}{\partial b} b \right\} = \\            - \sum_i \mu^{(i)} y^{(i)}        \end{aligned}    \end{cases} \\    由K.K.T条件：\begin{cases}        \left.\begin{aligned}            \sum_i \mu^{(i)} y^{(i)} \Phi(x^{(i)})_j &amp; = w_j \\            \sum_i \mu^{(i)} y^{(i)} &amp; = 0        \end{aligned}\right\} (极值条件) \\        1 - y^{(i)} [w^T \Phi(x^{(i)}) + b] \leq 0 (不等式约束) \\        \left.\begin{aligned}            \mu^{(i)} \left\{ 1 - y^{(i)} [w^T \Phi(x^{(i)}) + b] \right\} = 0 \\             \mu^{(i)} &gt; 0        \end{aligned} \right\} (优化目标取&#x27;=&#x27;的必要条件)    \end{cases}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:27.3207em;vertical-align:-13.4104em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:13.9104em;"><span style="top:-20.5389em;"><span class="pstrut" style="height:7.95em;"></span><span class="mord"><span class="mord cjk_fallback">拉格朗日函数：</span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">{</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">}</span></span></span></span></span><span style="top:-18.1213em;"><span class="pstrut" style="height:7.95em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">μ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">μ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6679em;"><span style="top:-2.3479em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">min</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8882em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord cjk_fallback">对偶问题</span><span class="mclose">)</span></span></span><span style="top:-10.983em;"><span class="pstrut" style="height:7.95em;"></span><span class="mord"><span class="mord cjk_fallback">求解极值：</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.95em;"><span style="top:-1.366em;"><span class="pstrut" style="height:5.916em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:5.916em;"></span><span style="height:3.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="3.916em" style="width:0.8889em" viewbox="0 0 888.89 3916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V3916 H384z M384 0 H504 V3916 H384z"/></svg></span></span><span style="top:-5.916em;"><span class="pstrut" style="height:5.916em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-7.058em;"><span class="pstrut" style="height:5.916em;"></span><span style="height:3.916em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="3.916em" style="width:0.8889em" viewbox="0 0 888.89 3916" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V3916 H384z M384 0 H504 V3916 H384z"/></svg></span></span><span style="top:-10.966em;"><span class="pstrut" style="height:5.916em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.45em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.9053em;"><span style="top:-7.9053em;"><span class="pstrut" style="height:5.0777em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0777em;"><span style="top:-5.0777em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9721em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">}</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span></span><span style="top:-2.45em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5777em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:5.0777em;"></span><span class="mord"><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.0777em;"><span style="top:-5.0777em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord">−</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">b</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord" style="margin-right:0.05556em;">∂</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">b</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">}</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span></span><span style="top:-2.45em;"><span class="pstrut" style="height:3.45em;"></span><span class="mord"><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5777em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.4053em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:0.2137em;"><span class="pstrut" style="height:7.95em;"></span><span class="mord"><span class="mord cjk_fallback">由</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord">.</span><span class="mord mathnormal" style="margin-right:0.13889em;">T</span><span class="mord cjk_fallback">条件：</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.35em;"><span style="top:-1.366em;"><span class="pstrut" style="height:5.316em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:5.316em;"></span><span style="height:3.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="3.316em" style="width:0.8889em" viewbox="0 0 888.89 3316" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V3316 H384z M384 0 H504 V3316 H384z"/></svg></span></span><span style="top:-5.316em;"><span class="pstrut" style="height:5.316em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-6.458em;"><span class="pstrut" style="height:5.316em;"></span><span style="height:3.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="3.316em" style="width:0.8889em" viewbox="0 0 888.89 3316" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V3316 H384z M384 0 H504 V3316 H384z"/></svg></span></span><span style="top:-9.766em;"><span class="pstrut" style="height:5.316em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.85em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.4467em;"><span style="top:-7.4467em;"><span class="pstrut" style="height:4.8777em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8777em;"><span style="top:-4.8777em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3777em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.8777em;"><span style="top:-4.8777em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.3777em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.65em;"><span style="top:-1.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.892em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.616em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.616em" style="width:0.8889em" viewbox="0 0 888.89 616" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V616 H384z M384 0 H504 V616 H384z"/></svg></span></span><span style="top:-4.9em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord cjk_fallback">极值条件</span><span class="mclose">)</span></span></span><span style="top:-4.061em;"><span class="pstrut" style="height:4.8777em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mopen">(</span><span class="mord cjk_fallback">不等式约束</span><span class="mclose">)</span></span></span><span style="top:-1.53em;"><span class="pstrut" style="height:4.8777em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.099em;"><span style="top:-4.099em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">{</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">}</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-2.211em;"><span class="pstrut" style="height:3.15em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.599em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.05em;"><span style="top:-2.5em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-2.492em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.016em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.016em" style="width:0.8889em" viewbox="0 0 888.89 16" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V16 H384z M384 0 H504 V16 H384z"/></svg></span></span><span style="top:-3.15em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-4.292em;"><span class="pstrut" style="height:3.15em;"></span><span style="height:0.016em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="0.016em" style="width:0.8889em" viewbox="0 0 888.89 16" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V16 H384z M384 0 H504 V16 H384z"/></svg></span></span><span style="top:-4.3em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.55em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mopen">(</span><span class="mord cjk_fallback">优化目标</span><span class="mord"><span class="mord cjk_fallback">取</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel"><span class="mrel">=</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord cjk_fallback">的必要条件</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.9467em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:13.4104em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>拉格朗日函数展开后，将极值条件代入，有</mtext></mrow><annotation encoding="application/x-tex">拉格朗日函数展开后，将极值条件代入，有</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">拉格朗日函数展开后，将极值条件代入，有</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>w</mi><mo separator="true">,</mo><mi>b</mi><mo separator="true">,</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>w</mi><mi mathvariant="normal">∣</mi><msup><mi mathvariant="normal">∣</mi><mn>2</mn></msup><mo>+</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mrow><mo fence="true">{</mo><mn>1</mn><mo>−</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">[</mo><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>+</mo><mi>b</mi><mo stretchy="false">]</mo><mo fence="true">}</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>w</mi><mi>T</mi></msup><mi>w</mi><mo>+</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi>b</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>w</mi><mi>T</mi></msup><mi>w</mi><mo>+</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><munder><munder><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mi>j</mi></munder><msub><mi>w</mi><mi>j</mi></msub><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msub><mo stretchy="false">)</mo><mi>j</mi></msub><mo fence="true">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><msup><mi>w</mi><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></munder><mo>−</mo><menclose notation="updiagonalstrike"><mrow><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi>b</mi></mrow></menclose></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mrow><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>w</mi><mi>T</mi></msup><mi>w</mi><mo>+</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><munder><mo>∑</mo><mi>j</mi></munder><msub><mi>w</mi><mi>j</mi></msub><mo>⋅</mo><munder><munder><mrow><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msub><mo stretchy="false">)</mo><mi>j</mi></msub></mrow><mo stretchy="true">⏟</mo></munder><msub><mi>w</mi><mi>i</mi></msub></munder><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><msup><mi>w</mi><mi>T</mi></msup><mi>w</mi><mo>+</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msup><mi>w</mi><mi>T</mi></msup><mi>w</mi><mo>=</mo><msup><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mi>T</mi></msup><mrow><mo fence="true">(</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mo>=</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><munder><mo>∑</mo><mi>i</mi></munder><munder><mo>∑</mo><mi>j</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><mo>⇒</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>L</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><munder><munder><mrow><munder><mo>∑</mo><mi>i</mi></munder><munder><mo>∑</mo><mi>j</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mo stretchy="false">)</mo><mi>T</mi></msup><mi mathvariant="normal">Φ</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><msup><mi>w</mi><mi>T</mi></msup><mi>w</mi></mrow></munder><mo>+</mo><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    L(w, b, \mu) &amp; = \frac{1}{2} ||w||^2 + \sum_i \mu^{(i)} \left\{ 1 - y^{(i)} [w^T \Phi(x^{(i)}) + b] \right\} \\    &amp; = \frac{1}{2} w^T w + \sum_i \mu^{(i)} - \sum_i \mu^{(i)} y^{(i)} w^T \Phi(x^{(i)}) - \sum_i \mu^{(i)} y^{(i)} b \\    &amp; = \frac{1}{2} w^T w + \sum_i \mu^{(i)} - \sum_i \mu^{(i)} y^{(i)} \underbrace{\left( \sum_j w_j \Phi(x^{(i)})_j \right)}_{w^T \Phi(x^{(i)})} - \cancel{\sum_i \mu^{(i)} y^{(i)} b} \\    &amp; \left.\begin{aligned}        = \frac{1}{2} w^T w + \sum_i \mu^{(i)} - \sum_j w_j \cdot \underbrace{\sum_i \mu^{(i)} y^{(i)} \Phi(x^{(i)})_j}_{w_i}         = - \frac{1}{2} w^T w + \sum_i \mu^{(i)} \\        w^T w = \left( \sum_i \mu^{(i)} y^{(i)} \Phi(x^{(i)}) \right)^T             \left( \sum_i \mu^{(i)} y^{(i)} \Phi(x^{(i)}) \right) = \\            \sum_i \sum_j \mu^{(i)} \mu^{(j)} y^{(i)} y^{(j)} \Phi(x^{(i)})^T \Phi(x^{(j)})    \end{aligned}\right\} \Rightarrow \\    L(\mu) &amp; = - \frac{1}{2} \underbrace{\sum_i \sum_j \mu^{(i)} \mu^{(j)} y^{(i)} y^{(j)} \Phi(x^{(i)})^T \Phi(x^{(j)})}_{w^T w} + \sum_i \mu^{(i)}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:26.0568em;vertical-align:-12.7784em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:13.2784em;"><span style="top:-19.4426em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">μ</span><span class="mclose">)</span></span></span><span style="top:-16.5435em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"></span></span><span style="top:-13.2158em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"></span></span><span style="top:-4.418em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"></span></span><span style="top:2.1891em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">μ</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:12.7784em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:13.2784em;"><span style="top:-19.4426em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">{</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal">b</span><span class="mclose">]</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">}</span></span></span></span></span><span style="top:-16.5435em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">b</span></span></span><span style="top:-13.2158em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-0.9128em;"><span class="pstrut" style="height:3.75em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7741em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mtight">Φ</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.822em;"><span style="top:-2.822em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5357em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span class="svg-align" style="top:-1.6882em;"><span class="pstrut" style="height:3.75em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0618em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.0122em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord cancel-lap"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-4.3277em;"><span class="pstrut" style="height:4.3277em;"></span><span class="mord cancel-pad"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord mathnormal">b</span></span></span><span class="svg-align" style="top:-3.05em;"><span class="pstrut" style="height:4.3277em;"></span><span style="height:2.3277em;"><svg xmlns="http://www.w3.org/2000/svg" width="100%" height="2.3277em"><line x1="0" y1="100%" x2="100%" y2="0" stroke-width="0.046em"/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span></span></span><span style="top:-4.418em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.4856em;"><span style="top:-8.1454em;"><span class="pstrut" style="height:3.9812em;"></span><span class="mord"><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-0.6229em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:-0.0269em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span class="svg-align" style="top:-1.1243em;"><span class="pstrut" style="height:3.05em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9257em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.5272em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.337em;"><span class="pstrut" style="height:3.9812em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.9812em;"><span style="top:-4.2029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span></span></span><span style="top:-0.7094em;"><span class="pstrut" style="height:3.9812em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.9856em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.35em;"><span style="top:-1.366em;"><span class="pstrut" style="height:5.316em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:5.316em;"></span><span style="height:3.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="3.316em" style="width:0.8889em" viewbox="0 0 888.89 3316" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V3316 H384z M384 0 H504 V3316 H384z"/></svg></span></span><span style="top:-5.316em;"><span class="pstrut" style="height:5.316em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-6.458em;"><span class="pstrut" style="height:5.316em;"></span><span style="height:3.316em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="3.316em" style="width:0.8889em" viewbox="0 0 888.89 3316" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V3316 H384z M384 0 H504 V3316 H384z"/></svg></span></span><span style="top:-9.766em;"><span class="pstrut" style="height:5.316em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.85em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span></span></span><span style="top:2.1891em;"><span class="pstrut" style="height:7.4856em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3214em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-0.2464em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7741em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span class="svg-align" style="top:-0.9882em;"><span class="pstrut" style="height:3.05em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord">Φ</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.0618em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8036em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:12.7784em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>那么现在的优化问题如下，用</mtext><mi>S</mi><mi>M</mi><mi>O</mi><mtext>进行求解</mtext></mrow><annotation encoding="application/x-tex">那么现在的优化问题如下，用SMO进行求解</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord cjk_fallback">那么现在的优化问题如下，用</span><span class="mord mathnormal" style="margin-right:0.02778em;">SMO</span><span class="mord cjk_fallback">进行求解</span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mi>μ</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mi>arg</mi><mo>⁡</mo><munder><mrow><mi>max</mi><mo>⁡</mo></mrow><mi>μ</mi></munder><mi>L</mi><mo stretchy="false">(</mo><mi>μ</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mi mathvariant="normal">.</mi><mi>t</mi><mi mathvariant="normal">.</mi></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mspace width="1em"><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>≥</mo><mn>0</mn><mo separator="true">,</mo><mspace width="1em"><munder><mo>∑</mo><mi>i</mi></munder><msup><mi>μ</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>=</mo><mn>0</mn></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mo lspace="0em" rspace="0em">⇒</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msup><mi>μ</mi><mo>∗</mo></msup><mo>⇒</mo><msup><mi>w</mi><mo>∗</mo></msup><mo separator="true">,</mo><msup><mi>b</mi><mo>∗</mo></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    \mu &amp; = \arg \max_{\mu} L(\mu) \\    s.t. &amp; \quad \mu^{(i)} \geq 0, \quad \sum_i \mu^{(i)} y^{(i)} = 0 \\    \Rightarrow &amp; \mu^* \Rightarrow w^*, b^*\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.1038em;vertical-align:-2.8019em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3019em;"><span style="top:-5.5119em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord mathnormal">μ</span></span></span><span style="top:-3.3258em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mord">.</span><span class="mord mathnormal">t</span><span class="mord">.</span></span></span><span style="top:-0.9081em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mrel">⇒</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8019em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.3019em;"><span style="top:-5.5119em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4306em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">μ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">max</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">L</span><span class="mopen">(</span><span class="mord mathnormal">μ</span><span class="mclose">)</span></span></span><span style="top:-3.3258em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.2777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">0</span></span></span><span style="top:-0.9081em;"><span class="pstrut" style="height:3.05em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathnormal">μ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7387em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8019em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><div style="page-break-after: always;"></div><h1>聚类</h1><p>仅介绍部分概念和算法步骤。给定样本集合<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{X^{(i)}, i = 1, \cdots, N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span>，指定划分类别<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>，要求利用样本分布，将样本划分为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个类别。</p><h2 id="距离度量">距离度量</h2><p>定义两个<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span></span></span></span>维向量<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi><mo separator="true">,</mo><mi>y</mi></mrow><annotation encoding="application/x-tex">x, y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.1944em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span>，有如下常用距离定义</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>曼哈顿距离</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>d</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>1</mn></msub><mo>=</mo><munder><mo>∑</mo><mi>j</mi></munder><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>j</mi></msub><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>欧氏距离</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>d</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>2</mn></msub><mo>=</mo><mo stretchy="false">(</mo><munder><mo>∑</mo><mi>j</mi></munder><mo stretchy="false">(</mo><msub><mi>x</mi><mi>j</mi></msub><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub><msup><mo stretchy="false">)</mo><mn>2</mn></msup><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>闵可夫斯基距离</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>d</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mi>p</mi></msub><mo>=</mo><mo stretchy="false">(</mo><munder><mo>∑</mo><mi>j</mi></munder><mi mathvariant="normal">∣</mi><msub><mi>x</mi><mi>j</mi></msub><mo>−</mo><msub><mi>y</mi><mi>j</mi></msub><msup><mi mathvariant="normal">∣</mi><mi>p</mi></msup><msup><mo stretchy="false">)</mo><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>p</mi></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mtext>余弦距离</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mi>d</mi><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mo>−</mo><mi>y</mi><mi mathvariant="normal">∣</mi><msub><mi mathvariant="normal">∣</mi><mn>1</mn></msub><mo>=</mo><mi>cos</mi><mo>⁡</mo><mo>&lt;</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>&gt;</mo><mo>=</mo><mfrac><mrow><msup><mi>x</mi><mi>T</mi></msup><mi>y</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>x</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mo>⋅</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>y</mi><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow></mfrac></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    曼哈顿距离 &amp; d = || x - y ||_1 = \sum_j |x_j - y_j| \\    欧氏距离 &amp; d = || x - y ||_2 = (\sum_j (x_j - y_j)^2)^{1 / 2} \\    闵可夫斯基距离 &amp; d = || x - y ||_p = (\sum_j |x_j - y_j|^p)^{1 / p} \\    余弦距离 &amp; d = || x - y ||_1 = \cos &lt;x, y&gt; = \frac{x^T y}{||x||\cdot||y||} \\\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:11.0457em;vertical-align:-5.2728em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.7728em;"><span style="top:-8.2412em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord"><span class="mord cjk_fallback">曼哈顿距离</span></span></span><span style="top:-5.4774em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord"><span class="mord cjk_fallback">欧氏距离</span></span></span><span style="top:-2.7136em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord"><span class="mord cjk_fallback">闵可夫斯基距离</span></span></span><span style="top:0.5185em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord"><span class="mord cjk_fallback">余弦距离</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.2728em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.7728em;"><span style="top:-8.2412em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-5.4774em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1/2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.7136em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8723em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4138em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.938em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1/</span><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span></span></span></span><span style="top:0.5185em;"><span class="pstrut" style="height:3.5183em;"></span><span class="mord"><span class="mord"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">&gt;=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5183em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣∣</span><span class="mord mathnormal">x</span><span class="mord">∣∣</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord">∣∣</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">∣∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8413em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:5.2728em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="KMeans">KMeans</h2><ol><li>随机选取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个样本点作为初始中心点(初值敏感)；</li><li>计算每个样本点到各中心点的距离(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>×</mo><mi>K</mi></mrow><annotation encoding="application/x-tex">N \times K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>)；</li><li>将每个样本划分到距离最近的中心点指代的类别中；</li><li>每个类别重新计算中心点，更新参数；</li><li>重复2~4直至收敛。</li></ol><h2 id="Spectral">Spectral</h2><ol><li>构建相似矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>S</mi><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>−</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mi mathvariant="normal">∣</mi><msubsup><mi mathvariant="normal">∣</mi><mn>2</mn><mn>2</mn></msubsup></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases} S_{N \times N} = \begin{bmatrix} d_{ij} \end{bmatrix} \\ d_{ij} = ||x^{(i)} - x^{(j)}||_2^2 \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3em;vertical-align:-1.25em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0576em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">∣∣</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord">∣</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-2.4519em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2481em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>；</li><li>计算邻接矩阵<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>ϵ</mi><mtext>近邻法：</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>w</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>ϵ</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>≤</mo><mi>ϵ</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>K</mi><mtext>近邻法：</mtext></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>w</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.36em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo>∈</mo><msub><mi>δ</mi><mi>K</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mspace width="1em"><mi>A</mi><mi>N</mi><mi>D</mi><mi mathvariant="normal">/</mi><mi>O</mi><mi>R</mi><mspace width="1em"><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>j</mi><mo stretchy="false">)</mo></mrow></msup><mo>∈</mo><msub><mi>δ</mi><mi>K</mi></msub><mo stretchy="false">(</mo><msup><mi>x</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo></mspace></mspace></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>o</mi><mi>t</mi><mi>h</mi><mi>e</mi><mi>r</mi><mi>w</mi><mi>i</mi><mi>s</mi><mi>e</mi></mrow></mstyle></mtd></mtr></mtable></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>δ</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mtext>表示</mtext><mi>x</mi><mtext>的</mtext><mi>K</mi><mtext>邻域</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mtext>全连接法：</mtext></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>w</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo>=</mo><mi>exp</mi><mo>⁡</mo><mo stretchy="false">(</mo><mo>−</mo><mfrac><msub><mi>d</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mrow><mn>2</mn><msup><mi>σ</mi><mn>2</mn></msup></mrow></mfrac><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases}    \epsilon近邻法：&amp; w_{ij} = \begin{cases}            \epsilon &amp; d_{ij} \leq \epsilon \\            0 &amp; otherwise        \end{cases} \\    K近邻法：&amp; w_{ij} = \begin{cases}            \exp(-\frac{d_{ij}}{2 \sigma^2}) &amp; x^{(i)} \in \delta_K(x^{(j)}) \quad AND/OR \quad x^{(j)} \in \delta_K(x^{(i)}) \\            0 &amp; otherwise        \end{cases} \\ &amp; \delta_K(x)表示x的K邻域 \\    全连接法：&amp; w_{ij} =  \exp(-\frac{d_{ij}}{2 \sigma^2})\end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:8.8801em;vertical-align:-4.19em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.45em;"><span style="top:-1.366em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewbox="0 0 888.89 2416" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-4.416em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-5.558em;"><span class="pstrut" style="height:4.416em;"></span><span style="height:2.416em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.416em" style="width:0.8889em" viewbox="0 0 888.89 2416" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2416 H384z M384 0 H504 V2416 H384z"/></svg></span></span><span style="top:-7.966em;"><span class="pstrut" style="height:4.416em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.95em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.69em;"><span style="top:-6.69em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span><span class="mord cjk_fallback">近邻法：</span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord cjk_fallback">近邻法：</span></span></span><span style="top:-1.432em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"></span></span><span style="top:0.008em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord cjk_fallback">全连接法：</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.69em;"><span style="top:-6.69em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">ϵ</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal">ϵ</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">se</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.69em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9934em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">/</span><span class="mord mathnormal" style="margin-right:0.00773em;">OR</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">o</span><span class="mord mathnormal">t</span><span class="mord mathnormal">h</span><span class="mord mathnormal" style="margin-right:0.02778em;">er</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal">i</span><span class="mord mathnormal">se</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.432em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0379em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mord cjk_fallback">表示</span><span class="mord mathnormal">x</span><span class="mord cjk_fallback">的</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mord cjk_fallback">邻域</span></span></span><span style="top:0.008em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop">exp</span><span class="mopen">(</span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9934em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.5073em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3281em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2819em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li>求度矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>D</mi><mrow><mi>N</mi><mo>×</mo><mi>N</mi></mrow></msub><mo>=</mo><mtext>diag</mtext><mo stretchy="false">{</mo><msub><mo>∑</mo><mi>j</mi></msub><msub><mi>w</mi><mrow><mi>i</mi><mi>j</mi></mrow></msub><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>N</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">D_{N \times N} = \text{diag}\{\sum_j w_{ij}, i = 1, \cdots, N\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1858em;vertical-align:-0.4358em;"></span><span class="mord text"><span class="mord">diag</span></span><span class="mopen">{</span><span class="mop"><span class="mop op-symbol small-op" style="position:relative;top:0em;">∑</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.162em;"><span style="top:-2.4003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4358em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3117em;"><span style="top:-2.55em;margin-left:-0.0269em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">ij</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2861em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">}</span></span></span></span>，即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi></mrow><annotation encoding="application/x-tex">W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>行和作为对角元素；</li><li>求(正则)拉普拉斯矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><mi>D</mi><mo>−</mo><mi>W</mi></mrow><annotation encoding="application/x-tex">L = D - W</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7667em;vertical-align:-0.0833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><msup><mi>D</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup><mo stretchy="false">(</mo><mi>D</mi><mo>−</mo><mi>W</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L = D^{-1}(D - W)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.0641em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span></span></span></span>或<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi><mo>=</mo><msup><mi>D</mi><mrow><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup><mo stretchy="false">(</mo><mi>D</mi><mo>−</mo><mi>W</mi><mo stretchy="false">)</mo><msup><mi>D</mi><mrow><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">L = D^{-1/2}(D - W)D^{-1/2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1/2</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">W</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1/2</span></span></span></span></span></span></span></span></span></span></span></span>；</li><li>求<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>L</mi></mrow><annotation encoding="application/x-tex">L</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">L</span></span></span></span>的特征分解，选取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">(</mo><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>≤</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">N&#x27;(N&#x27; \leq N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0019em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7519em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>个<strong>最小</strong>特征值对应的特征向量组成矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>F</mi><mrow><mi>N</mi><mo>×</mo><msup><mi>N</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow></msub></mrow><annotation encoding="application/x-tex">F_{N \times N&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8917em;vertical-align:-0.2083em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.1389em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="mbin mtight">×</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828em;"><span style="top:-2.786em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2083em;"><span></span></span></span></span></span></span></span></span></span>；</li><li>将矩阵<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi></mrow><annotation encoding="application/x-tex">F</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span></span></span></span>每行视作样本<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup></mrow><annotation encoding="application/x-tex">f^{(i)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824em;vertical-align:-0.1944em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span></span>，标准化后执行其他简单的聚类如KMeans，得到聚类结果。</li></ol><div style="page-break-after: always;"></div><h1>决策树</h1><p>给定包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|D|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span></span>个样本的样本集<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi><mo>=</mo><mo stretchy="false">{</mo><mo stretchy="false">(</mo><msup><mi>X</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo stretchy="false">(</mo><mi>i</mi><mo stretchy="false">)</mo></mrow></msup><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">D = \{(X^{(i)}, y^{(i)}), i = 1, \cdots, |D|\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.138em;vertical-align:-0.25em;"></span><span class="mopen">{(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.888em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">i</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mclose">}</span></span></span></span>，属于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个类别<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>y</mi><mo>∈</mo><mo stretchy="false">{</mo><msub><mi>C</mi><mi>k</mi></msub><mo separator="true">,</mo><mi>k</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi>K</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">y \in \{C_k, k = 1, \cdots, K\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335em;vertical-align:-0.1944em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mclose">}</span></span></span></span>，设类别<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的样本数目为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|D_{k}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>，设特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span></span></span></span>有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><mi>A</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|A|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mord">∣</span></span></span></span>个特征<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>A</mi><mi>a</mi></msub><mo separator="true">,</mo><mi>a</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mo>⋯</mo><mtext> </mtext><mo separator="true">,</mo><mi mathvariant="normal">∣</mi><mi>A</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{A_a, a = 1, \cdots, |A|\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mord">∣</span><span class="mclose">}</span></span></span></span>，每个特征包含样本数目<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>a</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|D_{a}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>，记特征为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">A_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的样本中属于类别<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">C_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0715em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的样本数目为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>a</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">|D_{ak}|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ak</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span>。</p><h2 id="ID3">ID3</h2><p>用<strong>信息增益</strong>作为准则选择当前最优划分属性：信息增益越大表示属性越优</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>−</mo><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mi>k</mi></munder><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mo stretchy="false">(</mo><mtext>总样本的类别熵</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>H</mi><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>a</mi></munder><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>a</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><munder><munder><mrow><mo fence="true">(</mo><mo>−</mo><munder><mo>∑</mo><mi>k</mi></munder><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>a</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>a</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>a</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>a</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><mo fence="true">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><mi>H</mi><mo stretchy="false">(</mo><msub><mi>D</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow></munder><mo stretchy="false">(</mo><mtext>特征</mtext><msub><mi>A</mi><mi>a</mi></msub><mtext>的类别熵的加权和</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    g(D, A) = H(D) - H(D | A) \\    \left.\begin{aligned}        H(D) &amp; = - \sum_k \frac{|D_k|}{|D|} \log \frac{|D_k|}{|D|}(总样本的类别熵) \\        H(D | A) &amp; = \sum_a \frac{|D_a|}{|D|}         \underbrace{\left( - \sum_k \frac{|D_{ak}|}{|D_a|} \log \frac{|D_{ak}|}{|D_a|} \right)}_{H(D_a)} (特征A_a的类别熵的加权和)    \end{aligned} \right\}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.7292em;vertical-align:-4.6146em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.1146em;"><span style="top:-10.4892em;"><span class="pstrut" style="height:6.2146em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span><span style="top:-5.6146em;"><span class="pstrut" style="height:6.2146em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2146em;"><span style="top:-6.5376em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-3.1855em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7146em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2146em;"><span style="top:-6.5376em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord cjk_fallback">总样本的类别熵</span><span class="mclose">)</span></span></span><span style="top:-3.1855em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-1.0749em;"><span class="pstrut" style="height:3.75em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.08125em;">H</span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span class="svg-align" style="top:-1.7999em;"><span class="pstrut" style="height:3.75em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ak</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ak</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9501em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8501em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord cjk_fallback">特征</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的类别熵的加权和</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7146em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.15em;"><span style="top:-1.366em;"><span class="pstrut" style="height:4.116em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:4.116em;"></span><span style="height:2.116em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.116em" style="width:0.8889em" viewbox="0 0 888.89 2116" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2116 H384z M384 0 H504 V2116 H384z"/></svg></span></span><span style="top:-4.116em;"><span class="pstrut" style="height:4.116em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-5.258em;"><span class="pstrut" style="height:4.116em;"></span><span style="height:2.116em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.116em" style="width:0.8889em" viewbox="0 0 888.89 2116" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2116 H384z M384 0 H504 V2116 H384z"/></svg></span></span><span style="top:-7.366em;"><span class="pstrut" style="height:4.116em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.65em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.6146em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="C4-5">C4.5</h2><p>用<strong>信息增益比</strong>作为准则选择当前最优划分属性：信息增益比越大表示属性越优</p><ul><li>以信息增益比(information gain ratio)作为特征选择的准则，克服ID3会优先选择有较多属性值的特征的缺点；</li><li>弥补不能处理特征属性值连续的问题。</li></ul><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>g</mi><mi>R</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mfrac><mrow><mi>g</mi><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>H</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mfrac></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>H</mi><mi>A</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mo>−</mo><munder><mo>∑</mo><mi>a</mi></munder><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>a</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mi>log</mi><mo>⁡</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>a</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><mo stretchy="false">(</mo><mtext>特征</mtext><mi>A</mi><mtext>的属性熵</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    g_R(D, A) &amp; = \frac{g(D, A)}{H_A(D)} \\    H_A(D) &amp; = - \sum_a \frac{|D_a|}{|D|} \log \frac{|D_a|}{|D|} (特征A的属性熵)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.64em;vertical-align:-2.57em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.07em;"><span style="top:-5.07em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span><span style="top:-2.407em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.57em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.07em;"><span style="top:-5.07em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0813em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">A</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-2.407em;"><span class="pstrut" style="height:3.427em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">−</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord cjk_fallback">特征</span><span class="mord mathnormal">A</span><span class="mord cjk_fallback">的属性熵</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.57em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="CART">CART</h2><p>用<strong>信息增益比</strong>作为准则选择当前最优划分属性：信息增益比越大表示属性越优</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mtable rowspacing="0.25em" columnalign="right" columnspacing><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>g</mi><mi>G</mi></msub><mo stretchy="false">(</mo><mi>D</mi><mo separator="true">,</mo><mi>A</mi><mo stretchy="false">)</mo><mo>=</mo><mtext>Gini</mtext><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo><mo>−</mo><mtext>Gini</mtext><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtable rowspacing="0.25em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>Gini</mtext><mo stretchy="false">(</mo><mi>D</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><munder><mo>∑</mo><mi>k</mi></munder><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo stretchy="false">(</mo><mtext>总样本的类别基尼系数</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mtext>Gini</mtext><mo stretchy="false">(</mo><mi>D</mi><mi mathvariant="normal">∣</mi><mi>A</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><munder><mo>∑</mo><mi>a</mi></munder><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>a</mi></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><mi>D</mi><mi mathvariant="normal">∣</mi></mrow></mfrac><munder><munder><mrow><mo fence="true">(</mo><mn>1</mn><mo>−</mo><munder><mo>∑</mo><mi>k</mi></munder><mo stretchy="false">(</mo><mfrac><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mrow><mi>a</mi><mi>k</mi></mrow></msub><mi mathvariant="normal">∣</mi></mrow><mrow><mi mathvariant="normal">∣</mi><msub><mi>D</mi><mi>a</mi></msub><mi mathvariant="normal">∣</mi></mrow></mfrac><msup><mo stretchy="false">)</mo><mn>2</mn></msup><mo fence="true">)</mo></mrow><mo stretchy="true">⏟</mo></munder><mrow><mtext>Gini</mtext><mo stretchy="false">(</mo><msub><mi>D</mi><mi>a</mi></msub><mo stretchy="false">)</mo></mrow></munder><mo stretchy="false">(</mo><mtext>特征</mtext><msub><mi>A</mi><mi>a</mi></msub><mtext>的类别基尼系数的加权和</mtext><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}    g_G(D, A) = \text{Gini}(D) - \text{Gini}(D|A) \\    \left.\begin{aligned}        \text{Gini}(D) &amp; = 1 - \sum_k (\frac{|D_k|}{|D|})^2 (总样本的类别基尼系数) \\        \text{Gini}(D|A) &amp; = \sum_a \frac{|D_a|}{|D|}             \underbrace{\left( 1 - \sum_k (\frac{|D_{ak}|}{|D_a|})^2 \right)}_{\text{Gini}(D_a)} (特征A_a的类别基尼系数的加权和)    \end{aligned}\right\}\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:9.7292em;vertical-align:-4.6146em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:5.1146em;"><span style="top:-10.4892em;"><span class="pstrut" style="height:6.2146em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3283em;"><span style="top:-2.55em;margin-left:-0.0359em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">G</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal">A</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord text"><span class="mord">Gini</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mord text"><span class="mord">Gini</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span><span style="top:-5.6146em;"><span class="pstrut" style="height:6.2146em;"></span><span class="mord"><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2146em;"><span style="top:-6.5376em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord text"><span class="mord">Gini</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mclose">)</span></span></span><span style="top:-3.1855em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord text"><span class="mord">Gini</span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span><span class="mord mathnormal">A</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7146em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.2146em;"><span style="top:-6.5376em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord cjk_fallback">总样本的类别基尼系数</span><span class="mclose">)</span></span></span><span style="top:-3.1855em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.9em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.25em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span style="top:-1.0749em;"><span class="pstrut" style="height:3.75em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">Gini</span></span><span class="mopen mtight">(</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1645em;"><span style="top:-2.357em;margin-left:-0.0278em;margin-right:0.0714em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mclose mtight">)</span></span></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.75em;"><span class="svg-align" style="top:-1.7999em;"><span class="pstrut" style="height:3.75em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMinYMin slice"><path d="M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z"/></svg></span><span class="brace-center" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMidYMin slice"><path d="M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z"/></svg></span><span class="brace-right" style="height:0.548em;"><svg xmlns="http://www.w3.org/2000/svg" width="400em" height="0.548em" viewbox="0 0 400000 548" preserveaspectratio="xMaxYMin slice"><path d="M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z"/></svg></span></span></span><span style="top:-3.75em;"><span class="pstrut" style="height:3.75em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">(</span></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.05em;"><span style="top:-1.8479em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.05em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.3021em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361em;"><span style="top:-2.55em;margin-left:-0.0278em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">ak</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size4">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9501em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.8501em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord cjk_fallback">特征</span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord cjk_fallback">的类别基尼系数的加权和</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.7146em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:4.15em;"><span style="top:-1.366em;"><span class="pstrut" style="height:4.116em;"></span><span class="delimsizinginner delim-size4"><span>⎭</span></span></span><span style="top:-1.358em;"><span class="pstrut" style="height:4.116em;"></span><span style="height:2.116em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.116em" style="width:0.8889em" viewbox="0 0 888.89 2116" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2116 H384z M384 0 H504 V2116 H384z"/></svg></span></span><span style="top:-4.116em;"><span class="pstrut" style="height:4.116em;"></span><span class="delimsizinginner delim-size4"><span>⎬</span></span></span><span style="top:-5.258em;"><span class="pstrut" style="height:4.116em;"></span><span style="height:2.116em;width:0.8889em;"><svg xmlns="http://www.w3.org/2000/svg" width="0.8889em" height="2.116em" style="width:0.8889em" viewbox="0 0 888.89 2116" preserveaspectratio="xMinYMin"><path d="M384 0 H504 V2116 H384z M384 0 H504 V2116 H384z"/></svg></span></span><span style="top:-7.366em;"><span class="pstrut" style="height:4.116em;"></span><span class="delimsizinginner delim-size4"><span>⎫</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.65em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:4.6146em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="RF">RF</h2><p>随机森林是用Bagging策略，对包含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi></mrow><annotation encoding="application/x-tex">N</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span></span></span></span>个样本的数据集<strong>进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>次的有放回的采样，每次随机取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">N_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>个样本</strong>，得到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>个样本数目为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>N</mi><mi>m</mi></msub></mrow><annotation encoding="application/x-tex">N_m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-left:-0.109em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>的样本子集，对每个子集建立分类器。</p><blockquote><p><strong>Bootstrap采样</strong>：对于一个样本，它在某一次含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>个样本的训练集的随机采样中，每次被采集到的概率是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mi mathvariant="normal">/</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">1/m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">m</span></span></span></span>。不被采集到的概率为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">1−1/m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">m</span></span></span></span>。如果<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span></span></span></span>次采样都没有被采集中的概率是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>m</mi><msup><mo stretchy="false">)</mo><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">(1−1/m)^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">m</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span>。当<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">m→\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord">∞</span></span></span></span>时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mrow><mi>lim</mi><mo>⁡</mo></mrow><mrow><mi>m</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mn>1</mn><mi mathvariant="normal">/</mi><mi>m</mi><msup><mo stretchy="false">)</mo><mi>m</mi></msup><mo>≈</mo><mn>0.368</mn></mrow><annotation encoding="application/x-tex">\lim_{m \rightarrow \infty} (1−1/m)^m \approx 0.368</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.1514em;"><span style="top:-2.55em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1/</span><span class="mord mathnormal">m</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6644em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">0.368</span></span></span></span>。也就是说，在bagging的每轮随机采样中，训练集中大约有36.8%的数据没有被采样集采集中。对于这部分大约<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>36.8</mn><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">36.8\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8056em;vertical-align:-0.0556em;"></span><span class="mord">36.8%</span></span></span></span>的没有被采样到的数据，我们常常称之为袋外数据(Out Of Bag, 简称OOB)。这些数据没有参与训练集模型的拟合，因此可以用来检测模型的泛化能力。</p></blockquote><p>随机森林在Bagging策略上进行训练：</p><ol><li>用Bootstrap策略随机采样<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>次；</li><li>一棵树的生成时，<strong>仅从所有特征(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>个)中选取<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>个特征</strong>；</li><li>生成<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>M</mi></mrow><annotation encoding="application/x-tex">M</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span></span></span></span>棵树进行投票表决，确定预测结果(分类可取众数、回归可取均值)。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 机器学习 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Useful Terminal Control Sequences</title>
      <link href="/2019/05/28/Useful-Terminal-Control-Sequences.html"/>
      <url>/2019/05/28/Useful-Terminal-Control-Sequences.html</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p><code>ANSI</code>定义了用于屏幕显示的<code>Escape</code>屏幕控制码，打印输出到终端时，可指定输出颜色、格式等。</p><h1>基本格式</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\033[&lt;background color&gt;;&lt;front color&gt;m string to print \033[0m</span><br></pre></td></tr></table></figure><ul><li><code>\033[ xxxx m</code>为一个句段；</li><li><code>\033[0m</code>关闭所有属性；</li></ul><h1>光标控制</h1><table><thead><tr><th>ANSI控制码</th><th>含义</th></tr></thead><tbody><tr><td>\033[nA</td><td>光标上移n行</td></tr><tr><td>\033[nB</td><td>光标下移n行</td></tr><tr><td>\033[nC</td><td>光标右移n行</td></tr><tr><td>\033[nD</td><td>光标左移n行</td></tr><tr><td>\033[y;xH</td><td>设置光标位置</td></tr><tr><td>\033[2J</td><td>清屏</td></tr><tr><td>\033[K</td><td>清除从光标到行尾的内容</td></tr><tr><td>\033[s</td><td>保存光标位置</td></tr><tr><td>\033[u</td><td>恢复光标位置</td></tr><tr><td>\033[?25l</td><td>隐藏光标</td></tr><tr><td>\033[?25h</td><td>显示光标</td></tr></tbody></table><h1>颜色控制</h1><table><thead><tr><th>ANSI控制码</th><th>含义</th></tr></thead><tbody><tr><td>\033[m</td><td>NONE</td></tr><tr><td>\033[0;32;31m</td><td>RED</td></tr><tr><td>\033[1;31m</td><td>LIGHT RED</td></tr><tr><td>\033[0;32;32m</td><td>GREEN</td></tr><tr><td>\033[1;32m</td><td>LIGHT GREEN</td></tr><tr><td>\033[0;32;34m</td><td>BULE</td></tr><tr><td>\033[1;34m</td><td>LIGHT BLUE</td></tr><tr><td>\033[1;30m</td><td>GRAY</td></tr><tr><td>\033[0;36m</td><td>CYAN</td></tr><tr><td>\033[1;36m</td><td>LIGHT CYAN</td></tr><tr><td>\033[0;35m</td><td>PURPLE</td></tr><tr><td>\033[1;35m</td><td>LIAGHT PURPLE</td></tr><tr><td>\033[0;33m</td><td>BROWN</td></tr><tr><td>\033[1;33m</td><td>YELLO</td></tr><tr><td>\033[0;37m</td><td>LIGHT GRAY</td></tr><tr><td>\033[1;37m</td><td>WHITE</td></tr></tbody></table><p>背景色与字体颜色符号不同</p><table><thead><tr><th>背景色</th><th>字体色</th></tr></thead><tbody><tr><td>40: 黑</td><td>30: 黑</td></tr><tr><td>41: 红</td><td>31: 红</td></tr><tr><td>42: 绿</td><td>32: 绿</td></tr><tr><td>43: 黄</td><td>33: 黄</td></tr><tr><td>44: 蓝</td><td>34: 蓝</td></tr><tr><td>45: 紫</td><td>35: 紫</td></tr><tr><td>46: 深绿</td><td>36: 深绿</td></tr><tr><td>47: 白色</td><td>37: 白色</td></tr></tbody></table><h1>格式控制</h1><table><thead><tr><th>ANSI控制码</th><th>含义</th></tr></thead><tbody><tr><td>\033[0m</td><td>关闭所有属性</td></tr><tr><td>\033[1m</td><td>设置高亮度</td></tr><tr><td>\033[4m</td><td>下划线</td></tr><tr><td>\033[5m</td><td>闪烁</td></tr><tr><td>\033[7m</td><td>反显</td></tr><tr><td>\033[8m</td><td>消隐</td></tr></tbody></table><h1>举例</h1><p>例如用python打印输出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\007&quot;</span>)                       <span class="comment"># 发出提示音</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\033[42:31m hello! \033[0m&quot;</span>) <span class="comment"># 绿底红字` hello! ` </span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\033[4m&quot;</span>)                    <span class="comment"># 开启下划线</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\033[42:31m hello! \033[0m&quot;</span>) <span class="comment"># 下划线绿底红字` hello! ` </span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\033[0m&quot;</span>)                    <span class="comment"># 关闭所有格式</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\033[2J&quot;</span>)                    <span class="comment"># 清屏 </span></span><br></pre></td></tr></table></figure><h1>Reference</h1><ol><li><a href="https://blog.csdn.net/lzuacm/article/details/8993785">“\033”(ESC)的用法-ANSI的Esc屏幕控制 - CSDN</a></li><li><a href="https://www.student.cs.uwaterloo.ca/~cs452/terminal.html">Useful Terminal Control Sequences - student.cs.uwaterloo.ca</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Github博客搭建</title>
      <link href="/2019/01/04/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA.html"/>
      <url>/2019/01/04/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA.html</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>那么问题来了，现有的博客还是现有的这篇文章呢？</p><h1>软件安装</h1><p>安装<a href="https://nodejs.org/en/">node.js</a>, <a href="https://git-scm.com/">git</a>, <a href="https://hexo.io/zh-cn/">hexo</a></p><h1>博客搭建</h1><h2 id="初始化">初始化</h2><p>推荐使用<code>git</code>命令窗口，执行如下指令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> mkdir Blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> Blog</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo init</span></span><br><span class="line">INFO  Cloning hexo-starter to ~\Desktop\Blog</span><br><span class="line">Cloning into &#x27;C:\Users\LouisHsu\Desktop\Blog&#x27;...</span><br><span class="line">remote: Enumerating objects: 68, done.</span><br><span class="line">remote: Total 68 (delta 0), reused 0 (delta 0), pack-reused 68</span><br><span class="line">Unpacking objects: 100% (68/68), done.</span><br><span class="line">Submodule &#x27;themes/landscape&#x27; (https://github.com/hexojs/hexo-theme-landscape.git) registered for path &#x27;themes/landscape&#x27;</span><br><span class="line">Cloning into &#x27;C:/Users/LouisHsu/Desktop/Blog/themes/landscape&#x27;...</span><br><span class="line">remote: Enumerating objects: 1, done.</span><br><span class="line">remote: Counting objects: 100% (1/1), done.</span><br><span class="line">remote: Total 867 (delta 0), reused 0 (delta 0), pack-reused 866</span><br><span class="line">Receiving objects: 100% (867/867), 2.55 MiB | 494.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (459/459), done.</span><br><span class="line">Submodule path &#x27;themes/landscape&#x27;: checked out &#x27;73a23c51f8487cfcd7c6deec96ccc7543960d350&#x27;</span><br><span class="line">Install dependencies</span><br><span class="line">npm WARN deprecated titlecase@1.1.2: no longer maintained</span><br><span class="line">npm WARN deprecated postinstall-build@5.0.3: postinstall-build&#x27;s behavior is now built into npm! You should migrate off of postinstall-build and use the new `prepare` lifecycle script with npm 5.0.0 or greater.</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> nunjucks@3.1.6 postinstall C:\Users\LouisHsu\Desktop\Blog\node_modules\nunjucks</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"> node postinstall-build.js src</span></span><br><span class="line"></span><br><span class="line">npm notice created a lockfile as package-lock.json. You should commit this file.</span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line"></span><br><span class="line">added 422 packages from 501 contributors and audited 4700 packages in 59.195s</span><br><span class="line">found 0 vulnerabilities</span><br><span class="line"></span><br><span class="line">INFO  Start blogging with Hexo!</span><br></pre></td></tr></table></figure><p>生成目录结构如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">\-- scaffolds</span><br><span class="line">\-- source</span><br><span class="line">    \-- _posts</span><br><span class="line">\-- themes</span><br><span class="line">|-- _config.yml</span><br><span class="line">|-- package.json</span><br></pre></td></tr></table></figure><p>继续</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install</span></span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.4 (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.4: wanted &#123;&quot;os&quot;:&quot;darwin&quot;,&quot;arch&quot;:&quot;any&quot;&#125; (current: &#123;&quot;os&quot;:&quot;win32&quot;,&quot;arch&quot;:&quot;x64&quot;&#125;)</span><br><span class="line"></span><br><span class="line">audited 4700 packages in 5.99s</span><br><span class="line">found 0 vulnerabilities</span><br></pre></td></tr></table></figure><p>现在该目录执行指令，开启<code>hexo</code>服务器</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo s</span></span><br><span class="line">INFO  Start processing</span><br><span class="line">INFO  Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</span><br></pre></td></tr></table></figure><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/hexo_server.png" alt="hexo_server"></p><h2 id="生成目录和标签">生成目录和标签</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo n page about</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo n page archives</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo n page categories</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo n page tags</span></span><br></pre></td></tr></table></figure><p>修改<code>/source/tags/index.md</code>，其他同理</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">01| ---</span><br><span class="line">02| title: tags</span><br><span class="line">03| date: 2019-01-04 17:34:15</span><br><span class="line">04| ---</span><br><span class="line"></span><br><span class="line">-&gt;</span><br><span class="line"></span><br><span class="line">01| ---</span><br><span class="line">02| title: tags</span><br><span class="line">03| date: 2019-01-04 17:34:15</span><br><span class="line">04| type: &quot;tags&quot;</span><br><span class="line">05| comments: false</span><br><span class="line">06| ---</span><br></pre></td></tr></table></figure><h2 id="关联Github">关联<code>Github</code></h2><p>在<code>Github</code>新建一个仓库，命名为<code>username.github.io</code>，例如<code>isLouisHsu.github.io</code>，新建时勾选<code>Initialize this repository with a README</code>，因为这个仓库必须不能为空。<br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/github_io.png" alt="github_io"></p><p>打开博客目录下的<code>_config.yml</code>配置文件，定位到最后的<code>deploy</code>选项，修改如下</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">    type: git</span><br><span class="line">    repository: git@github.com:isLouisHsu/isLouisHsu.github.io.git</span><br><span class="line">    branch: master</span><br></pre></td></tr></table></figure><p>安装插件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>现在就可以将该目录内容推送到<code>Github</code>新建的仓库中了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo d</span><br></pre></td></tr></table></figure><h2 id="使用个人域名">使用个人域名</h2><ol><li>在<code>source</code>目录下新建文件<code>CNAME</code>，输入解析后的个人域名</li><li>在<code>Github</code>主页修改域名</li></ol><h1>备份博客</h1><blockquote><p>没。没什么用<br>我。我不备份了<br>可以新建一个仓库专门保存文件试试</p></blockquote><p>现在博客的源文件仅保存在<code>PC</code>上， 我们对它们进行备份，并将仓库作为博客文件夹</p><ol><li><p>在仓库新建分支<code>hexo</code>，设置为默认分支<br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/create_branch_hexo.png" alt="create_branch_hexo"><br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/change_branch_hexo.png" alt="change_branch_hexo"></p></li><li><p>将仓库克隆至本地</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ git clone https://github.com/isLouisHsu/isLouisHsu.github.io.git</span><br></pre></td></tr></table></figure></li><li><p>克隆文件<br>将之前的Hexo文件夹中的</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scffolds/</span><br><span class="line">source/</span><br><span class="line">themes/</span><br><span class="line">.gitignore</span><br><span class="line">_config.yml</span><br><span class="line">package.json</span><br></pre></td></tr></table></figure><p>复制到克隆下来的仓库文件夹<code>isLouisHsu.github.io</code><br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/backup_blog.png" alt="backup_blog"></p></li><li><p>安装包</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm install</span><br><span class="line">$ npm install hexo --save</span><br><span class="line">$ npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>备份博客使用以下指令</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ git add .</span><br><span class="line">$ git commit -m &quot;backup&quot;</span><br><span class="line">$ git push origin hexo</span><br></pre></td></tr></table></figure></li><li><p>部署博客指令</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo g -d</span><br></pre></td></tr></table></figure></li><li><p><code>单键</code>提交<br>编写脚本<code>commit.bat</code>，双击即可</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m &#x27;backup&#x27;</span><br><span class="line">git push origin hexo</span><br><span class="line">hexo g -d</span><br></pre></td></tr></table></figure></li></ol><h1>使用方法</h1><ul><li><p>目录结构</p><ul><li><code>public</code>  生成的网站文件，发布的站点文件。</li><li><code>source</code>  资源文件夹，用于存放内容。</li><li><code>tag</code>     标签文件夹。</li><li><code>archive</code> 归档文件夹。</li><li><code>category</code>分类文件夹。</li><li><code>downloads/code include code</code>文件夹。</li><li><code>:lang i18n_dir</code> 国际化文件夹。</li><li><code>_config.yml</code> 配置文件</li></ul></li><li><p>指令</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">$ hexo help</span><br><span class="line">Usage: hexo &lt;command&gt;</span><br><span class="line"></span><br><span class="line">Commands:</span><br><span class="line">    clean     Remove generated files and cache.</span><br><span class="line">    config    Get or set configurations.</span><br><span class="line">    deploy    Deploy your website.</span><br><span class="line">    generate  Generate static files.</span><br><span class="line">    help      Get help on a command.</span><br><span class="line">    init      Create a new Hexo folder.</span><br><span class="line">    list      List the information of the site</span><br><span class="line">    migrate   Migrate your site from other system to Hexo.</span><br><span class="line">    new       Create a new post.</span><br><span class="line">    publish   Moves a draft post from _drafts to _posts folder.</span><br><span class="line">    render    Render files with renderer plugins.</span><br><span class="line">    server    Start the server.</span><br><span class="line">    version   Display version information.</span><br><span class="line"></span><br><span class="line">Global Options:</span><br><span class="line">    --config  Specify config file instead of using _config.yml</span><br><span class="line">    --cwd     Specify the CWD</span><br><span class="line">    --debug   Display all verbose messages in the terminal</span><br><span class="line">    --draft   Display draft posts</span><br><span class="line">    --safe    Disable all plugins and scripts</span><br><span class="line">    --silent  Hide output on console</span><br><span class="line"></span><br><span class="line">For more help, you can use &#x27;hexo help [command]&#x27; for the detailed information or you can check the docs: http://hexo.io/docs/</span><br></pre></td></tr></table></figure></li></ul><!-- # 修改主题 --><h1>拓展功能支持</h1><h2 id="插入图片">插入图片</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>修改文件<code>_config.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">post_asset_folder: true</span><br></pre></td></tr></table></figure><p>在执行<code>$ hexo n [layout] &lt;title&gt;</code>时会生成同名文件夹，把图片放在这个文件夹内，在<code>.md</code>文件中插入图片</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![image_name](https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/title/image_name.png)</span><br></pre></td></tr></table></figure><h2 id="搜索功能">搜索功能</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-searchdb --save</span><br><span class="line">$ npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>站点配置文件<code>_config.yml</code>中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure><p>修改主题配置文件<code>/themes/xxx/_config.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">local_search:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure><h2 id="带过滤功能的首页插件">带过滤功能的首页插件</h2><p>在首页只显示指定分类下面的文章列表。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ npm install hexo-generator-index2 --save</span><br><span class="line">$ npm uninstall hexo-generator-index --save</span><br></pre></td></tr></table></figure><p>修改<code>_config.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">index_generator:</span><br><span class="line">  per_page: 10</span><br><span class="line">  order_by: -date</span><br><span class="line">  include:</span><br><span class="line">    - category Web  # 只包含Web分类下的文章</span><br><span class="line">  exclude:</span><br><span class="line">    - tag Hexo      # 不包含标签为Hexo的文章</span><br></pre></td></tr></table></figure><h2 id="数学公式支持">数学公式支持</h2><p><code>hexo</code>默认的渲染引擎是<code>marked</code>，但是<code>marked</code>不支持<code>mathjax</code>。<code>kramed</code>是在<code>marked</code>的基础上进行修改。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ npm uninstall hexo-math --save              # 停止使用 hexo-math</span><br><span class="line">$ npm install hexo-renderer-mathjax --save    # 安装hexo-renderer-mathjax包：</span><br><span class="line">$ npm uninstall hexo-renderer-marked --save   # 卸载原来的渲染引擎</span><br><span class="line">$ npm install hexo-renderer-kramed --save     # 安装新的渲染引擎</span><br></pre></td></tr></table></figure><p>修改<code>/node_modules/kramed/lib/rules/inline.js</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">11| escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/,</span><br><span class="line">...</span><br><span class="line">20| em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br><span class="line"></span><br><span class="line">-&gt;</span><br><span class="line"></span><br><span class="line">11| escape: /^\\([`*\[\]()#$+\-.!_&gt;])/,</span><br><span class="line">...</span><br><span class="line">20| em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/,</span><br></pre></td></tr></table></figure><p>修改<code>/node_modules/hexo-renderer-kramed/lib/renderer.js</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">64| // Change inline math rule</span><br><span class="line">65| function formatText(text) &#123;</span><br><span class="line">66|   // Fit kramed&#x27;s rule: $$ + \1 + $$</span><br><span class="line">67|   return text.replace(/`\$(.*?)\$`/g, &#x27;$$$$$1$$$$&#x27;);</span><br><span class="line">68| &#125;</span><br><span class="line"></span><br><span class="line">-&gt;</span><br><span class="line"></span><br><span class="line">64| // Change inline math rule</span><br><span class="line">65| function formatText(text) &#123;</span><br><span class="line">66|   // Fit kramed&#x27;s rule: $$ + \1 + $$</span><br><span class="line">67|   // return text.replace(/`\$(.*?)\$`/g, &#x27;$$$$$1$$$$&#x27;);</span><br><span class="line">68|   return text;</span><br><span class="line">69| &#125;</span><br></pre></td></tr></table></figure><p>在主题中开启<code>mathjax</code>开关，例如<code>next</code>主题中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># MathJax Support</span><br><span class="line">mathjax:</span><br><span class="line">  enable: true</span><br><span class="line">  per_page: true</span><br></pre></td></tr></table></figure><p>在文章中</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: title.md</span><br><span class="line">date: 2019-01-04 12:47:37</span><br><span class="line">categories:</span><br><span class="line">tags:</span><br><span class="line">mathjax: true</span><br><span class="line">top:</span><br><span class="line">---</span><br></pre></td></tr></table></figure><p>测试</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.16em" columnalign="center center" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>12</mn></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>a</mi><mn>22</mn></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">A = \left[\begin{matrix}    a_{11} &amp; a_{12} \\    a_{21} &amp; a_{22}\end{matrix}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6833em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:2.4em;vertical-align:-0.95em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">11</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">21</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">12</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.41em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3011em;"><span style="top:-2.55em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">22</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.95em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">]</span></span></span></span></span></span></span></p><h2 id="背景图片更换">背景图片更换</h2><p>在主题配置文件夹中，如<code>next</code>主题，打开文件<code>hexo-theme-next/source/css/_custom/custom.styl</code>，修改为</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">// Custom styles.</span><br><span class="line"></span><br><span class="line">// 添加背景图片</span><br><span class="line">body &#123;</span><br><span class="line">  background: url(/images/background.jpg);</span><br><span class="line">  background-size: cover;</span><br><span class="line">  background-repeat: no-repeat;</span><br><span class="line">  background-attachment: fixed;</span><br><span class="line">  background-position: 50% 50%;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改主体透明度</span><br><span class="line">.main-inner &#123;</span><br><span class="line">  background: #fff;</span><br><span class="line">  opacity: 0.95;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 修改菜单栏透明度</span><br><span class="line">.header-inner &#123;</span><br><span class="line">  opacity: 0.95;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="背景音乐">背景音乐</h2><p>首先生成外链</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/bgm1.jpg" alt="bgm1"></p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/bgm2.jpg" alt="bgm2"></p><p>添加到合适位置，如<code>Links</code>一栏后</p><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/bgm3.jpg" alt="bgm3"></p><h2 id="鼠标特效">鼠标特效</h2><ol><li><p><a href="https://github.com/hustcc/canvas-nest.js">hustcc/canvas-nest.js</a></p></li><li><p>点击文本特效<br>新建<code>hexo-theme-next/source/js/click_show_text.js</code></p></li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a_idx = <span class="number">0</span>;</span><br><span class="line">jQuery(<span class="built_in">document</span>).ready(<span class="function"><span class="keyword">function</span>(<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&quot;body&quot;</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a = <span class="keyword">new</span> <span class="built_in">Array</span></span><br><span class="line">        (<span class="string">&quot;for&quot;</span>, <span class="string">&quot;while&quot;</span>, <span class="string">&quot;catch&quot;</span>, <span class="string">&quot;except&quot;</span>, <span class="string">&quot;if&quot;</span>, <span class="string">&quot;range&quot;</span>, </span><br><span class="line">        <span class="string">&quot;class&quot;</span>, <span class="string">&quot;min&quot;</span>, <span class="string">&quot;max&quot;</span>, <span class="string">&quot;sort&quot;</span>, <span class="string">&quot;map&quot;</span>, <span class="string">&quot;filter&quot;</span>, </span><br><span class="line">        <span class="string">&quot;lambda&quot;</span>, <span class="string">&quot;switch&quot;</span>, <span class="string">&quot;case&quot;</span>, <span class="string">&quot;iter&quot;</span>, <span class="string">&quot;next&quot;</span>, <span class="string">&quot;enum&quot;</span>, <span class="string">&quot;struct&quot;</span>,  </span><br><span class="line">        <span class="string">&quot;void&quot;</span>, <span class="string">&quot;int&quot;</span>, <span class="string">&quot;float&quot;</span>, <span class="string">&quot;double&quot;</span>, <span class="string">&quot;char&quot;</span>, <span class="string">&quot;signed&quot;</span>, <span class="string">&quot;unsigned&quot;</span>);</span><br><span class="line">        <span class="keyword">var</span> $i = $(<span class="string">&quot;&lt;span/&gt;&quot;</span>).text(a[a_idx]);</span><br><span class="line">        a_idx = (a_idx + <span class="number">3</span>) % a.length;</span><br><span class="line">        <span class="keyword">var</span> x = e.pageX, </span><br><span class="line">        y = e.pageY;</span><br><span class="line">        $i.css(&#123;</span><br><span class="line">            <span class="string">&quot;z-index&quot;</span>: <span class="number">5</span>,</span><br><span class="line">            <span class="string">&quot;top&quot;</span>: y - <span class="number">20</span>,</span><br><span class="line">            <span class="string">&quot;left&quot;</span>: x,</span><br><span class="line">            <span class="string">&quot;position&quot;</span>: <span class="string">&quot;absolute&quot;</span>,</span><br><span class="line">            <span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>,</span><br><span class="line">            <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#333333&quot;</span></span><br><span class="line">        &#125;);</span><br><span class="line">        $(<span class="string">&quot;body&quot;</span>).append($i);</span><br><span class="line">        $i.animate(&#123;</span><br><span class="line">            <span class="string">&quot;top&quot;</span>: y - <span class="number">180</span>,</span><br><span class="line">            <span class="string">&quot;opacity&quot;</span>: <span class="number">0</span></span><br><span class="line">        &#125;,</span><br><span class="line"><span class="number">3000</span>,</span><br><span class="line"><span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $i.remove();</span><br><span class="line">&#125;);</span><br><span class="line">    &#125;);</span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="string">&#x27;delay()&#x27;</span>, <span class="number">2000</span>);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">delay</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    $(<span class="string">&quot;.buryit&quot;</span>).removeAttr(<span class="string">&quot;onclick&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在文件<code>hexo-theme-next/layout/_layout.swig</code>中添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">...</span><br><span class="line">...</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/click_show_text.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h2 id="看板娘">看板娘</h2><p><a href="https://github.com/xiazeyu/live2d-widget-models">xiazeyu/live2d-widget-models</a>，预览效果见<a href="https://huaji8.top/post/live2d-plugin-2.0/">作者博客</a>。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install --save hexo-helper-live2d</span><br><span class="line">npm install live2d-widget-model-hijiki</span><br></pre></td></tr></table></figure><p>站点配置文件添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">scriptFrom:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">model:</span> </span><br><span class="line"><span class="attr">use:</span> <span class="string">live2d-widget-model-hijiki</span> <span class="comment">#模型选择</span></span><br><span class="line"><span class="attr">display:</span> </span><br><span class="line"><span class="attr">position:</span> <span class="string">right</span>  <span class="comment">#模型位置</span></span><br><span class="line"><span class="attr">width:</span> <span class="number">150</span>       <span class="comment">#模型宽度</span></span><br><span class="line"><span class="attr">height:</span> <span class="number">300</span>      <span class="comment">#模型高度</span></span><br><span class="line"><span class="attr">mobile:</span> </span><br><span class="line"><span class="attr">show:</span> <span class="literal">false</span>      <span class="comment">#是否在手机端显示</span></span><br></pre></td></tr></table></figure><h2 id="人体时钟">人体时钟</h2><p>新建<code>hexo-theme-next/source/js/honehone_clock_tr.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment">初期設定</span></span><br><span class="line"><span class="comment">******************************************************************************/</span></span><br><span class="line"><span class="keyword">var</span> swfUrl = <span class="string">&quot;http://chabudai.sakura.ne.jp/blogparts/honehoneclock/honehone_clock_tr.swf&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> swfTitle = <span class="string">&quot;honehoneclock&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 実行</span></span><br><span class="line">LoadBlogParts();</span><br><span class="line"></span><br><span class="line"><span class="comment">/******************************************************************************</span></span><br><span class="line"><span class="comment">入力なし</span></span><br><span class="line"><span class="comment">出力document.writeによるHTML出力</span></span><br><span class="line"><span class="comment">******************************************************************************/</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">LoadBlogParts</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="keyword">var</span> sUrl = swfUrl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> sHtml = <span class="string">&quot;&quot;</span>;</span><br><span class="line">sHtml += <span class="string">&#x27;&lt;object classid=&quot;clsid:d27cdb6e-ae6d-11cf-96b8-444553540000&quot; codebase=&quot;http://fpdownload.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=8,0,0,0&quot; width=&quot;160&quot; height=&quot;70&quot; id=&quot;&#x27;</span> + swfTitle + <span class="string">&#x27;&quot; align=&quot;middle&quot;&gt;&#x27;</span>;</span><br><span class="line">sHtml += <span class="string">&#x27;&lt;param name=&quot;allowScriptAccess&quot; value=&quot;always&quot; /&gt;&#x27;</span>;</span><br><span class="line">sHtml += <span class="string">&#x27;&lt;param name=&quot;movie&quot; value=&quot;&#x27;</span> + sUrl + <span class="string">&#x27;&quot; /&gt;&#x27;</span>;</span><br><span class="line">sHtml += <span class="string">&#x27;&lt;param name=&quot;quality&quot; value=&quot;high&quot; /&gt;&#x27;</span>;</span><br><span class="line">sHtml += <span class="string">&#x27;&lt;param name=&quot;bgcolor&quot; value=&quot;#ffffff&quot; /&gt;&#x27;</span>;</span><br><span class="line">sHtml += <span class="string">&#x27;&lt;param name=&quot;wmode&quot; value=&quot;transparent&quot; /&gt;&#x27;</span>;</span><br><span class="line">sHtml += <span class="string">&#x27;&lt;embed wmode=&quot;transparent&quot; src=&quot;&#x27;</span> + sUrl + <span class="string">&#x27;&quot; quality=&quot;high&quot; bgcolor=&quot;#ffffff&quot; width=&quot;160&quot; height=&quot;70&quot; name=&quot;&#x27;</span> + swfTitle + <span class="string">&#x27;&quot; align=&quot;middle&quot; allowScriptAccess=&quot;always&quot; type=&quot;application/x-shockwave-flash&quot; pluginspage=&quot;http://www.macromedia.com/go/getflashplayer&quot; /&gt;&#x27;</span>;</span><br><span class="line">sHtml += <span class="string">&#x27;&lt;/object&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(sHtml);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script charset=&quot;Shift_JIS&quot; src=&quot;/js/honehone_clock_tr.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="代码雨">代码雨</h2><p>新建<code>hexo-theme-next/source/js/digital_rain.js</code></p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">//获取画布对象</span></span><br><span class="line">    <span class="keyword">var</span> canvas = <span class="built_in">document</span>.getElementById(<span class="string">&quot;canvas&quot;</span>);</span><br><span class="line">    <span class="comment">//获取画布的上下文</span></span><br><span class="line">    <span class="keyword">var</span> context =canvas.getContext(<span class="string">&quot;2d&quot;</span>);</span><br><span class="line">    <span class="keyword">var</span> s = <span class="built_in">window</span>.screen;</span><br><span class="line">    <span class="keyword">var</span> W = canvas.width = s.width;</span><br><span class="line">    <span class="keyword">var</span> H = canvas.height;</span><br><span class="line">    <span class="comment">//获取浏览器屏幕的宽度和高度</span></span><br><span class="line">    <span class="comment">//var W = window.innerWidth;</span></span><br><span class="line">    <span class="comment">//var H = window.innerHeight;</span></span><br><span class="line">    <span class="comment">//设置canvas的宽度和高度</span></span><br><span class="line">    canvas.width = W;</span><br><span class="line">    canvas.height = H;</span><br><span class="line">    <span class="comment">//每个文字的字体大小</span></span><br><span class="line">    <span class="keyword">var</span> fontSize = <span class="number">12</span>;</span><br><span class="line">    <span class="comment">//计算列</span></span><br><span class="line">    <span class="keyword">var</span> colunms = <span class="built_in">Math</span>.floor(W /fontSize);</span><br><span class="line">    <span class="comment">//记录每列文字的y轴坐标</span></span><br><span class="line">    <span class="keyword">var</span> drops = [];</span><br><span class="line">    <span class="comment">//给每一个文字初始化一个起始点的位置</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;colunms;i++)&#123;</span><br><span class="line">        drops.push(<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//运动的文字</span></span><br><span class="line">    <span class="keyword">var</span> str =<span class="string">&quot;WELCOME TO WWW.ITRHX.COM&quot;</span>;</span><br><span class="line">    <span class="comment">//4:fillText(str,x,y);原理就是去更改y的坐标位置</span></span><br><span class="line">    <span class="comment">//绘画的函数</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        context.fillStyle = <span class="string">&quot;rgba(238,238,238,.08)&quot;</span>;<span class="comment">//遮盖层</span></span><br><span class="line">        context.fillRect(<span class="number">0</span>,<span class="number">0</span>,W,H);</span><br><span class="line">        <span class="comment">//给字体设置样式</span></span><br><span class="line">        context.font = <span class="string">&quot;600 &quot;</span>+fontSize+<span class="string">&quot;px  Georgia&quot;</span>;</span><br><span class="line">        <span class="comment">//给字体添加颜色</span></span><br><span class="line">        context.fillStyle = [<span class="string">&quot;#33B5E5&quot;</span>, <span class="string">&quot;#0099CC&quot;</span>, <span class="string">&quot;#AA66CC&quot;</span>, <span class="string">&quot;#9933CC&quot;</span>, <span class="string">&quot;#99CC00&quot;</span>, <span class="string">&quot;#669900&quot;</span>, <span class="string">&quot;#FFBB33&quot;</span>, <span class="string">&quot;#FF8800&quot;</span>, <span class="string">&quot;#FF4444&quot;</span>, <span class="string">&quot;#CC0000&quot;</span>][<span class="built_in">parseInt</span>(<span class="built_in">Math</span>.random() * <span class="number">10</span>)];<span class="comment">//randColor();可以rgb,hsl, 标准色，十六进制颜色</span></span><br><span class="line">        <span class="comment">//写入画布中</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;colunms;i++)&#123;</span><br><span class="line">            <span class="keyword">var</span> index = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * str.length);</span><br><span class="line">            <span class="keyword">var</span> x = i*fontSize;</span><br><span class="line">            <span class="keyword">var</span> y = drops[i] *fontSize;</span><br><span class="line">            context.fillText(str[index],x,y);</span><br><span class="line">            <span class="comment">//如果要改变时间，肯定就是改变每次他的起点</span></span><br><span class="line">            <span class="keyword">if</span>(y &gt;= canvas.height &amp;&amp; <span class="built_in">Math</span>.random() &gt; <span class="number">0.99</span>)&#123;</span><br><span class="line">                drops[i] = <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            drops[i]++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">randColor</span>(<span class="params"></span>)</span>&#123;<span class="comment">//随机颜色</span></span><br><span class="line">        <span class="keyword">var</span> r = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">        <span class="keyword">var</span> g = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">        <span class="keyword">var</span> b = <span class="built_in">Math</span>.floor(<span class="built_in">Math</span>.random() * <span class="number">256</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;rgb(&quot;</span>+r+<span class="string">&quot;,&quot;</span>+g+<span class="string">&quot;,&quot;</span>+b+<span class="string">&quot;)&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    draw();</span><br><span class="line">    <span class="built_in">setInterval</span>(draw,<span class="number">35</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p><code>hexo-theme-next/source/css/main.styl</code>添加</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">canvas</span> &#123;</span><br><span class="line">  <span class="attribute">position</span>: fixed;</span><br><span class="line">  <span class="attribute">right</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line">  <span class="attribute">min-width</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">min-height</span>: <span class="number">100%</span>;</span><br><span class="line">  <span class="attribute">height</span>: auto;</span><br><span class="line">  <span class="attribute">width</span>: auto;</span><br><span class="line">  <span class="attribute">z-index</span>: -<span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>hexo-theme-next/layout/_layout.swig</code>添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas id=&quot;canvas&quot; width=&quot;1440&quot; height=&quot;900&quot; &gt;&lt;/canvas&gt;</span><br><span class="line">&lt;script type=&quot;text/javascript&quot; src=&quot;/js/DigitalRain.js&quot;&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h2 id="留言板">留言板</h2><p>用<a href="https://www.livere.com/">来比力</a>作为后台系统。</p><p>打开主题配置文件<code>hexo-theme-next/_config.yml</code>，修改</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Support for LiveRe comments system.</span></span><br><span class="line"><span class="comment"># You can get your uid from https://livere.com/insight/myCode (General web site)</span></span><br><span class="line"><span class="attr">livere_uid:</span> <span class="string">your</span> <span class="string">uid</span></span><br></pre></td></tr></table></figure><p>在<code>hexo-theme-next/layout/_scripts/third-party/comments/</code> 目录中添加<code>livere.swig</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if not (theme.duoshuo and theme.duoshuo.shortname) and not theme.duoshuo_shortname and not theme.disqus_shortname and not theme.hypercomments_id and not theme.gentie_productKey %&#125;</span><br><span class="line"></span><br><span class="line">  &#123;% if theme.livere_uid %&#125;</span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">    (function(d, s) &#123;</span><br><span class="line">        var j, e = d.getElementsByTagName(s)[0];</span><br><span class="line"></span><br><span class="line">        if (typeof LivereTower === &#x27;function&#x27;) &#123; return; &#125;</span><br><span class="line"></span><br><span class="line">        j = d.createElement(s);</span><br><span class="line">        j.src = &#x27;https://cdn-city.livere.com/js/embed.dist.js&#x27;;</span><br><span class="line">        j.async = true;</span><br><span class="line"></span><br><span class="line">        e.parentNode.insertBefore(j, e);</span><br><span class="line">    &#125;)(document, &#x27;script&#x27;);</span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在<code>hexo-theme-next/layout/_scripts/third-party/comments.swig</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &#x27;./comments/livere.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure><p><strong>评论无法保留？？？换成<code>Gitment</code>。</strong></p><p>安装模块</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save gitment</span><br></pre></td></tr></table></figure><p>在<a href="https://github.com/settings/applications/new">New OAuth App</a>为博客应用一个密钥<br><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/Github-Hexo%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/new_oauth_app.png" alt="new_oauth_app"></p><p>定位到主题配置文件，填写``enable<code>，</code>github_user<code>，</code>github_repo<code>，</code>client_id<code>，</code>client_secret`</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Gitment</span></span><br><span class="line"><span class="comment"># Introduction: https://imsun.net/posts/gitment-introduction/</span></span><br><span class="line"><span class="attr">gitment:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">  <span class="attr">mint:</span> <span class="literal">true</span> <span class="comment"># RECOMMEND, A mint on Gitment, to support count, language and proxy_gateway</span></span><br><span class="line">  <span class="attr">count:</span> <span class="literal">true</span> <span class="comment"># Show comments count in post meta area</span></span><br><span class="line">  <span class="attr">lazy:</span> <span class="literal">false</span> <span class="comment"># Comments lazy loading with a button</span></span><br><span class="line">  <span class="attr">cleanly:</span> <span class="literal">false</span> <span class="comment"># Hide &#x27;Powered by ...&#x27; on footer, and more</span></span><br><span class="line">  <span class="attr">language:</span> <span class="comment"># Force language, or auto switch by theme</span></span><br><span class="line">  <span class="attr">github_user:</span> <span class="comment"># MUST HAVE, Your Github Username</span></span><br><span class="line">  <span class="attr">github_repo:</span> <span class="comment"># MUST HAVE, The name of the repo you use to store Gitment comments</span></span><br><span class="line">  <span class="attr">client_id:</span> <span class="comment"># MUST HAVE, Github client id for the Gitment</span></span><br><span class="line">  <span class="attr">client_secret:</span> <span class="comment"># EITHER this or proxy_gateway, Github access secret token for the Gitment</span></span><br><span class="line">  <span class="attr">proxy_gateway:</span> <span class="comment"># Address of api proxy, See: https://github.com/aimingoo/intersect</span></span><br><span class="line">  <span class="attr">redirect_protocol:</span> <span class="comment"># Protocol of redirect_uri with force_redirect_protocol when mint enabled</span></span><br></pre></td></tr></table></figure><p>如果遇到登陆不上的问题，转到<a href="https://gh-oauth.imsun.net/">gh-oauth.imsun.net</a>页面，点高级-&gt;继续访问就可以了。</p><p><strong>服务器问题不能解决，换成<code>Gitalk</code>。</strong></p><p>定位到路径 themes/next/layout/_third-party/comments下面，创建一个叫做 gitalk.swig的文件，写入如下内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if page.comments &amp;&amp; theme.gitalk.enable %&#125;</span><br><span class="line">  &lt;link rel=&quot;stylesheet&quot; href=&quot;https://unpkg.com/gitalk/dist/gitalk.css&quot;&gt;</span><br><span class="line">  &lt;script src=&quot;https://unpkg.com/gitalk/dist/gitalk.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">  &lt;script src=&quot;https://cdn.bootcss.com/blueimp-md5/2.10.0/js/md5.min.js&quot;&gt;&lt;/script&gt;</span><br><span class="line">   &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line">        var gitalk = new Gitalk(&#123;</span><br><span class="line">          clientID: &#x27;&#123;&#123; theme.gitalk.ClientID &#125;&#125;&#x27;,</span><br><span class="line">          clientSecret: &#x27;&#123;&#123; theme.gitalk.ClientSecret &#125;&#125;&#x27;,</span><br><span class="line">          repo: &#x27;&#123;&#123; theme.gitalk.repo &#125;&#125;&#x27;,</span><br><span class="line">          owner: &#x27;&#123;&#123; theme.gitalk.githubID &#125;&#125;&#x27;,</span><br><span class="line">          admin: [&#x27;&#123;&#123; theme.gitalk.adminUser &#125;&#125;&#x27;],</span><br><span class="line">          id: md5(window.location.pathname),</span><br><span class="line">          distractionFreeMode: &#x27;&#123;&#123; theme.gitalk.distractionFreeMode &#125;&#125;&#x27;</span><br><span class="line">        &#125;)</span><br><span class="line">        gitalk.render(&#x27;gitalk-container&#x27;)</span><br><span class="line">       &lt;/script&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在 上面的同级目录下的 index.swig 里面加入：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% include &#x27;gitalk.swig&#x27; %&#125;</span><br></pre></td></tr></table></figure><p>在使能化之前，我们还需要修改或者说是美化一下gitalk的默认样式，如果你不进行这一步也没有影响，可能结果会丑一点。<br>定位到： themes/next/source/css/_common/components/third-party. 然后你需要创建一个 gitalk.styl 文件。</p><p>这个文件里面写入：</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.gt-header</span> <span class="selector-tag">a</span>, <span class="selector-class">.gt-comments</span> <span class="selector-tag">a</span>, <span class="selector-class">.gt-popup</span> <span class="selector-tag">a</span></span><br><span class="line">  <span class="attribute">border-bottom</span>: none;</span><br><span class="line"><span class="selector-class">.gt-container</span> <span class="selector-class">.gt-popup</span> <span class="selector-class">.gt-action</span><span class="selector-class">.is--active</span>:before</span><br><span class="line">  <span class="attribute">top</span>: <span class="number">0.7em</span>;</span><br></pre></td></tr></table></figure><p>然后同样的，在 third-party.styl里面导入一下：</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@import</span> <span class="string">&quot;gitalk&quot;</span>;</span><br></pre></td></tr></table></figure><p>在 layout/_partials/comments.swig 里面加入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% elseif theme.gitalk.enable %&#125;</span><br><span class="line">  &lt;div id=&quot;gitalk-container&quot;&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>在主题配置文件<code>_config.yml</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">gitalk:</span><br><span class="line">  enable: true</span><br><span class="line">  githubID:   # MUST HAVE, Your Github Username    </span><br><span class="line">  repo:       # MUST HAVE, The name of the repo you use to store Gitment comments</span><br><span class="line">  ClientID:   # MUST HAVE, Github client id for the Gitment</span><br><span class="line">  ClientSecret: # EITHER this or proxy_gateway, Github access secret token for the Gitment</span><br><span class="line">  adminUser: isLouisHsu</span><br><span class="line">  distractionFreeMode: true</span><br></pre></td></tr></table></figure><h1>Reference</h1><blockquote><p>基于hexo+github搭建一个独立博客 - 牧云云 - 博客园 <a href="https://www.cnblogs.com/MuYunyun/p/5927491.html">https://www.cnblogs.com/MuYunyun/p/5927491.html</a><br>hexo+github pages轻松搭博客(1) | ex2tron’s Blog <a href="http://ex2tron.wang/hexo-blog-with-github-pages-1/">http://ex2tron.wang/hexo-blog-with-github-pages-1/</a><br>hexo下LaTeX无法显示的解决方案 - crazy_scott的博客 - CSDN博客 <a href="https://blog.csdn.net/crazy_scott/article/details/79293576">https://blog.csdn.net/crazy_scott/article/details/79293576</a><br>在Hexo中渲染MathJax数学公式 - 简书 <a href="https://www.jianshu.com/p/7ab21c7f0674">https://www.jianshu.com/p/7ab21c7f0674</a><br>怎么去备份你的Hexo博客 - 简书 <a href="https://www.jianshu.com/p/baab04284923">https://www.jianshu.com/p/baab04284923</a><br>Hexo中添加本地图片 - 蜕变C - 博客园 <a href="https://www.cnblogs.com/codehome/p/8428738.html?utm_source=debugrun&amp;utm_medium=referral">https://www.cnblogs.com/codehome/p/8428738.html?utm_source=debugrun&amp;utm_medium=referral</a><br>hexo 搜索功能 - 阿甘的博客 - CSDN博客 <a href="https://blog.csdn.net/ganzhilin520/article/details/79047983">https://blog.csdn.net/ganzhilin520/article/details/79047983</a><br>为 Hexo 博客主题 NexT 添加 LiveRe 评论支持 <a href="https://blog.smoker.cc/web/add-comments-livere-for-hexo-theme-next.html">https://blog.smoker.cc/web/add-comments-livere-for-hexo-theme-next.html</a><br>终于！！！记录如何在hexo next主题下配置gitalk评论系统 <a href="https://jinfagang.github.io/2018/10/07/%E7%BB%88%E4%BA%8E%EF%BC%81%EF%BC%81%EF%BC%81%E8%AE%B0%E5%BD%95%E5%A6%82%E4%BD%95%E5%9C%A8hexo-next%E4%B8%BB%E9%A2%98%E4%B8%8B%E9%85%8D%E7%BD%AEgitalk%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F/">https://jinfagang.github.io/2018/10/07/终于！！！记录如何在hexo-next主题下配置gitalk评论系统/</a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 其他 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>二次入坑raspberry-pi</title>
      <link href="/2018/10/29/%E4%BA%8C%E6%AC%A1%E5%85%A5%E5%9D%91raspberry-pi.html"/>
      <url>/2018/10/29/%E4%BA%8C%E6%AC%A1%E5%85%A5%E5%9D%91raspberry-pi.html</url>
      
        <content type="html"><![CDATA[<h1>前言</h1><p>距上一次搭建树莓派平台已经两年了，保存的镜像出了问题，重新搭建一下。</p><h1>系统</h1><h2 id="下载">下载</h2><p>从官网下载树莓派系统镜像，有以下几种可选</p><blockquote><p><a href="https://www.raspberrypi.org/">Raspberry Pi — Teach, Learn, and Make with Raspberry Pi </a></p></blockquote><ol><li>Raspbian &amp; Raspbian Lite，基于Debian</li><li>Noobs &amp; Noobs Lite</li><li>Ubuntu MATE</li><li>Snappy Ubuntu Core</li><li>Windows 10 IOT</li></ol><p><s>其余不太了解，之前安装的是Raspbian，对于Debian各种不适，换上界面优雅的Ubuntu Mate玩一下</s><br>老老实实玩Raspbian，笑脸:-)</p><h2 id="安装">安装</h2><p>比较简单，准备micro-SD卡，用Win32 Disk Imager烧写镜像</p><blockquote><p><a href="https://sourceforge.net/projects/win32diskimager/">Win32 Disk Imager download | SourceForge.net</a></p></blockquote><blockquote><p><img src="https://cdn.jsdelivr.net/gh/isLouisHsu/resource@master/blog_resource/_posts/%E4%BA%8C%E6%AC%A1%E5%85%A5%E5%9D%91raspberry-pi/Win32DiskImager.jpg" alt="Win32DiskImager"></p></blockquote><p>安装完软件后可点击<code>Read</code>备份自己的镜像。</p><p>注意第二次开机前需要配置<code>config.txt</code>文件，否则<code>hdmi</code>无法显示</p><blockquote><p><a href="http://shumeipai.nxez.com/2015/11/23/raspberry-pi-configuration-file-config-txt-nstructions.html">树莓派配置文档 config.txt 说明 | 树莓派实验室</a></p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">disable_overscan=1 </span><br><span class="line">hdmi_force_hotplug=1</span><br><span class="line">hdmi_group=2    # DMT</span><br><span class="line">hdmi_mode=32    # 1280x960</span><br><span class="line">hdmi_drive=2</span><br><span class="line">config_hdmi_boost=4</span><br></pre></td></tr></table></figure><h2 id="修改交换分区">修改交换分区</h2><h3 id="Ubuntu-Mate">Ubuntu Mate</h3><p>查看交换分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ free -m</span><br></pre></td></tr></table></figure><p>未设置时如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">total     used     free   shared  buffers   cached</span><br><span class="line">Mem:           435       56      379        0        3       16</span><br><span class="line">-/+ buffers/cache:       35      399</span><br><span class="line">Swap:            0        0        0</span><br></pre></td></tr></table></figure><p>创建和挂载</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"># 获取权限</span><br><span class="line">$ sudo -i</span><br><span class="line"></span><br><span class="line"># 创建目录</span><br><span class="line">$ mkdir /swap</span><br><span class="line">$ cd /swap</span><br><span class="line"></span><br><span class="line"># 指定一个大小为1G的名为“swap”的交换文件</span><br><span class="line">$ dd if=/dev/zero of=swap bs=1M count=1k</span><br><span class="line"># 创建交换文件</span><br><span class="line">$ mkswap swap</span><br><span class="line"># 挂载交换分区</span><br><span class="line">$ swapon swap</span><br><span class="line"></span><br><span class="line"># 卸载交换分区</span><br><span class="line"># $ swapoff swap</span><br></pre></td></tr></table></figure><p>查看交换分区</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ free -m</span><br></pre></td></tr></table></figure><p>未设置时如下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">total     used     free   shared  buffers   cached</span><br><span class="line">Mem:           435       56      379        0        3       16</span><br><span class="line">-/+ buffers/cache:       35      399</span><br><span class="line">Swap:         1023        0     1023</span><br></pre></td></tr></table></figure><h3 id="Raspbian">Raspbian</h3><p>We will change the configuration in the file <code>/etc/dphys-swapfile</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nano /etc/dphys-swapfile</span><br></pre></td></tr></table></figure><p>The default value in Raspbian is:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONF_SWAPSIZE=100</span><br></pre></td></tr></table></figure><p>We will need to change this to:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">CONF_SWAPSIZE=1024</span><br></pre></td></tr></table></figure><p>Then you will need to stop and start the service that manages the swapfile own Rasbian:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo /etc/init.d/dphys-swapfile stop</span><br><span class="line">$ sudo /etc/init.d/dphys-swapfile start</span><br></pre></td></tr></table></figure><p>You can then verify the amount of memory + swap by issuing the following command:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ free -m</span><br></pre></td></tr></table></figure><p>The output should look like:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">total     used     free   shared  buffers   cached</span><br><span class="line">Mem:           435       56      379        0        3       16</span><br><span class="line">-/+ buffers/cache:       35      399</span><br><span class="line">Swap:         1023        0     1023</span><br></pre></td></tr></table></figure><h1>软件</h1><h2 id="安装指令">安装指令</h2><ul><li><p><code>apt-get</code></p><ul><li>安装软件<br><code>apt-get install softname1 softname2 softname3 ...</code></li><li>卸载软件<br><code>apt-get remove softname1 softname2 softname3 ...</code></li><li>卸载并清除配置<br><code>apt-get remove --purge softname1</code></li><li>更新软件信息数据库<br><code>apt-get update</code></li><li>进行系统升级<br><code>apt-get upgrade</code></li><li>搜索软件包<br><code>apt-cache search softname1 softname2 softname3 ...</code></li><li>修正（依赖关系）安装：<br><code>apt-get -f insta</code></li></ul></li><li><p><code>dpkg</code></p><ul><li><p>安装<code>.deb</code>软件包<br><code>dpkg -i xxx.deb</code></p></li><li><p>删除软件包<br><code>dpkg -r xxx.deb</code></p></li><li><p>连同配置文件一起删除<br><code>dpkg -r --purge xxx.deb</code></p></li><li><p>查看软件包信息<br><code>dpkg -info xxx.deb</code></p></li><li><p>查看文件拷贝详情<br><code>dpkg -L xxx.deb</code></p></li><li><p>查看系统中已安装软件包信息<br><code>dpkg -l</code></p></li><li><p>重新配置软件包<br><code>dpkg-reconfigure xx</code></p></li><li><p>卸载软件包及其配置文件，但无法解决依赖关系！<br><code>sudo dpkg -p package_name</code></p></li><li><p>卸载软件包及其配置文件与依赖关系包<br><code>sudo aptitude purge pkgname</code></p></li><li><p>清除所有已删除包的残馀配置文件<br><code>dpkg -l |grep ^rc|awk '&#123;print $2&#125;' |sudo xargs dpkg -P</code></p></li></ul></li></ul><h2 id="软件源">软件源</h2><ol><li><p>备份原始文件</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo cp /etc/apt/sources.list /etc/apt/sources.list.backup</span><br></pre></td></tr></table></figure></li><li><p>修改文件并添加国内源</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vi /etc/apt/sources.list</span><br></pre></td></tr></table></figure></li><li><p>注释元文件内的源并添加如下地址</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#Mirror.lupaworld.com 源更新服务器（浙江省杭州市双线服务器，网通同电信都可以用，亚洲地区官方更新服务器）：</span><br><span class="line">deb http://mirror.lupaworld.com/ubuntu gutsy main restricted universe multiverse</span><br><span class="line">deb http://mirror.lupaworld.com/ubuntu gutsy-security main restricted universe multiverse</span><br><span class="line">deb http://mirror.lupaworld.com/ubuntu gutsy-updates main restricted universe multiverse</span><br><span class="line">deb http://mirror.lupaworld.com/ubuntu gutsy-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirror.lupaworld.com/ubuntu gutsy main restricted universe multiverse</span><br><span class="line">deb-src http://mirror.lupaworld.com/ubuntu gutsy-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirror.lupaworld.com/ubuntu gutsy-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirror.lupaworld.com/ubuntu gutsy-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#Ubuntu 官方源 </span><br><span class="line">deb http://archive.ubuntu.com/ubuntu/ gutsy main restricted universe multiverse</span><br><span class="line">deb http://archive.ubuntu.com/ubuntu/ gutsy-security main restricted universe multiverse</span><br><span class="line">deb http://archive.ubuntu.com/ubuntu/ gutsy-updates main restricted universe multiverse</span><br><span class="line">deb http://archive.ubuntu.com/ubuntu/ gutsy-proposed main restricted universe multiverse</span><br><span class="line">deb http://archive.ubuntu.com/ubuntu/ gutsy-backports main restricted universe multiverse</span><br><span class="line">deb-src http://archive.ubuntu.com/ubuntu/ gutsy main restricted universe multiverse</span><br><span class="line">deb-src http://archive.ubuntu.com/ubuntu/ gutsy-security main restricted universe multiverse</span><br><span class="line">deb-src http://archive.ubuntu.com/ubuntu/ gutsy-updates main restricted universe multiverse</span><br><span class="line">deb-src http://archive.ubuntu.com/ubuntu/ gutsy-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://archive.ubuntu.com/ubuntu/ gutsy-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>或者</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#阿里云</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">#网易163</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty-security main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty-updates main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty-proposed main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.163.com/ubuntu/ trusty-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></li><li><p>放置非官方源的包不完整，可在为不添加官方源</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">deb http://archive.ubuntu.org.cn/ubuntu-cn/ feisty main restricted universe multiverse</span><br></pre></td></tr></table></figure></li><li><p>更新源</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br></pre></td></tr></table></figure></li><li><p>更新软件</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get dist-upgrade</span><br></pre></td></tr></table></figure></li><li><p>常见的修复安装命令</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get -f install</span><br></pre></td></tr></table></figure></li></ol><h2 id="Python">Python</h2><p>主要是<code>Python</code>和相关依赖包的安装，使用以下指令可导出已安装的依赖包</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip freeze &gt; requirements.txt</span><br></pre></td></tr></table></figure><p>并使用指令安装到树莓派</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip install -r requirements.txt</span><br></pre></td></tr></table></figure><p>注意<code>pip</code>更新</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m pip install --upgrade pip</span><br></pre></td></tr></table></figure><p>最新版本会报错</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ImportError: cannot import name main</span><br></pre></td></tr></table></figure><p>修改文件<code>/usr/bin/pip</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pip <span class="keyword">import</span> main</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    sys.exit(main())</span><br></pre></td></tr></table></figure><p>改为</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pip <span class="keyword">import</span> __main__</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    sys.exit(__main__._main())</span><br></pre></td></tr></table></figure><hr><p><s>成功!!!</s><br>失败了，笑脸:-)，手动安装吧。。。</p><ul><li><p>部分包可使用<code>pip3</code></p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ pip3 install numpy</span><br><span class="line">$ pip3 install pandas</span><br><span class="line">$ pip3 install sklearn</span><br></pre></td></tr></table></figure><blockquote><p>若需要权限，加入<code>--user</code></p></blockquote></li><li><p>部分包用<code>apt-get</code>，但是优先安装到<code>Python2.7</code>版本，笑脸:-)</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install python-scipy</span><br><span class="line">$ sudo apt-get install python-matplotlib</span><br><span class="line">$ sudo apt-get install python-opencv   </span><br></pre></td></tr></table></figure></li><li><p>部分从<code>PIPY</code>下载<code>.whl</code>或<code>.tar.gz</code>文件</p><blockquote><p><a href="https://pypi.org/">PyPI – the Python Package Index · PyPI</a></p><ul><li>tensorboardX-1.4-py2.py3-none-any.whl</li><li>visdom-0.1.8.5.tar.gz</li></ul></blockquote><p>安装指令为</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ pip3 install xxx.whl</span><br></pre></td></tr></table></figure>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxvf xxx.tar.gz</span><br><span class="line">$ python setup.py install</span><br></pre></td></tr></table></figure></li><li><p><code>Pytorch</code>源码安装</p><blockquote><p><a href="https://github.com/pytorch/pytorch">pytorch/pytorch: Tensors and Dynamic neural networks in Python with strong GPU acceleration </a></p></blockquote><p>安装方法<a href="https://github.com/pytorch/pytorch#from-source">Installation - From Source</a></p><p>需要用到<code>miniconda</code>，安装方法如下，注意中间回车按慢一点，有两次输入。。。。。(行我慢慢看条款不行么。。笑脸:-))</p><ul><li>第一次是是否同意条款，<code>yes</code></li><li>第二次是添加到环境变量，<code>yes</code>，否则自己修改<code>/home/pi/.bashrc</code>添加到环境变量</li></ul>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ wget http://repo.continuum.io/miniconda/Miniconda3-latest-Linux-armv7l.sh</span><br><span class="line">$ sudo md5sum Miniconda3-latest-Linux-armv7l.sh # (optional) check md5</span><br><span class="line">$ sudo /bin/bash Miniconda3-latest-Linux-armv7l.sh </span><br><span class="line"># -&gt; change default directory to /home/pi/miniconda3</span><br><span class="line">$ sudo nano /home/pi/.bashrc </span><br><span class="line"># -&gt; add: export PATH=&quot;/home/pi/miniconda3/bin:$PATH&quot;</span><br><span class="line">$ sudo reboot -h now</span><br><span class="line"></span><br><span class="line">$ conda </span><br><span class="line">$ python --version</span><br><span class="line">$ sudo chown -R pi miniconda3</span><br></pre></td></tr></table></figure><p><s>然后就可以安装了</s>没有对应版本的<code>mkl</code>，笑脸:-)</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">export CMAKE_PREFIX_PATH=&quot;$(dirname $(which conda))/../&quot; # [anaconda root directory]</span><br><span class="line"></span><br><span class="line"># Disable CUDA</span><br><span class="line">export NO_CUDA=1</span><br><span class="line"></span><br><span class="line"># Install basic dependencies</span><br><span class="line">conda install numpy pyyaml mkl mkl-include setuptools cmake cffi typing</span><br><span class="line">conda install -c mingfeima mkldnn</span><br><span class="line"></span><br><span class="line"># Install Pytorch</span><br><span class="line">git clone --recursive https://github.com/pytorch/pytorch</span><br><span class="line">cd pytorch</span><br><span class="line">python setup.py install</span><br></pre></td></tr></table></figure></li><li><p><code>tensorflow</code><br>安装tensorflow需要的一些依赖和工具</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get update</span><br><span class="line"></span><br><span class="line"># For Python 2.7</span><br><span class="line">$ sudo apt-get install python-pip python-dev</span><br><span class="line"></span><br><span class="line"># For Python 3.3+</span><br><span class="line">$ sudo apt-get install python3-pip python3-dev</span><br></pre></td></tr></table></figure><p>安装<code>tensorflow</code></p><blockquote><p>若下载失败，手动打开下面网页下载<code>.whl</code>包</p></blockquote>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># For Python 2.7</span><br><span class="line">$ wget https://github.com/samjabrahams/tensorflow-on-raspberry-pi/releases/download/v1.1.0/tensorflow-1.1.0-cp27-none-linux_armv7l.whl</span><br><span class="line">$ sudo pip install tensorflow-1.1.0-cp27-none-linux_armv7l.whl</span><br><span class="line"></span><br><span class="line"># For Python 3.4</span><br><span class="line">$ wget https://github.com/samjabrahams/tensorflow-on-raspberry-pi/releases/download/v1.1.0/tensorflow-1.1.0-cp34-cp34m-linux_armv7l.whl</span><br><span class="line">$ sudo pip3 install tensorflow-1.1.0-cp34-cp34m-linux_armv7l.whl</span><br></pre></td></tr></table></figure><p>卸载，重装mock</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># For Python 2.7</span><br><span class="line">$ sudo pip uninstall mock</span><br><span class="line">$ sudo pip install mock</span><br><span class="line"></span><br><span class="line"># For Python 3.3+</span><br><span class="line">$ sudo pip3 uninstall mock</span><br><span class="line">$ sudo pip3 install mock</span><br></pre></td></tr></table></figure><p>安装的版本<code>tensorflow v1.1.0</code>没有<code>models</code>，因为1.0版本以后models就被<code>Sam Abrahams</code>独立出来了，例如<code>classify_image.py</code>就在<code>models/tutorials/image/imagenet/</code>里</p><blockquote><p><a href="https://github.com/tensorflow/models">tensorflow/models</a></p></blockquote></li></ul><h2 id="其余">其余</h2><ol><li><p>输入法</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install fcitx fcitx-googlepinyin </span><br><span class="line">$ fcitx-module-cloudpinyin fcitx-sunpinyin</span><br></pre></td></tr></table></figure></li><li><p><code>git</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-get install git</span><br></pre></td></tr></table></figure><p>配置<code>git</code>和<code>ssh</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name &quot;Louis Hsu&quot;</span><br><span class="line">$ git config --global user.email is.louishsu@foxmail.com</span><br><span class="line"></span><br><span class="line">$ ssh-keygen -t rsa -C &quot;is.louishsu@foxmail.com&quot;</span><br><span class="line">$ cat ~/.ssh/id_rsa.pub  # 添加到github</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
